<?xml version="1.0" encoding="UTF-8"?><dictionary case_sensitive="false">
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.LoadoutItem,</token>
<token>Core]],Property</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.APIAccountRole,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.NodePermission,</token>
</entry>
<entry count="2">
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Demo.Models.OAuth.Client,</token>
<token>OSharp.Demo.Core]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration,WillCascadeOnDelete</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
<token>Models]],Property</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.OAuth.Client,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
</entry>
<entry count="2">
<token>Models.Movies.Genre,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
</entry>
<entry count="2">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.NodePermission,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>Bonobo.Git.Server]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.LoadoutItem,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Demo.Models.OAuth.ClientSecret,</token>
<token>OSharp.Demo.Core],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
</entry>
<entry count="14">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.DataSetting,</token>
<token>Core]],Property</token>
</entry>
<entry count="1">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
</entry>
<entry count="1">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="4">
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Property</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],Property</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.Role,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.UserRoleMap,</token>
<token>OSharp.Demo.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.User,</token>
</entry>
<entry count="1">
<token>OSharp.Core.Logging.DataLog,</token>
<token>OSharp.Core],[TTargetEntityType</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.PlayerNode,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
</entry>
<entry count="2">
<token>OSharp.Demo.Models.Identity.UserRoleMap,</token>
<token>OSharp.Demo.Core],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.DbPlayer,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.GroupNode,</token>
<token>Core]],Property</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.ServerCharacters.SlotItem,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],WithMany</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="4">
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Map</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Property</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.ProductFamily,</token>
<token>WebStack.QA.Test.OData]],Property</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
</entry>
<entry count="1">
<token>Models.Movies.Genre,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.APIAccount,</token>
</entry>
<entry count="5">
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models],[TTargetEntityType</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Supplier,</token>
<token>WebStack.QA.Test.OData]],Property</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],Map</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.User,</token>
<token>OSharp.Demo.Core]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="1">
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],Map</token>
</entry>
<entry count="1">
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="5">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
</entry>
<entry count="5">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
</entry>
<entry count="5">
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],Property</token>
</entry>
<entry count="3">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>OSharp.Core]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration,WillCascadeOnDelete</token>
</entry>
<entry count="3">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Product,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Core.Logging.DataLog,</token>
<token>OSharp.Core]],WithMany</token>
</entry>
<entry count="3">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],Property</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Core]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.UserRoleMap,</token>
<token>OSharp.Demo.Core],[TTargetEntityType</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],WithMany</token>
</entry>
<entry count="5">
<token>Bonobo.Git.Server]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Supplier,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>System.Data.Entity.Migrations.History.HistoryRow,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration,HasColumnType</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.DateAndTimeOfDayModel,</token>
</entry>
<entry count="1">
<token>Models.Movies.Keyword,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Data.Entity.Migrations.History.HistoryRow,</token>
<token>EntityFramework,</token>
<token>6.0.0.0]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="2">
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Map</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="5">
<token>Bonobo.Git.Server]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.Character,</token>
<token>Core]],Property</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.DateAndTimeOfDayModel,</token>
<token>WebStack.QA.Test.OData]],Property</token>
</entry>
<entry count="3">
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.ProductFamily,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
</entry>
<entry count="3">
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Map</token>
</entry>
<entry count="1">
<token>Models.Movies.Keyword,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.NodePermission,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Core]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration,HasColumnType</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="7">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
</entry>
<entry count="1">
<token>Models.Movies.Genre,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],WithMany</token>
</entry>
<entry count="3">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="1">
<token>6.0.0.0]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="3">
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Demo.Models.OAuth.Client,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Data.Entity.Migrations.History.HistoryRow,</token>
<token>EntityFramework,</token>
<token>6.0.0.0]],Property</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.GroupNode,</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Group,</token>
<token>Core]],Property</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.NodePermission,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>OSharp.Core.Logging.DataLogItem,</token>
<token>OSharp.Core],[TTargetEntityType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
<token>Models]],Property</token>
</entry>
<entry count="1">
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="2">
<token>EntityFramework,</token>
<token>6.0.0.0]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="1">
<token>Models.Movies.Show,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.DbPlayer,</token>
<token>Core]],Property</token>
</entry>
<entry count="2">
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.User,</token>
<token>OSharp.Demo.Core]],WithMany</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Supplier,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>Models.Movies.Language,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.NodePermission,</token>
<token>Core]],Property</token>
</entry>
<entry count="2">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="2">
<token>System.Data.Entity.Migrations.History.HistoryRow,</token>
<token>EntityFramework,</token>
</entry>
<entry count="1">
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration,Remove</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration,Remove</token>
</entry>
<entry count="3">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Property</token>
</entry>
<entry count="2">
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
</entry>
<entry count="10">
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
<token>Models]],Property</token>
</entry>
<entry count="4">
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Supplier,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.APIAccount,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerNode,</token>
<token>Core]],Property</token>
</entry>
<entry count="1">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>6.0.0.0]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
</entry>
<entry count="2">
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.APIAccountRole,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],Map</token>
</entry>
<entry count="1">
<token>Models.Movies.Language,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1[[TDependentEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.APIAccount,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
<token>Models]],Property</token>
</entry>
<entry count="2">
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerNode,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.UserRoleMap,</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.APIAccount,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
</entry>
<entry count="1">
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
<token>Models]],Property</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.GroupNode,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.UserRoleMap,</token>
<token>OSharp.Demo.Core],[TTargetEntityType</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="2">
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="1">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.ServerCharacters.SlotItem,</token>
<token>Core]],Property</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
</entry>
<entry count="1">
<token>Models.Movies.Movie,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Supplier,</token>
<token>WebStack.QA.Test.OData]],Property</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Property</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],Property</token>
</entry>
<entry count="1">
<token>Models.Movies.Language,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
<token>Models]],Property</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.LoadoutItem,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Data.Entity.Migrations.History.HistoryRow,</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.DbPlayer,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.DateAndTimeOfDayModel,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration,HasColumnType</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.NodePermission,</token>
<token>Core]],Property</token>
</entry>
<entry count="4">
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
</entry>
<entry count="1">
<token>OSharp.Core.Logging.DataLogItem,</token>
<token>OSharp.Core],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
</entry>
<entry count="3">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],Property</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Group,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.User,</token>
<token>OSharp.Demo.Core]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.DataSetting,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Core]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerNode,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1[[TDependentEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
</entry>
<entry count="1">
<token>OSharp.Core.Logging.DataLog,</token>
<token>OSharp.Core],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration,Remove</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.Character,</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Supplier,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.DateAndTimeOfDayModel,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration,HasColumnType</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.DateAndTimeOfDayModel,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration,HasColumnType</token>
</entry>
<entry count="3">
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
</entry>
<entry count="2">
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.ServerCharacters.SlotItem,</token>
<token>Core]],Property</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.OAuth.Client,</token>
<token>OSharp.Demo.Core]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration,WillCascadeOnDelete</token>
</entry>
<entry count="2">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.Character,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>Models.Movies.Keyword,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
</entry>
<entry count="3">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.DbPlayer,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Product,</token>
<token>WebStack.QA.Test.OData]],Property</token>
</entry>
<entry count="1">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.APIAccountRole,</token>
<token>Core]],Property</token>
</entry>
<entry count="2">
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="1">
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar,Add</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar,Add</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar,Add</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
</entry>
<entry count="1">
<token>OSharp.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Core.Logging.DataLog,</token>
<token>OSharp.Core]],WithMany</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerNode,</token>
</entry>
<entry count="10">
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
</entry>
<entry count="2">
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
</entry>
<entry count="1">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.PlayerNode,</token>
<token>Core]],Property</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.ProductFamily,</token>
<token>WebStack.QA.Test.OData]],Property</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.UserRoleMap,</token>
<token>OSharp.Demo.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.Role,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
</entry>
<entry count="2">
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
</entry>
<entry count="2">
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasColumnName</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.ProductFamily,</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration,HasColumnType</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerNode,</token>
<token>Core]],Property</token>
</entry>
<entry count="22">
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.APIAccountRole,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Map</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.GroupNode,</token>
<token>Core]],Property</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="14">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Supplier,</token>
</entry>
<entry count="5">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>OSharp.Core.Logging.DataLog,</token>
<token>OSharp.Core],[TTargetEntityType</token>
</entry>
<entry count="1">
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="2">
<token>EntityFramework,</token>
<token>6.0.0.0]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="1">
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="14">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.LoadoutItem,</token>
<token>Core]],Property</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.APIAccount,</token>
<token>Core]],Property</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
</entry>
<entry count="1">
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],Property</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="1">
<token>Models.Movies.Language,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.Role,</token>
<token>OSharp.Demo.Core]],WithMany</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Group,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="3">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Data.Entity.Migrations.History.HistoryRow,</token>
<token>EntityFramework,</token>
<token>6.0.0.0]],Property</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Property</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
</entry>
<entry count="1">
<token>Models.Movies.Genre,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
</entry>
<entry count="14">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Map</token>
</entry>
<entry count="1">
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration,HasColumnType</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1[[TDependentEntityType</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.ProductFamily,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.NodePermission,</token>
<token>Core]],Property</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Product,</token>
</entry>
<entry count="2">
<token>TDSM.Core.ServerCharacters.SlotItem,</token>
<token>Core]],Property</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.UserRoleMap,</token>
<token>OSharp.Demo.Core],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
</entry>
<entry count="4">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
</entry>
<entry count="1">
<token>Models.Movies.Movie,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
</entry>
<entry count="1">
<token>Models.Movies.Keyword,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
</entry>
<entry count="9">
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
</entry>
<entry count="1">
<token>OSharp.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Core.Logging.DataLog,</token>
<token>OSharp.Core]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration,WillCascadeOnDelete</token>
</entry>
<entry count="1">
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],Property</token>
</entry>
<entry count="6">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.GroupNode,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.User,</token>
<token>OSharp.Demo.Core]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar,Add</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar,Add</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar,Add</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar,Add</token>
</entry>
<entry count="5">
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.DbPlayer,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.APIAccountRole,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Models.Movies.Genre,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.LoadoutItem,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Product,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>Models.Movies.Show,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="2">
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.ServerCharacters.SlotItem,</token>
</entry>
<entry count="10">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.DataSetting,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.UserRoleMap,</token>
<token>OSharp.Demo.Core],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.Character,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="4">
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Core.Logging.OperateLog,</token>
<token>OSharp.Core]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration,WillCascadeOnDelete</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>System.Data.Entity.Migrations.History.HistoryRow,</token>
</entry>
<entry count="4">
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Map</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration,HasColumnType</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
</entry>
<entry count="1">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
</entry>
<entry count="4">
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Property</token>
</entry>
<entry count="2">
<token>6.0.0.0]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="5">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerNode,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.ProductFamily,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="3">
<token>System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar,Add</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar,Add</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.DataSetting,</token>
<token>Core]],Property</token>
</entry>
<entry count="2">
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.APIAccountRole,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],Property</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasColumnName</token>
</entry>
<entry count="1">
<token>Models.Movies.Genre,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,IsRequired</token>
</entry>
<entry count="1">
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],Map</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
</entry>
<entry count="7">
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
</entry>
<entry count="5">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasColumnName</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,IsRequired</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
</entry>
<entry count="8">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
</entry>
<entry count="1">
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
</entry>
<entry count="4">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>OSharp.Core.Logging.DataLogItem,</token>
<token>OSharp.Core],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>System.Data.Entity.Migrations.History.HistoryRow,</token>
<token>EntityFramework,</token>
<token>6.0.0.0]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="1">
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models],[TTargetEntityType</token>
</entry>
<entry count="1">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
<token>Models]],Map</token>
</entry>
<entry count="1">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.APIAccount,</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Models.Identity.User,</token>
<token>OSharp.Demo.Core]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.NodePermission,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.User,</token>
</entry>
<entry count="2">
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerNode,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>OSharp.Core.Logging.DataLog,</token>
<token>OSharp.Core],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
</entry>
<entry count="2">
<token>Bonobo.Git.Server]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.DataSetting,</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Supplier,</token>
<token>WebStack.QA.Test.OData]],Property</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.LoadoutItem,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>OSharp.Core.Logging.DataLogItem,</token>
<token>OSharp.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Core.Logging.DataLog,</token>
</entry>
<entry count="1">
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],Property</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.OAuth.ClientSecret,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.LoadoutItem,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="9">
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
</entry>
<entry count="2">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
<token>Models]],Map</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.Role,</token>
</entry>
<entry count="2">
<token>Models.Movies.Genre,</token>
<token>Models]],Map</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
</entry>
<entry count="2">
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Product,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="4">
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.LoadoutItem,</token>
</entry>
<entry count="2">
<token>Models.Movies.Language,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="9">
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Supplier,</token>
</entry>
<entry count="3">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="1">
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.DateAndTimeOfDayModel,</token>
<token>WebStack.QA.Test.OData]],Property</token>
</entry>
<entry count="4">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.GroupNode,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.ServerCharacters.SlotItem,</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.ServerCharacters.SlotItem,</token>
</entry>
<entry count="1">
<token>Models.Movies.Show,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="4">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="2">
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Supplier,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasColumnName</token>
</entry>
<entry count="2">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="1">
<token>OSharp.Core.Logging.DataLog,</token>
<token>OSharp.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Core.Logging.OperateLog,</token>
</entry>
<entry count="2">
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.LoadoutItem,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],Property</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.User,</token>
<token>OSharp.Demo.Core]],WithMany</token>
</entry>
<entry count="1">
<token>Models.Movies.Show,</token>
<token>Models]],Property</token>
</entry>
<entry count="1">
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
</entry>
<entry count="11">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.APIAccountRole,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="10">
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Property</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
<token>Models]],Property</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.OAuth.ClientSecret,</token>
<token>OSharp.Demo.Core],[TTargetEntityType</token>
</entry>
<entry count="2">
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],Property</token>
</entry>
<entry count="9">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
</entry>
<entry count="1">
<token>Models.Movies.Keyword,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
</entry>
<entry count="2">
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
</entry>
<entry count="11">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="4">
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerNode,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Group,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.DataSetting,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Supplier,</token>
<token>WebStack.QA.Test.OData]],Property</token>
</entry>
<entry count="1">
<token>OSharp.Core.Logging.DataLogItem,</token>
<token>OSharp.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Core.Logging.DataLog,</token>
<token>OSharp.Core]],WithMany</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.GroupNode,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
</entry>
<entry count="5">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.ServerCharacters.SlotItem,</token>
</entry>
<entry count="3">
<token>OSharp.Demo.Core],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
<token>Models]],Property</token>
</entry>
<entry count="1">
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Group,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="2">
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Demo.Models.OAuth.ClientSecret,</token>
<token>OSharp.Demo.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.OAuth.Client,</token>
</entry>
<entry count="3">
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
</entry>
<entry count="1">
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
<token>Models]],Map</token>
</entry>
<entry count="1">
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.ProductFamily,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Core.Logging.DataLog,</token>
<token>OSharp.Core],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Product,</token>
<token>WebStack.QA.Test.OData]],Property</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.APIAccountRole,</token>
</entry>
<entry count="18">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Core.Logging.DataLogItem,</token>
<token>OSharp.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Core.Logging.DataLog,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
</entry>
<entry count="4">
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.APIAccountRole,</token>
<token>Core]],Property</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
<token>Models]],Property</token>
</entry>
<entry count="1">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],Map</token>
</entry>
<entry count="1">
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1[[TDependentEntityType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.APIAccount,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
</entry>
<entry count="1">
<token>Models.Movies.Language,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],HasForeignKey</token>
</entry>
<entry count="3">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="4">
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],Property</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.GroupNode,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Supplier,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.DataSetting,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Core.Logging.DataLog,</token>
<token>OSharp.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Core.Logging.OperateLog,</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Models.OAuth.ClientSecret,</token>
<token>OSharp.Demo.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.OAuth.Client,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
<token>Core]],Property</token>
</entry>
<entry count="2">
<token>Bonobo.Git.Server]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
</entry>
<entry count="5">
<token>Bonobo.Git.Server]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.DataSetting,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Supplier,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.LoadoutItem,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.LoadoutItem,</token>
<token>Core]],Property</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.ProductFamily,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],Property</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.APIAccountRole,</token>
<token>Core]],Property</token>
</entry>
<entry count="1">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,IsRequired</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.ServerCharacters.SlotItem,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
</entry>
<entry count="2">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Core.Logging.DataLogItem,</token>
<token>OSharp.Core],[TTargetEntityType</token>
</entry>
<entry count="32">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1[[TDependentEntityType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],HasForeignKey</token>
</entry>
<entry count="1">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
</entry>
<entry count="4">
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="5">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.GroupNode,</token>
<token>Core]],Property</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Group,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.DateAndTimeOfDayModel,</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],Property</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.DbPlayer,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models],[TTargetEntityType</token>
</entry>
<entry count="2">
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.GroupNode,</token>
</entry>
<entry count="14">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],Map</token>
</entry>
<entry count="4">
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],WithMany</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Supplier,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasColumnName</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Models.Identity.UserRoleMap,</token>
<token>OSharp.Demo.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.Role,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
</entry>
<entry count="4">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="2">
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.ServerCharacters.SlotItem,</token>
<token>Core]],Property</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerNode,</token>
</entry>
<entry count="1">
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],Map</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Core.Logging.OperateLog,</token>
<token>OSharp.Core]],WithMany</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
</entry>
<entry count="1">
<token>OSharp.Core.Logging.OperateLog,</token>
<token>OSharp.Core]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration,WillCascadeOnDelete</token>
</entry>
<entry count="4">
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="2">
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
</entry>
<entry count="1">
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1[[TDependentEntityType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
</entry>
<entry count="1">
<token>Models.Movies.Keyword,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.DbPlayer,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration,HasColumnType</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.DateAndTimeOfDayModel,</token>
<token>WebStack.QA.Test.OData]],Property</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,IsRequired</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>System.Data.Entity.Migrations.History.HistoryRow,</token>
<token>EntityFramework,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.NodePermission,</token>
<token>Core]],Property</token>
</entry>
<entry count="2">
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.NodePermission,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.Role,</token>
<token>OSharp.Demo.Core]],WithMany</token>
</entry>
<entry count="2">
<token>TDSM.Core.ServerCharacters.SlotItem,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Map</token>
</entry>
<entry count="7">
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="2">
<token>Models.Movies.Language,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.LoadoutItem,</token>
<token>Core]],Property</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],Property</token>
</entry>
<entry count="4">
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.APIAccountRole,</token>
<token>Core]],Property</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.PlayerNode,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>TDSM.Core.ServerCharacters.SlotItem,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>Models.Movies.Genre,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.APIAccount,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="8">
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
</entry>
<entry count="8">
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1[[TDependentEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
<token>Core]],Property</token>
</entry>
<entry count="1">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Map</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="5">
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>OSharp.Core.Logging.DataLog,</token>
</entry>
<entry count="1">
<token>OSharp.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Core.Logging.OperateLog,</token>
<token>OSharp.Core]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration,WillCascadeOnDelete</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
</entry>
<entry count="10">
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Demo.Models.OAuth.Client,</token>
<token>OSharp.Demo.Core]],WithMany</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.Character,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Models.Identity.UserRoleMap,</token>
<token>OSharp.Demo.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.User,</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.GroupNode,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>System.Data.Entity.Migrations.History.HistoryRow,</token>
</entry>
<entry count="2">
<token>Models.Movies.Genre,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.Character,</token>
<token>Core]],Property</token>
</entry>
<entry count="1">
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],Property</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
<token>Models]],Property</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.APIAccount,</token>
<token>Core]],Property</token>
</entry>
<entry count="1">
<token>Models.Movies.Language,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="1">
<token>Models.Movies.Genre,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Models.Movies.Movie,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
</entry>
<entry count="3">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
</entry>
<entry count="4">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
</entry>
<entry count="5">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Data.Entity.Migrations.History.HistoryRow,</token>
<token>EntityFramework,</token>
<token>6.0.0.0]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
</entry>
<entry count="1">
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],Map</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.NodePermission,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="14">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>OSharp.Core.Logging.DataLog,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1[[TDependentEntityType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Models.OAuth.ClientSecret,</token>
<token>OSharp.Demo.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.OAuth.Client,</token>
<token>OSharp.Demo.Core]],WithMany</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
</entry>
<entry count="2">
<token>Models.Movies.Genre,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
</entry>
<entry count="2">
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.APIAccount,</token>
</entry>
<entry count="6">
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.UserRoleMap,</token>
<token>OSharp.Demo.Core],[TTargetEntityType</token>
</entry>
<entry count="1">
<token>Models.Movies.Genre,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1[[TDependentEntityType</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.LoadoutItem,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Models.Identity.UserRoleMap,</token>
<token>OSharp.Demo.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.Role,</token>
<token>OSharp.Demo.Core]],WithMany</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.APIAccount,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
</entry>
<entry count="14">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="4">
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
</entry>
<entry count="1">
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="79">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.Character,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
<token>Models]],Map</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasColumnName</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.Character,</token>
<token>Core]],Property</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
</entry>
<entry count="2">
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.DbPlayer,</token>
</entry>
<entry count="1">
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],HasForeignKey</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
</entry>
<entry count="2">
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.GroupNode,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Core]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.UserRoleMap,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.Character,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Product,</token>
</entry>
<entry count="1">
<token>Models.Movies.Keyword,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],Map</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Supplier,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.ProductFamily,</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration,Remove</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.Character,</token>
<token>Core]],Property</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Models.OAuth.Client,</token>
<token>OSharp.Demo.Core]],WithMany</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.APIAccount,</token>
<token>Core]],Property</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.ProductFamily,</token>
<token>WebStack.QA.Test.OData]],Property</token>
</entry>
<entry count="1">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
</entry>
<entry count="1">
<token>OSharp.Core.Logging.DataLog,</token>
<token>OSharp.Core]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration,WillCascadeOnDelete</token>
</entry>
<entry count="2">
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Product,</token>
<token>WebStack.QA.Test.OData]],Property</token>
</entry>
<entry count="7">
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.ProductFamily,</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],WithMany</token>
</entry>
<entry count="2">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],Map</token>
</entry>
<entry count="14">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
<token>Models]],Map</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.DateAndTimeOfDayModel,</token>
<token>WebStack.QA.Test.OData]],Property</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
</entry>
<entry count="1">
<token>6.0.0.0]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="14">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.ProductFamily,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Property</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Models.Movies.Language,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.DbPlayer,</token>
<token>Core]],Property</token>
</entry>
<entry count="1">
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Models.OAuth.ClientSecret,</token>
<token>OSharp.Demo.Core],[TTargetEntityType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="1">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration,Remove</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>Models.Movies.Keyword,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],Property</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.Character,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Models.Movies.Language,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
</entry>
<entry count="1">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="4">
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Group,</token>
<token>Core]],Property</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
</entry>
<entry count="1">
<token>OSharp.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Core.Logging.OperateLog,</token>
<token>OSharp.Core]],WithMany</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Property</token>
</entry>
<entry count="2">
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],WithMany</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.APIAccountRole,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.DateAndTimeOfDayModel,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration,HasColumnType</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.DbPlayer,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Models.Movies.Keyword,</token>
<token>Models]],Map</token>
</entry>
<entry count="2">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.DataSetting,</token>
<token>Core]],Property</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Core.Logging.DataLogItem,</token>
</entry>
<entry count="3">
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
</entry>
<entry count="1">
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.DateAndTimeOfDayModel,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration,HasColumnType</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>Models.Movies.Language,</token>
<token>Models]],Property</token>
</entry>
<entry count="1">
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
</entry>
<entry count="2">
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Map</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Product,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1[[TDependentEntityType</token>
</entry>
<entry count="2">
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
</entry>
<entry count="1">
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.GroupNode,</token>
<token>Core]],Property</token>
</entry>
<entry count="1">
<token>OSharp.Core.Logging.DataLogItem,</token>
<token>OSharp.Core],[TTargetEntityType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.Character,</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Models.Identity.Role,</token>
<token>OSharp.Demo.Core]],WithMany</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Core.Logging.OperateLog,</token>
</entry>
<entry count="2">
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="14">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>System.Data.Entity.Migrations.History.HistoryRow,</token>
<token>EntityFramework,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1[[TDependentEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],WithMany</token>
</entry>
<entry count="2">
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],Map</token>
</entry>
<entry count="1">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="1">
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.APIAccountRole,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.APIAccount,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.DataSetting,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>Models.Movies.Genre,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
</entry>
<entry count="1">
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
<token>Models]],Map</token>
</entry>
<entry count="2">
<token>EntityFramework,</token>
<token>6.0.0.0]],Property</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
<token>Models]],Map</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="6">
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Demo.Models.OAuth.ClientSecret,</token>
</entry>
<entry count="1">
<token>Models.Movies.Movie,</token>
<token>Models]],Property</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Core.Logging.DataLog,</token>
<token>OSharp.Core],[TTargetEntityType</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Group,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
</entry>
<entry count="9">
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Models.Movies.Language,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
</entry>
<entry count="1">
<token>OSharp.Core.Logging.OperateLog,</token>
<token>OSharp.Core]],WithMany</token>
</entry>
<entry count="1">
<token>OSharp.Core.Logging.DataLog,</token>
<token>OSharp.Core]],WithMany</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.APIAccount,</token>
<token>Core]],Property</token>
</entry>
<entry count="1">
<token>OSharp.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Core.Logging.DataLog,</token>
</entry>
<entry count="3">
<token>Models.Movies.Genre,</token>
<token>Models]],Property</token>
</entry>
<entry count="1">
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models],[TTargetEntityType</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
</entry>
<entry count="8">
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Product,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration,Remove</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="2">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],Map</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="12">
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
</entry>
<entry count="1">
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration,HasColumnType</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.DateAndTimeOfDayModel,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.DateAndTimeOfDayModel,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration,HasColumnType</token>
</entry>
<entry count="8">
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
</entry>
<entry count="7">
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
<token>Core]],Property</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Data.Entity.Migrations.History.HistoryRow,</token>
<token>EntityFramework,</token>
</entry>
<entry count="2">
<token>Models.Movies.Genre,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
</entry>
<entry count="1">
<token>Models.Movies.Keyword,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
</entry>
<entry count="1">
<token>Models.Movies.Genre,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>OSharp.Core.Logging.DataLogItem,</token>
</entry>
<entry count="5">
<token>Bonobo.Git.Server]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
</entry>
<entry count="2">
<token>OSharp.Core],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.PlayerNode,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="32">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.DbPlayer,</token>
</entry>
<entry count="1">
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="2">
<token>TDSM.Core.ServerCharacters.SlotItem,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
<token>Core]],Property</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Models.Identity.User,</token>
<token>OSharp.Demo.Core]],WithMany</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.NodePermission,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
</entry>
<entry count="3">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],Property</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1[[TDependentEntityType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],HasForeignKey</token>
</entry>
<entry count="1">
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],Map</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Group,</token>
<token>Core]],Property</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>Models.Movies.Keyword,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Models.Identity.User,</token>
<token>OSharp.Demo.Core]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.UserRoleMap,</token>
</entry>
<entry count="1">
<token>Models.Movies.Genre,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Group,</token>
<token>Core]],Property</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="5">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.User,</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Models.Identity.UserRoleMap,</token>
<token>OSharp.Demo.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.User,</token>
<token>OSharp.Demo.Core]],WithMany</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],WithMany</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Core.Logging.DataLogItem,</token>
<token>OSharp.Core],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
</entry>
<entry count="1">
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="2">
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.UserRoleMap,</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Property</token>
</entry>
<entry count="14">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="2">
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.APIAccountRole,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>OSharp.Demo.Models.Identity.UserRoleMap,</token>
<token>OSharp.Demo.Core],[TTargetEntityType</token>
</entry>
<entry count="2">
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
</entry>
<entry count="2">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.GroupNode,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Map</token>
</entry>
<entry count="9">
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
</entry>
<entry count="1">
<token>Models.Movies.Genre,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.DateAndTimeOfDayModel,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Group,</token>
</entry>
<entry count="10">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Property</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.Character,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],WithMany</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Supplier,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasColumnName</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
<token>Models]],Property</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="1">
<token>OSharp.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Core.Logging.OperateLog,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
</entry>
<entry count="4">
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
</entry>
<entry count="1">
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],Map</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>Models.Movies.Keyword,</token>
<token>Models]],Property</token>
</entry>
<entry count="14">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Core]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration,WillCascadeOnDelete</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.NodePermission,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],WithMany</token>
</entry>
<entry count="2">
<token>Models.Movies.Language,</token>
<token>Models]],Map</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.BackdropImageInfo,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Property</token>
</entry>
<entry count="4">
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Supplier,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.OAuth.ClientSecret,</token>
<token>OSharp.Demo.Core],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Models.OAuth.Client,</token>
<token>OSharp.Demo.Core]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration,WillCascadeOnDelete</token>
</entry>
<entry count="1">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
</entry>
<entry count="3">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
</entry>
<entry count="3">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
</entry>
<entry count="24">
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="3">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>System.Data.Entity.Migrations.History.HistoryRow,</token>
<token>EntityFramework,</token>
<token>6.0.0.0]],Property</token>
</entry>
<entry count="2">
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Group,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,ToTable</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.ServerCharacters.SlotItem,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],Property</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Group,</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Models.Identity.User,</token>
<token>OSharp.Demo.Core]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="2">
<token>Bonobo.Git.Server]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="22">
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="2">
<token>Models.Movies.Genre,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Property</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.DbPlayer,</token>
<token>Core]],Property</token>
</entry>
<entry count="8">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="8">
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
</entry>
<entry count="4">
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],WithMany</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.Product,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasColumnName</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Group,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.NodePermission,</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.OAuth.Client,</token>
<token>OSharp.Demo.Core]],WithMany</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.RefreshToken,</token>
<token>Models]],Property</token>
</entry>
<entry count="1">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1[[TDependentEntityType</token>
</entry>
<entry count="3">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.DbPlayer,</token>
<token>Core]],Property</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Models.OAuth.ClientSecret,</token>
<token>OSharp.Demo.Core],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Demo.Models.OAuth.ClientSecret,</token>
<token>OSharp.Demo.Core],[TTargetEntityType</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
</entry>
<entry count="3">
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>Models.Users.Authorization.ClientApplication,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.ProductFamily,</token>
<token>WebStack.QA.Test.OData]],Property</token>
</entry>
<entry count="1">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],Property</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.LoadoutItem,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="19">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Core.Logging.DataLog,</token>
<token>OSharp.Core]],WithMany</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration,WillCascadeOnDelete</token>
</entry>
<entry count="1">
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration,HasColumnType</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData.Common.Models.ProductFamilies.ProductFamily,</token>
<token>WebStack.QA.Test.OData]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasColumnName</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.PosterImageInfo,</token>
<token>Models]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="2">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.DbPlayer,</token>
<token>Core]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration,HasDatabaseGeneratedOption</token>
</entry>
<entry count="1">
<token>Models],[TTargetEntityType</token>
<token>-&gt;</token>
<token>Models.Users.Authorization.ClientApplication,</token>
</entry>
<entry count="1">
<token>EntityFramework,</token>
<token>6.0.0.0]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Property</token>
</entry>
<entry count="5">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapLeftKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Map</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>OSharp.Core.Logging.DataLog,</token>
<token>OSharp.Core],[TTargetEntityType</token>
<token>-&gt;</token>
<token>OSharp.Core.Logging.OperateLog,</token>
<token>OSharp.Core]],WithMany</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Property</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,IsRequired</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
</entry>
<entry count="4">
<token>System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration,HasMaxLength</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1[[TStructuralType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Property</token>
</entry>
<entry count="3">
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration,MapRightKey</token>
<token>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2[[TEntityType</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server],[TTargetEntityType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerNode,</token>
<token>Core]],Property</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.DataSetting,</token>
<token>Core]],Property</token>
</entry>
</dictionary>
