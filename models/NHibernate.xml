<?xml version="1.0" encoding="UTF-8"?><dictionary case_sensitive="false">
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetMaxResults</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Fetch</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="8">
<token>NHibernate.ISession,Load</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PageContent,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],Future</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests],[TSubType</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,List</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskCostEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiQuery,SetParameter</token>
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,Add</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetParameterList</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.PageContent,</token>
<token>BetterCms.Module.Root]],And</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PageContent,</token>
</entry>
<entry count="1">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="8">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],SingleOrDefault</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="78">
<token>BetterCms.Module.Root]],List</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.EmptyInterceptor,new</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],JoinAlias</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,GetSessionImplementation</token>
<token>NHibernate.ISession,GetSessionImplementation</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],SelectList</token>
</entry>
<entry count="5">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetLockMode</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="4">
<token>Succinctly.Model.Product,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="128">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],SelectList</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetLockMode</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.PageContent,</token>
<token>BetterCms.Module.Root]],And</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Order,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],Fetch</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],Select</token>
</entry>
<entry count="24">
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="2">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],List</token>
</entry>
<entry count="3">
<token>NHibernate.ITransaction,Commit</token>
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
<token>NHibernate.IStatelessSession,BeginTransaction</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>TSaga],[TSubType</token>
<token>-&gt;</token>
<token>TSaga]],Select</token>
</entry>
<entry count="7">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
</entry>
<entry count="24">
<token>BetterCms.Module.Root]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],List</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],List</token>
</entry>
<entry count="1">
<token>TSaga],[TSubType</token>
<token>-&gt;</token>
<token>TSaga]],Select</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],And</token>
</entry>
<entry count="8">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="72">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="10">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="16">
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,UniqueResult</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="2">
<token>NHibernate.ISessionFactory,GetAllCollectionMetadata</token>
<token>NHibernate.ISessionFactory,GetAllClassMetadata</token>
</entry>
<entry count="6">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="97">
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Select</token>
</entry>
<entry count="11">
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],SingleOrDefault</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>TSaga]],List</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetResultTransformer</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>NHibernate.ISQLQuery,AddEntity</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="3">
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Take</token>
</entry>
<entry count="47">
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="10">
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="13">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Customer,</token>
<token>Model]],List</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="25">
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],SelectList</token>
</entry>
<entry count="11">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],SelectList</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetFirstResult</token>
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,UniqueResult</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,UniqueResult</token>
</entry>
<entry count="1">
<token>Model]],Fetch</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="144">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateFilter</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],And</token>
</entry>
<entry count="25">
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model]],Lock</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="54">
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,SetFirstResult</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>TSaga]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>TSaga],[TSubType</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],OrderBy</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root]],Future</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Order,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],JoinQueryOver</token>
</entry>
<entry count="3">
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.ICriteria,SetCacheable</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,UniqueResult</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="54">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="26">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
</entry>
<entry count="3">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetLockMode</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetLockMode</token>
</entry>
<entry count="41">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],OrderBy</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
</entry>
<entry count="1">
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests]],SingleOrDefault</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PageContent,</token>
<token>BetterCms.Module.Root]],RowCount</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SettingEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],RowCount</token>
</entry>
<entry count="1">
<token>BetterCms.Module.MediaManager]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Merge</token>
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="96">
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],List</token>
</entry>
<entry count="5">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="3">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="12">
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Update</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="9">
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch],[TSubType</token>
</entry>
<entry count="8">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Post,</token>
<token>Model]],ToRowCountQuery</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,EnableFilter</token>
<token>NHibernate.IFilter,SetParameter</token>
<token>NHibernate.ISession,DisableFilter</token>
</entry>
<entry count="14">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="2">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,UniqueResult</token>
</entry>
<entry count="26">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],Future</token>
</entry>
<entry count="98">
<token>BetterCms.Module.Root]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,Future</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="7">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Order,</token>
<token>Model]],Fetch</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],SingleOrDefault</token>
</entry>
<entry count="126">
<token>BetterCms.Module.MediaManager]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="149">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
</entry>
<entry count="382">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>TSaga]],List</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Model]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="194">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
</entry>
<entry count="54">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="4">
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],And</token>
</entry>
<entry count="26">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],SelectList</token>
</entry>
<entry count="12">
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Load</token>
<token>NHibernate.NHibernateUtil,IsInitialized</token>
<token>NHibernate.NHibernateUtil,Initialize</token>
<token>NHibernate.NHibernateUtil,IsPropertyInitialized</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests],[TSubType</token>
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
</entry>
<entry count="7">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="126">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PageContent,</token>
<token>BetterCms.Module.Root]],And</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="6">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Update</token>
</entry>
<entry count="5">
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityShiftEntity,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Select</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="5">
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="4">
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
</entry>
<entry count="24">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Future</token>
</entry>
<entry count="528">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetMaxResults</token>
</entry>
<entry count="3">
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch],[TSubType</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Where</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityShiftEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="1">
<token>Model]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],Take</token>
</entry>
<entry count="3">
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Lock</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Merge</token>
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],Where</token>
</entry>
<entry count="5">
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
</entry>
<entry count="2">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="234">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],List</token>
</entry>
<entry count="18">
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,GetCurrentLockMode</token>
<token>NHibernate.ISession,Lock</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetLockMode</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,Future</token>
</entry>
<entry count="1">
<token>Model]],Future</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityQueueEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetResultTransformer</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TSaga],[TSubType</token>
<token>-&gt;</token>
<token>TSaga]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="19">
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="295">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.PageContent,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PageContent,</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests]],SingleOrDefault</token>
</entry>
<entry count="1">
<token>Model]],List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="5">
<token>Succinctly.Model.Product,</token>
<token>Model]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests]],SingleOrDefault</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,UniqueResult</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TSaga]],Select</token>
</entry>
<entry count="5">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiQuery,List</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],SelectList</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,Future</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="16">
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
<token>Model]],List</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,GetCurrentLockMode</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="54">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],List</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
</entry>
<entry count="12">
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],Where</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,FutureValue</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="4">
<token>NHibernate.IQuery,SetFirstResult</token>
<token>NHibernate.IQuery,SetCacheable</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="66">
<token>BetterCms.Module.MediaManager]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="194">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="2">
<token>Model]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>Model]],OrderBy</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],List</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,EvictQueries</token>
<token>NHibernate.ISessionFactory,GetAllCollectionMetadata</token>
<token>NHibernate.ISessionFactory,EvictCollection</token>
<token>NHibernate.ISessionFactory,GetAllClassMetadata</token>
<token>NHibernate.ISessionFactory,EvictEntity</token>
</entry>
<entry count="3">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],List</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
</entry>
<entry count="6">
<token>TSaga],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="10">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],List</token>
</entry>
<entry count="14">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="194">
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
</entry>
<entry count="25">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateMultiQuery</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="31">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
</entry>
<entry count="1">
<token>Model]],ToRowCountQuery</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1474">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],TransformUsing</token>
</entry>
<entry count="4">
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
<token>NHibernate.IStatelessSession,BeginTransaction</token>
<token>NHibernate.IStatelessSession,Insert</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],SelectList</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Customer,</token>
<token>Model]],List</token>
</entry>
<entry count="19">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="4">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,Update</token>
</entry>
<entry count="3">
<token>BetterCms.Module.LuceneSearch],[TSubType</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
</entry>
<entry count="1">
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="54">
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
</entry>
<entry count="14">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateMultiQuery</token>
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,SetParameter</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],OrderBy</token>
</entry>
<entry count="1">
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Lock</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="33">
<token>BetterCms.Module.MediaManager]],List</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],RowCount</token>
</entry>
<entry count="108">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],JoinAlias</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateCriteria</token>
<token>NHibernate.ICriteria,SetFetchMode</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetCacheable</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PageContent,</token>
<token>BetterCms.Module.Root]],And</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="3">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Order,</token>
<token>Model]],JoinQueryOver</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="26">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Fetch</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetCacheable</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],Future</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="14">
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="236">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="108">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="236">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="54">
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],List</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="237">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="45">
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],And</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="79">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,UniqueResult</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="22">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>TSaga]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>TSaga]],List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,GetCurrentLockMode</token>
<token>NHibernate.ISession,Lock</token>
<token>NHibernate.ISession,GetCurrentLockMode</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="6">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
</entry>
<entry count="36">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,SetFirstResult</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,UniqueResult</token>
</entry>
<entry count="48">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskCostEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="127">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],List</token>
</entry>
<entry count="5">
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityShiftEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Order,</token>
<token>Model]],RowCount</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="24">
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],OrderBy</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.ISQLQuery,AddEntity</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ITransaction,Commit</token>
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
<token>NHibernate.IStatelessSession,BeginTransaction</token>
<token>NHibernate.IStatelessSession,Insert</token>
</entry>
<entry count="51">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="3">
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetCacheable</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetLockMode</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetResultTransformer</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model]],Skip</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="33">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Get</token>
</entry>
<entry count="2">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Load</token>
<token>NHibernate.NHibernateUtil,IsInitialized</token>
<token>NHibernate.NHibernateUtil,IsPropertyInitialized</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Lock</token>
</entry>
<entry count="8">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
</entry>
<entry count="4">
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],And</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="1">
<token>Model]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],List</token>
</entry>
<entry count="1">
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],SelectList</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
</entry>
<entry count="25">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.SettingEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TSaga],[TSubType</token>
<token>-&gt;</token>
<token>TSaga]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="97">
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="26">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetMaxResults</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,SetFirstResult</token>
</entry>
<entry count="1">
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateAlias</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateMultiCriteria</token>
<token>NHibernate.IMultiCriteria,Add</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Root]],And</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog]],OrderBy</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="126">
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
</entry>
<entry count="54">
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
</entry>
<entry count="6">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="4">
<token>NHibernate.IStatelessSession,BeginTransaction</token>
<token>NHibernate.IStatelessSession,Insert</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],RowCount</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
</entry>
<entry count="4">
<token>Succinctly.Model.Product,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Where</token>
</entry>
<entry count="12">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,SetFirstResult</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TSaga]],List</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],JoinQueryOver</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="71">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],OrderBy</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="3">
<token>BetterCms.Module.LuceneSearch]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch],[TSubType</token>
</entry>
<entry count="8">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="16">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateAlias</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,Clear</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityShiftEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,UniqueResult</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
</entry>
<entry count="97">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Select</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="2">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PageContent,</token>
</entry>
<entry count="71">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="25">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
</entry>
<entry count="24">
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="108">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Model]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],SelectList</token>
</entry>
<entry count="2">
<token>NHibernate.IQuery,ExecuteUpdate</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="24">
<token>ServiceStack.Authentication.NHibernate]],And</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],SingleOrDefault</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskCostEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="4">
<token>BetterCms.Module.MediaManager]],And</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="11">
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],SelectList</token>
</entry>
<entry count="8">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
</entry>
<entry count="109">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="3">
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch],[TSubType</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],OrderByAlias</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateMultiQuery</token>
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,SetParameter</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Order,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="12">
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
</entry>
<entry count="1">
<token>Model]],Skip</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],TransformUsing</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Merge</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="324">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],And</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],SelectList</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="3">
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Where</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Post,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.ICriteria,SetCacheable</token>
</entry>
<entry count="519">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="72">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],TransformUsing</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="32">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="54">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],Where</token>
</entry>
<entry count="31">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="18">
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="79">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,SetParameter</token>
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,Add</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,GetNamedQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,GetNamedQuery</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],SelectList</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],SelectList</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetResultTransformer</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Lock</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateCriteria</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,SetCacheable</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],Take</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="3">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
</entry>
<entry count="3">
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],List</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],Where</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
</entry>
<entry count="3">
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="19">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TRoot]],ToRowCountQuery</token>
</entry>
<entry count="6">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="3">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model],[TSubType</token>
</entry>
<entry count="2">
<token>NHibernate.ISessionFactory,EvictQueries</token>
<token>NHibernate.ISessionFactory,GetAllCollectionMetadata</token>
<token>NHibernate.ISessionFactory,EvictCollection</token>
<token>NHibernate.ISessionFactory,GetAllClassMetadata</token>
</entry>
<entry count="2">
<token>Succinctly.Model.Product,</token>
<token>Model]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,SetFirstResult</token>
<token>NHibernate.IQuery,SetMaxResults</token>
</entry>
<entry count="126">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
</entry>
<entry count="156">
<token>BetterCms.Module.Root]],List</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Merge</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="6">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="3">
<token>Succinctly.Model.Product,</token>
<token>Model]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="54">
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="45">
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,UniqueResult</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
</entry>
<entry count="26">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
</entry>
<entry count="3">
<token>BetterCms.Module.Root]],Fetch</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],RowCount</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,UniqueResult</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model]],ToRowCountQuery</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="144">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="9">
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch],[TSubType</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
</entry>
<entry count="126">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,GetNamedQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Select</token>
</entry>
<entry count="1">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,UniqueResult</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetResultTransformer</token>
</entry>
<entry count="51">
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
</entry>
<entry count="128">
<token>BetterCms.Module.MediaManager]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
</entry>
<entry count="3">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
</entry>
<entry count="1">
<token>MassTransit.AutomatonymousIntegration.Tests]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="324">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Customer,</token>
<token>Model]],Future</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="32">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],And</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ITransaction,Commit</token>
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
</entry>
<entry count="33">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],List</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiCriteria,Add</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IMultiCriteria,Add</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],RowCount</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="811">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="51">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiQuery,List</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateMultiCriteria</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model]],Lock</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="324">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="2">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PageContent,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,GetCurrentLockMode</token>
<token>NHibernate.ISession,Lock</token>
<token>NHibernate.ISession,GetCurrentLockMode</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Load</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="14">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
</entry>
<entry count="1">
<token>Model]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
</entry>
<entry count="5">
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="162">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="72">
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="8">
<token>ServiceStack.Authentication.NHibernate]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Order,</token>
<token>Model]],Fetch</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="5">
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
</entry>
<entry count="42">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],List</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="5">
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],SingleOrDefault</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>TSaga]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model]],FutureValue</token>
</entry>
<entry count="688">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiCriteria,Add</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IMultiCriteria,Add</token>
<token>NHibernate.IMultiCriteria,Add</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Lock</token>
<token>NHibernate.ISession,GetCurrentLockMode</token>
<token>NHibernate.ISession,Lock</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="126">
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests]],SingleOrDefault</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="10">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],OrderBy</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="10">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],Where</token>
</entry>
<entry count="16">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],Future</token>
</entry>
<entry count="3">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="79">
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>Model]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
</entry>
<entry count="24">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],And</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],RowCount</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],OrderBy</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetParameterList</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Customer,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>TSaga]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="17">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
</entry>
<entry count="2">
<token>Succinctly.Model.Person,</token>
<token>Model]],List</token>
</entry>
<entry count="3">
<token>Succinctly.Model.Order,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
</entry>
<entry count="25">
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],Future</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],List</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Post,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
</entry>
<entry count="16">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Lock</token>
</entry>
<entry count="3">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],Where</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
</entry>
<entry count="194">
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>Succinctly.Model.Product,</token>
<token>Model],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
<token>Model],[TSubType</token>
</entry>
<entry count="10">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model],[TSubType</token>
</entry>
<entry count="24">
<token>ServiceStack.Authentication.NHibernate]],And</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],And</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
</entry>
<entry count="1">
<token>NHibernate.IFilter,SetParameter</token>
<token>NHibernate.ISession,DisableFilter</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.ICriteria,SetMaxResults</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Future</token>
</entry>
<entry count="3">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,UniqueResult</token>
</entry>
<entry count="3">
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetLockMode</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="128">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],Where</token>
</entry>
<entry count="128">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
</entry>
<entry count="16">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateMultiCriteria</token>
<token>NHibernate.IMultiCriteria,Add</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IMultiCriteria,Add</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,UniqueResult</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages]],RowCount</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Post,</token>
<token>Model]],List</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Order,</token>
<token>Model]],RowCount</token>
</entry>
<entry count="126">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="108">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
</entry>
<entry count="4">
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="69">
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="3">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],Select</token>
</entry>
<entry count="54">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
</entry>
<entry count="96">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IMultiCriteria,Add</token>
<token>NHibernate.IMultiCriteria,Add</token>
<token>NHibernate.IMultiCriteria,List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model],[TSubType</token>
</entry>
<entry count="7">
<token>BetterCms.Module.Blog]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="71">
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetCacheable</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root]],And</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],Future</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateMultiCriteria</token>
<token>NHibernate.IMultiCriteria,Add</token>
</entry>
<entry count="234">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetMaxResults</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="42">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],List</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="3">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Take</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetLockMode</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="6">
<token>Model]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
</entry>
<entry count="8">
<token>ServiceStack.Authentication.NHibernate]],SingleOrDefault</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="24">
<token>BetterCms.Module.Root]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="126">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="8">
<token>ServiceStack.Authentication.NHibernate]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="2">
<token>NHibernate.ISessionFactory,GetAllCollectionMetadata</token>
<token>NHibernate.ISessionFactory,EvictCollection</token>
<token>NHibernate.ISessionFactory,GetAllClassMetadata</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],RowCount</token>
</entry>
<entry count="128">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],Where</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="237">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="194">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>NHibernate.IQuery,SetFirstResult</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Customer,</token>
<token>Model]],Future</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
</entry>
<entry count="12">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.PageContent,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="3">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ITransaction,Commit</token>
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
<token>NHibernate.IStatelessSession,BeginTransaction</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],Take</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,Future</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],RowCount</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Fetch</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Customer,</token>
<token>Model]],Future</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Lock</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetLockMode</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,GetCurrentLockMode</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],RowCount</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="36">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="295">
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,Clear</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Clear</token>
</entry>
<entry count="3">
<token>Model]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="53">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Customer,</token>
<token>Model]],Future</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],List</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,SetParameter</token>
<token>NHibernate.IMultiQuery,Add</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IMultiCriteria,Add</token>
<token>NHibernate.IMultiCriteria,Add</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
</entry>
<entry count="3">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="2">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ITransaction,Commit</token>
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Customer,</token>
<token>Model]],Future</token>
</entry>
<entry count="3">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="6">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
</entry>
<entry count="2">
<token>Model]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],Where</token>
</entry>
<entry count="16">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],SelectList</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="26">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],WhereRestrictionOn</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>TSaga],[TSubType</token>
</entry>
<entry count="9">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Root]],And</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,GetNamedQuery</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Merge</token>
</entry>
<entry count="54">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiCriteria,Add</token>
<token>NHibernate.IMultiCriteria,List</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
</entry>
<entry count="5">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],SingleOrDefault</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.ISQLQuery,AddEntity</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ITransaction,Commit</token>
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
<token>NHibernate.IStatelessSession,BeginTransaction</token>
<token>NHibernate.IStatelessSession,Insert</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog]],OrderBy</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="3">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,AddOrder</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="2">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,FutureValue</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="24">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],And</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Lock</token>
<token>NHibernate.ISession,GetCurrentLockMode</token>
<token>NHibernate.ISession,Lock</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetLockMode</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
</entry>
<entry count="1">
<token>BetterCms.Module.MediaManager]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Order,</token>
<token>Model]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
</entry>
<entry count="234">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="18">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],TransformUsing</token>
</entry>
<entry count="1">
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="6">
<token>NHibernate.ITransaction,Commit</token>
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
<token>NHibernate.IStatelessSession,BeginTransaction</token>
</entry>
<entry count="144">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
</entry>
<entry count="1">
<token>Model]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
</entry>
<entry count="90">
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="3">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,Enumerable</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="1">
<token>MassTransit.AutomatonymousIntegration.Tests]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>TSaga],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Fetch</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],SingleOrDefault</token>
</entry>
<entry count="1">
<token>TSaga],[TSubType</token>
<token>-&gt;</token>
<token>TSaga]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="24">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="96">
<token>BetterCms.Module.Root]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],List</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],JoinAlias</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],Future</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="11">
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetProjection</token>
</entry>
<entry count="2">
<token>Model]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
<token>Model],[TSubType</token>
</entry>
<entry count="295">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
</entry>
<entry count="1">
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],And</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="10">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Post,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiCriteria,Add</token>
<token>NHibernate.IMultiCriteria,Add</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="8">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],Future</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model],[TSubType</token>
</entry>
<entry count="7">
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,UniqueResult</token>
</entry>
<entry count="4">
<token>BetterCms.Module.MediaManager]],And</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Order,</token>
<token>Model]],Fetch</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
</entry>
<entry count="71">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],Where</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Person,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="16">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
</entry>
<entry count="5">
<token>Succinctly.Model.Order,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,SetFirstResult</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetFirstResult</token>
</entry>
<entry count="10">
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
</entry>
<entry count="79">
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.ISQLQuery,AddEntity</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiCriteria,Add</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="24">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Customer,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="11">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Get</token>
</entry>
<entry count="2">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],SingleOrDefault</token>
</entry>
<entry count="12">
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="2">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="3">
<token>BetterCms.Module.LuceneSearch]],Lock</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],SelectList</token>
</entry>
<entry count="1">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],List</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],OrderBy</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="126">
<token>BetterCms.Module.MediaManager]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetResultTransformer</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,UniqueResult</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Person,</token>
<token>Model]],Where</token>
</entry>
<entry count="54">
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],Where</token>
</entry>
<entry count="9">
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
</entry>
<entry count="5">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Update</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
</entry>
<entry count="11">
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Get</token>
</entry>
<entry count="10">
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],Where</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Order,</token>
<token>Model]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root]],Future</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="16">
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],Select</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetLockMode</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="2">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],List</token>
</entry>
<entry count="179">
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetParameterList</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetFirstResult</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
</entry>
<entry count="2">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="54">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetResultTransformer</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="194">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,GetAllCollectionMetadata</token>
<token>NHibernate.ISessionFactory,GetAllClassMetadata</token>
<token>NHibernate.ISessionFactory,EvictEntity</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model]],Skip</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="6">
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Merge</token>
</entry>
<entry count="144">
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="4">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ITransaction,Commit</token>
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],JoinQueryOver</token>
<token>NHibernate.ICriteria,CreateAlias</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.ICriteria,SetCacheable</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Merge</token>
<token>NHibernate.ISession,Update</token>
</entry>
<entry count="18">
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="5">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Blog]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
</entry>
<entry count="6">
<token>NHibernate.ITransaction,Commit</token>
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Get</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
</entry>
<entry count="1">
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
</entry>
<entry count="16">
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],SelectList</token>
</entry>
<entry count="4">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,Update</token>
</entry>
<entry count="126">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],JoinQueryOver</token>
</entry>
<entry count="127">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityQueueEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="30">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PageContent,</token>
<token>BetterCms.Module.Root]],And</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,Enumerable</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Blog]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],Where</token>
</entry>
<entry count="98">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="126">
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],OrderBy</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.ISQLQuery,AddEntity</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,SetProjection</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
</entry>
<entry count="1">
<token>Model]],JoinQueryOver</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityQueueEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="1">
<token>BetterCms.Module.MediaManager]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],List</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model]],List</token>
</entry>
<entry count="2">
<token>Succinctly.Model.Order,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetCacheable</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="18">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="324">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>NHibernate.IQuery,ExecuteUpdate</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],OrderBy</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetLockMode</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetLockMode</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],TransformUsing</token>
</entry>
<entry count="475">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
</entry>
<entry count="24">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],And</token>
</entry>
<entry count="97">
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],Future</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Get</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,GetNamedQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,GetNamedQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="4">
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],And</token>
</entry>
<entry count="1">
<token>Model]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="8">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetFirstResult</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateAlias</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>Model]],OrderBy</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="97">
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="24">
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],And</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,SetFirstResult</token>
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>TRoot]],FutureValue</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Update</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetResultTransformer</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,AddOrder</token>
</entry>
<entry count="3">
<token>Succinctly.Model.Product,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="3">
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],SelectList</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Skip</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,SetFirstResult</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
</entry>
<entry count="11">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,UniqueResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],JoinQueryOver</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>TRoot]],ToRowCountQuery</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateMultiQuery</token>
<token>NHibernate.IMultiQuery,Add</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="194">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="234">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TSaga]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="13">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],JoinQueryOver</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetProjection</token>
</entry>
<entry count="24">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Order,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Where</token>
</entry>
<entry count="3">
<token>Succinctly.Model.Order,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],Where</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Post,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="12">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],Where</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
</entry>
<entry count="127">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],List</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
</entry>
<entry count="98">
<token>BetterCms.Module.Root]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetResultTransformer</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Blog]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],Future</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetResultTransformer</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="522">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TRoot]],FutureValue</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],TransformUsing</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.PageContent,</token>
<token>BetterCms.Module.Root]],And</token>
</entry>
<entry count="98">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="3">
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Lock</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ISessionFactory,EvictQueries</token>
<token>NHibernate.ISessionFactory,GetAllCollectionMetadata</token>
<token>NHibernate.ISessionFactory,GetAllClassMetadata</token>
</entry>
<entry count="144">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],OrderByAlias</token>
</entry>
<entry count="2">
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,UniqueResult</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ITransaction,Commit</token>
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
<token>NHibernate.IStatelessSession,BeginTransaction</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="3">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="8">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Future</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Merge</token>
<token>NHibernate.ISession,Update</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,List</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateMultiCriteria</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityUserEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="26">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiQuery,SetParameter</token>
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,List</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
</entry>
<entry count="26">
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],Future</token>
</entry>
<entry count="24">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],And</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
</entry>
<entry count="1">
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests],[TSubType</token>
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests]],Where</token>
</entry>
<entry count="3">
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],OrderByAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="3">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="16">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
</entry>
<entry count="12">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
</entry>
<entry count="1">
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="54">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],List</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,SetCacheable</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="25">
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PageContent,</token>
</entry>
<entry count="3">
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Lock</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="2">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="6">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="3">
<token>NHibernate.ICriteria,UniqueResult</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,GetCurrentLockMode</token>
<token>NHibernate.ISession,Lock</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],TransformUsing</token>
</entry>
<entry count="475">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="234">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],List</token>
</entry>
<entry count="8">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="3">
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Fetch</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.NHibernateUtil,IsInitialized</token>
<token>NHibernate.NHibernateUtil,IsPropertyInitialized</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="31">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,ExecuteUpdate</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="1">
<token>MassTransit.AutomatonymousIntegration.Tests]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],SelectList</token>
</entry>
<entry count="1">
<token>BetterCms.Module.MediaManager]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],List</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Update</token>
</entry>
<entry count="759">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,Update</token>
</entry>
<entry count="3">
<token>BetterCms.Module.LuceneSearch]],OrderByAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="9">
<token>BetterCms.Module.LuceneSearch],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="236">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="1">
<token>TSaga],[TSubType</token>
<token>-&gt;</token>
<token>TSaga]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetResultTransformer</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="382">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
</entry>
<entry count="295">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="71">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
</entry>
<entry count="55">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],Where</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],List</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],SelectList</token>
</entry>
<entry count="1">
<token>Model]],Skip</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Fetch</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],WhereRestrictionOn</token>
</entry>
<entry count="26">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>ServiceStack.Authentication.NHibernate]],SingleOrDefault</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Select</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="4">
<token>TSaga]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>TSaga]],List</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Order,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],WhereRestrictionOn</token>
</entry>
<entry count="4">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetResultTransformer</token>
</entry>
<entry count="7">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="3">
<token>BetterCms.Module.LuceneSearch],[TSubType</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Lock</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Customer,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="7">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,UniqueResult</token>
</entry>
<entry count="9">
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="156">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],List</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="78">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],List</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,UniqueResult</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameterList</token>
</entry>
<entry count="96">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="234">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="324">
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="126">
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
<token>NHibernate.IStatelessSession,CreateCriteria</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
</entry>
<entry count="54">
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Get</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.ISQLQuery,AddEntity</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,GetNamedQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,GetNamedQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Blog]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PageContent,</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateCriteria</token>
<token>NHibernate.ICriteria,SetFetchMode</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="48">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="36">
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="6">
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ITransaction,Commit</token>
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
<token>NHibernate.IStatelessSession,BeginTransaction</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TSaga]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],SingleOrDefault</token>
</entry>
<entry count="179">
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
</entry>
<entry count="41">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiQuery,SetParameter</token>
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,List</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,AddOrder</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="4">
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,UniqueResult</token>
</entry>
<entry count="25">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
</entry>
<entry count="6">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
</entry>
<entry count="475">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],OrderByAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="6">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="8">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="32">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Merge</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,Future</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="144">
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="382">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,SetCacheable</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="162">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="2">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],SingleOrDefault</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="24">
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="48">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,AddOrder</token>
</entry>
<entry count="144">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,List</token>
</entry>
<entry count="1">
<token>NHibernate.ISQLQuery,AddEntity</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="811">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model]],Take</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],RowCount</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],OrderBy</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Fetch</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
</entry>
<entry count="47">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateCriteria</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetLockMode</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetLockMode</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="9">
<token>Succinctly.Model.Order,</token>
<token>Model],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,UniqueResult</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ICriteria,SetProjection</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="75">
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,UniqueResult</token>
</entry>
<entry count="3">
<token>BetterCms.Module.LuceneSearch]],Lock</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Customer,</token>
<token>Model]],List</token>
</entry>
<entry count="5">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>TSaga],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,SetResultTransformer</token>
</entry>
<entry count="16">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="6">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateCriteria</token>
<token>NHibernate.ICriteria,SetFetchMode</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="16">
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Where</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],List</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetResultTransformer</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Person,</token>
<token>Model],[TSubType</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],Where</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],JoinQueryOver</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="3">
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],List</token>
</entry>
<entry count="69">
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],List</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>TSaga],[TSubType</token>
<token>-&gt;</token>
<token>TSaga]],Where</token>
</entry>
<entry count="1">
<token>TRoot]],ToRowCountQuery</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>TRoot]],FutureValue</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.ISQLQuery,AddEntity</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.ISQLQuery,AddEntity</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Future</token>
</entry>
<entry count="14">
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
</entry>
<entry count="11">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="69">
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="4">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiQuery,List</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.PageContent,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PageContent,</token>
<token>BetterCms.Module.Root]],And</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.ISQLQuery,AddEntity</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TRoot]],ToRowCountQuery</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="3">
<token>BetterCms.Module.Root]],Fetch</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="16">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],SelectList</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateMultiCriteria</token>
<token>NHibernate.IMultiCriteria,Add</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IMultiCriteria,Add</token>
<token>NHibernate.IMultiCriteria,Add</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="471">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,GetCurrentLockMode</token>
<token>NHibernate.ISession,Lock</token>
<token>NHibernate.ISession,GetCurrentLockMode</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="16">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Merge</token>
</entry>
<entry count="1">
<token>Model]],List</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="128">
<token>BetterCms.Module.MediaManager]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateMultiQuery</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiQuery,List</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateMultiCriteria</token>
<token>NHibernate.IMultiCriteria,Add</token>
</entry>
<entry count="21">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="3">
<token>Succinctly.Model.Order,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Model]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>Model]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetFirstResult</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="11">
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,SetFirstResult</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="5">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="3">
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Select</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model]],Where</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="24">
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="162">
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,SetFirstResult</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityUserEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="3">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],SingleOrDefault</token>
</entry>
<entry count="2">
<token>NHibernate.IQuery,SetCacheable</token>
<token>NHibernate.IQuery,Enumerable</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],OrderBy</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="392">
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Model]],Fetch</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model],[TSubType</token>
</entry>
<entry count="336">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,UniqueResult</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="162">
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,SetParameter</token>
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,List</token>
</entry>
<entry count="48">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],List</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="1">
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="31">
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,UniqueResult</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="3">
<token>BetterCms.Module.LuceneSearch]],OrderByAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch],[TSubType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],JoinQueryOver</token>
</entry>
<entry count="3">
<token>BetterCms.Module.LuceneSearch],[TSubType</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="4">
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],SelectList</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="6">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Update</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetCacheable</token>
<token>NHibernate.ICriteria,UniqueResult</token>
</entry>
<entry count="11">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],SingleOrDefault</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetResultTransformer</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="48">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="522">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model]],Lock</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="234">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],List</token>
</entry>
<entry count="3">
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],OrderBy</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
</entry>
<entry count="90">
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="18">
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetMaxResults</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],SingleOrDefault</token>
</entry>
<entry count="32">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TSaga]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="3">
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
</entry>
<entry count="144">
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetCacheable</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>Model]],Skip</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Take</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetResultTransformer</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="6">
<token>Succinctly.Model.Order,</token>
<token>Model]],List</token>
</entry>
<entry count="24">
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],WhereRestrictionOn</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="9">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="97">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Select</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityUserEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="2">
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
</entry>
<entry count="4">
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],List</token>
</entry>
<entry count="6">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="237">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.PageContent,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="528">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="162">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
</entry>
<entry count="3">
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Fetch</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetFetchMode</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model]],ToRowCountQuery</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],List</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="127">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Order,</token>
<token>Model]],RowCount</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
</entry>
<entry count="8">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="3">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>TRoot]],ToRowCountQuery</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="216">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
</entry>
<entry count="1">
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests],[TSubType</token>
</entry>
<entry count="48">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetResultTransformer</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Load</token>
<token>NHibernate.NHibernateUtil,IsInitialized</token>
<token>NHibernate.NHibernateUtil,Initialize</token>
</entry>
<entry count="12">
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Get</token>
</entry>
<entry count="14">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,UniqueResult</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Load</token>
<token>NHibernate.NHibernateUtil,IsInitialized</token>
<token>NHibernate.NHibernateUtil,Initialize</token>
<token>NHibernate.NHibernateUtil,IsPropertyInitialized</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetFirstResult</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,SetCacheable</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,SetFirstResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="16">
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>MassTransit.AutomatonymousIntegration.Tests],[TSubType</token>
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root]],Fetch</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISQLQuery,AddEntity</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="26">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],TransformUsing</token>
</entry>
<entry count="3">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.PageContent,</token>
<token>BetterCms.Module.Root]],And</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
</entry>
<entry count="4">
<token>TSaga]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model],[TSubType</token>
</entry>
<entry count="16">
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,GetNamedQuery</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,List</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
</entry>
<entry count="11">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="48">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],List</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],JoinAlias</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>TSaga],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="54">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],SelectList</token>
</entry>
<entry count="1">
<token>NHibernate.ISQLQuery,AddEntity</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Get</token>
</entry>
<entry count="3">
<token>BetterCms.Module.LuceneSearch]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,SetFirstResult</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="4">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>NHibernate.IStatelessSession,BeginTransaction</token>
<token>NHibernate.IStatelessSession,Insert</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
</entry>
<entry count="2">
<token>Succinctly.Model.Order,</token>
<token>Model]],JoinQueryOver</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],SelectList</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Skip</token>
</entry>
<entry count="33">
<token>BetterCms.Module.MediaManager]],List</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,FutureValue</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
</entry>
<entry count="162">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="295">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityQueueEntity,</token>
</entry>
<entry count="66">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="108">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetCacheable</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,SetFirstResult</token>
</entry>
<entry count="2">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Future</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,Update</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,Future</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>Model]],Future</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="26">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="10">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],Where</token>
</entry>
<entry count="1">
<token>MassTransit.AutomatonymousIntegration.Tests]],SingleOrDefault</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,SetFirstResult</token>
<token>NHibernate.IQuery,SetMaxResults</token>
</entry>
<entry count="2">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>TSaga],[TSubType</token>
<token>-&gt;</token>
<token>TSaga]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="42">
<token>BetterCms.Module.MediaManager]],List</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Merge</token>
</entry>
<entry count="54">
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],WhereRestrictionOn</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Order,</token>
<token>Model]],Fetch</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>TSaga],[TSubType</token>
</entry>
<entry count="5">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
</entry>
<entry count="3">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateAlias</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,UniqueResult</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Skip</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SettingEntity,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],List</token>
</entry>
<entry count="5">
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Lock</token>
</entry>
<entry count="14">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model]],ToRowCountQuery</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="7">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root]],Future</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateMultiCriteria</token>
<token>NHibernate.IMultiCriteria,Add</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="3">
<token>NHibernate.ICriteria,SetFirstResult</token>
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="25">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
</entry>
<entry count="1">
<token>MassTransit.AutomatonymousIntegration.Tests],[TSubType</token>
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests]],Where</token>
</entry>
<entry count="51">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
</entry>
<entry count="13">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
</entry>
<entry count="522">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="3">
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
</entry>
<entry count="8">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],SingleOrDefault</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="8">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],SingleOrDefault</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="1">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],OrderBy</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="32">
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
</entry>
<entry count="324">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ITransaction,Commit</token>
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
<token>NHibernate.IStatelessSession,BeginTransaction</token>
</entry>
<entry count="3">
<token>BetterCms.Module.LuceneSearch],[TSubType</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],OrderByAlias</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SettingEntity,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
</entry>
<entry count="1">
<token>Model]],OrderBy</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="18">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateMultiCriteria</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Post,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,SetCacheable</token>
<token>NHibernate.ICriteria,UniqueResult</token>
</entry>
<entry count="128">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model]],ToRowCountQuery</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityQueueEntity,</token>
</entry>
<entry count="2">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PageContent,</token>
</entry>
<entry count="8">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TRoot]],ToRowCountQuery</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
</entry>
<entry count="1">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],OrderBy</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
</entry>
<entry count="1">
<token>Model]],JoinQueryOver</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Fetch</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Root]],And</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="108">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
</entry>
<entry count="1">
<token>Model]],List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateMultiCriteria</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="128">
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,SetParameter</token>
</entry>
<entry count="12">
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="3">
<token>NHibernate.IQuery,SetFirstResult</token>
<token>NHibernate.IQuery,SetMaxResults</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
<token>Model]],List</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateCriteria</token>
<token>NHibernate.ICriteria,SetFetchMode</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="2">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateCriteria</token>
</entry>
<entry count="1">
<token>Model]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],SingleOrDefault</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],RowCount</token>
</entry>
<entry count="10">
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="7">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
</entry>
<entry count="24">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],SingleOrDefault</token>
</entry>
<entry count="12">
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Model]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model],[TSubType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TRoot]],ToRowCountQuery</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>TRoot]],FutureValue</token>
</entry>
<entry count="3">
<token>Succinctly.Model.Order,</token>
<token>Model]],Where</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Lock</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
</entry>
<entry count="127">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.ICriteria,SetMaxResults</token>
</entry>
<entry count="237">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="162">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="3">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Skip</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="6">
<token>NHibernate.ICriteria,SetFirstResult</token>
<token>NHibernate.ICriteria,SetMaxResults</token>
</entry>
<entry count="1">
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model]],List</token>
</entry>
<entry count="4">
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],And</token>
</entry>
<entry count="5">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>TSaga],[TSubType</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],TransformUsing</token>
</entry>
<entry count="6">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
</entry>
<entry count="12">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="1">
<token>Model]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Customer,</token>
</entry>
<entry count="295">
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="33">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],List</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="11">
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
</entry>
<entry count="3">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="1">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],JoinAlias</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateMultiCriteria</token>
<token>NHibernate.IMultiCriteria,Add</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="3">
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="3">
<token>Succinctly.Model.Product,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Select</token>
</entry>
<entry count="66">
<token>BetterCms.Module.MediaManager]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="3">
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Lock</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetResultTransformer</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
</entry>
<entry count="54">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,UniqueResult</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Lock</token>
<token>NHibernate.ISession,GetCurrentLockMode</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,Clear</token>
</entry>
<entry count="2">
<token>Model]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="5">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Where</token>
</entry>
<entry count="24">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],And</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="5">
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="3">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="10">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],Future</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>TSaga],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IMultiCriteria,Add</token>
</entry>
<entry count="16">
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],SelectList</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="1">
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Evict</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],JoinQueryOver</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetCacheable</token>
<token>NHibernate.IQuery,SetMaxResults</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="10">
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Lock</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetLockMode</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="2">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],Future</token>
</entry>
<entry count="2">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Order,</token>
<token>Model]],JoinQueryOver</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="3">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>BetterCms.Module.LuceneSearch]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],List</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,UniqueResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,AddOrder</token>
</entry>
<entry count="6">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="5">
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="3">
<token>BetterCms.Module.LuceneSearch]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Lock</token>
<token>NHibernate.ISession,GetCurrentLockMode</token>
<token>NHibernate.ISession,Lock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="90">
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],RowCount</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,FutureValue</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],SelectList</token>
</entry>
<entry count="1">
<token>MassTransit.AutomatonymousIntegration.Tests],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],Where</token>
</entry>
<entry count="1">
<token>ServiceStack.Authentication.NHibernate]],OrderBy</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],OrderBy</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
</entry>
<entry count="25">
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="24">
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Person,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
</entry>
<entry count="16">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],Future</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="66">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model],[TSubType</token>
</entry>
<entry count="519">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>TRoot]],ToRowCountQuery</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="3">
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Fetch</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],And</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TSaga],[TSubType</token>
<token>-&gt;</token>
<token>TSaga]],Select</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages]],RowCount</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Fetch</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Person,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="2">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetLockMode</token>
</entry>
<entry count="3">
<token>BetterCms.Module.LuceneSearch]],OrderByAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskCostEntity,</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
</entry>
<entry count="1">
<token>Model]],Lock</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
</entry>
<entry count="475">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Person,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],OrderBy</token>
</entry>
<entry count="78">
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="32">
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>Model]],Future</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,FutureValue</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Person,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
<token>Model]],Where</token>
</entry>
<entry count="13">
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],Where</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="18">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetMaxResults</token>
</entry>
<entry count="5">
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
</entry>
<entry count="12">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
</entry>
<entry count="3">
<token>Succinctly.Model.Order,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Model]],Skip</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="1">
<token>Model]],RowCount</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="5">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
</entry>
<entry count="4">
<token>TSaga],[TSubType</token>
<token>-&gt;</token>
<token>TSaga]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="12">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetCacheable</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Blog]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],Future</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>TSaga]],List</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
</entry>
<entry count="48">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,Future</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root]],Fetch</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
</entry>
<entry count="25">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.ISQLQuery,AddEntity</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root]],And</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PageContent,</token>
<token>BetterCms.Module.Root]],RowCount</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
</entry>
<entry count="3">
<token>BetterCms.Module.LuceneSearch],[TSubType</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Lock</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Order,</token>
<token>Model]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Order,</token>
<token>Model]],RowCount</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,UniqueResult</token>
</entry>
<entry count="36">
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,UniqueResult</token>
</entry>
<entry count="295">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="1">
<token>Model]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="26">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityUserEntity,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetLockMode</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateAlias</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model]],FutureValue</token>
</entry>
<entry count="98">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
</entry>
<entry count="1">
<token>Model]],Fetch</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
</entry>
<entry count="2">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,Enumerable</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,SetFirstResult</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateAlias</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Merge</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="2">
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TSaga]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>TSaga]],List</token>
</entry>
<entry count="11">
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskCostEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="54">
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="48">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],SelectList</token>
</entry>
<entry count="1">
<token>Model]],Lock</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="16">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="16">
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,GetNamedQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,GetNamedQuery</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="12">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>TRoot]],ToRowCountQuery</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetFetchMode</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateAlias</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.ICriteria,AddOrder</token>
</entry>
<entry count="63">
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>NHibernate.ITransaction,Commit</token>
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
<token>NHibernate.IStatelessSession,BeginTransaction</token>
<token>NHibernate.IStatelessSession,Insert</token>
</entry>
<entry count="3">
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetCacheable</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],TransformUsing</token>
</entry>
<entry count="7">
<token>Succinctly.Model.Order,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
</entry>
<entry count="2">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,UniqueResult</token>
</entry>
<entry count="10">
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],SelectList</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,Update</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateCriteria</token>
<token>NHibernate.ICriteria,SetFetchMode</token>
</entry>
<entry count="108">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],List</token>
</entry>
<entry count="32">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Fetch</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="3">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
</entry>
<entry count="33">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],List</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],SelectList</token>
</entry>
<entry count="1">
<token>MassTransit.AutomatonymousIntegration.Tests],[TSubType</token>
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,Update</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
</entry>
<entry count="324">
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="10">
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Fetch</token>
</entry>
<entry count="2">
<token>NHibernate.NHibernateUtil,IsInitialized</token>
<token>NHibernate.NHibernateUtil,Initialize</token>
<token>NHibernate.NHibernateUtil,IsPropertyInitialized</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch],[TSubType</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Update</token>
</entry>
<entry count="26">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
</entry>
<entry count="144">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],And</token>
</entry>
<entry count="54">
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],List</token>
</entry>
<entry count="6">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
</entry>
<entry count="42">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],List</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,FutureValue</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Lock</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,UniqueResult</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateCriteria</token>
<token>NHibernate.ICriteria,SetFetchMode</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model],[TSubType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.ICriteria,AddOrder</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],Future</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],JoinAlias</token>
</entry>
<entry count="16">
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="8">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
</entry>
<entry count="26">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Customer,</token>
<token>Model]],List</token>
</entry>
<entry count="16">
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityUserEntity,</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],Future</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PageContent,</token>
<token>BetterCms.Module.Root]],And</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="126">
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],JoinQueryOver</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>Succinctly.Model.Order,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,GetNamedQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="24">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],SingleOrDefault</token>
</entry>
<entry count="6">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],Future</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,FutureValue</token>
</entry>
<entry count="4">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Load</token>
<token>NHibernate.NHibernateUtil,IsInitialized</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],Future</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="7">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,Future</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="3">
<token>BetterCms.Module.Root]],Fetch</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="26">
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],Future</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],RowCount</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ICriteria,SetProjection</token>
</entry>
<entry count="97">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetResultTransformer</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.PageContent,</token>
<token>BetterCms.Module.Root]],RowCount</token>
</entry>
<entry count="12">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests]],SingleOrDefault</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiCriteria,Add</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IMultiCriteria,Add</token>
<token>NHibernate.IMultiCriteria,Add</token>
<token>NHibernate.IMultiCriteria,List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.ISQLQuery,AddEntity</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests]],SingleOrDefault</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Fetch</token>
</entry>
<entry count="2">
<token>NHibernate.ISessionFactory,GetAllCollectionMetadata</token>
<token>NHibernate.ISessionFactory,EvictCollection</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,UniqueResult</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Person,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],WhereRestrictionOn</token>
</entry>
<entry count="26">
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
</entry>
<entry count="2">
<token>NHibernate.ISessionFactory,GetAllClassMetadata</token>
<token>NHibernate.ISessionFactory,EvictEntity</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetProjection</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,GetCurrentLockMode</token>
<token>NHibernate.ISession,Lock</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="1">
<token>BetterCms.Module.MediaManager]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateCriteria</token>
<token>NHibernate.ICriteria,SetFetchMode</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,CreateFilter</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISessionFactory,GetCurrentSession</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetFirstResult</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,SetCacheable</token>
</entry>
<entry count="1">
<token>TSaga]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetParameterList</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="48">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="7">
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,Update</token>
</entry>
<entry count="1">
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="1">
<token>Model]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],List</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="382">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>TSaga]],List</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
</entry>
<entry count="1">
<token>TSaga],[TSubType</token>
<token>-&gt;</token>
<token>TSaga]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
</entry>
<entry count="3">
<token>Succinctly.Model.Product,</token>
<token>Model]],Select</token>
</entry>
<entry count="16">
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],Future</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetMaxResults</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetProjection</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],SelectList</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameterList</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],Where</token>
</entry>
<entry count="162">
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Update</token>
</entry>
<entry count="3">
<token>BetterCms.Module.LuceneSearch]],OrderByAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityShiftEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="3">
<token>Model]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="12">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,UniqueResult</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="7">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="8">
<token>ServiceStack.Authentication.NHibernate]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Order,</token>
<token>Model]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetResultTransformer</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="4">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetFirstResult</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,SetCacheable</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="12">
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
</entry>
<entry count="126">
<token>BetterCms.Module.MediaManager]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="3">
<token>Succinctly.Model.Order,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="4">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="79">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="24">
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],WhereRestrictionOn</token>
</entry>
<entry count="1">
<token>Model]],List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetMaxResults</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameterList</token>
</entry>
<entry count="24">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,GetCurrentLockMode</token>
<token>NHibernate.ISession,Lock</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],Future</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],RowCount</token>
</entry>
<entry count="66">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="2">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,UniqueResult</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ITransaction,Commit</token>
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
<token>NHibernate.IStatelessSession,BeginTransaction</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="54">
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],RowCount</token>
</entry>
<entry count="1">
<token>Model]],OrderBy</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model],[TSubType</token>
</entry>
<entry count="162">
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="26">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],Future</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="14">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model]],Skip</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="3">
<token>Succinctly.Model.Product,</token>
<token>Model]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="12">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="54">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>Model]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model]],List</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="162">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,GetNamedQuery</token>
</entry>
<entry count="126">
<token>BetterCms.Module.MediaManager]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],And</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="14">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ISessionFactory,GetClassMetadata</token>
<token>NHibernate.ISessionFactory,GetClassMetadata</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.ICriteria,SetCacheable</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Merge</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests],[TSubType</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,Add</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateMultiCriteria</token>
<token>NHibernate.IMultiCriteria,Add</token>
</entry>
<entry count="54">
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
</entry>
<entry count="1">
<token>BetterCms.Module.MediaManager]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,GetNamedQuery</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>TRoot]],ToRowCountQuery</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
</entry>
<entry count="1">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetLockMode</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetLockMode</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SettingEntity,</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="3">
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch],[TSubType</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Lock</token>
</entry>
<entry count="3">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="1">
<token>NHibernate.IStatelessSession,CreateCriteria</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="51">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,UniqueResult</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,UniqueResult</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="1">
<token>ServiceStack.Authentication.NHibernate]],OrderBy</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],List</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateCriteria</token>
<token>NHibernate.ICriteria,SetFetchMode</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.ICriteria,AddOrder</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateFilter</token>
</entry>
<entry count="3">
<token>BetterCms.Module.Root]],Fetch</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
</entry>
<entry count="16">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="14">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="49">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
</entry>
<entry count="96">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],List</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Customer,</token>
<token>Model]],Future</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiCriteria,Add</token>
<token>NHibernate.IMultiCriteria,Add</token>
<token>NHibernate.IMultiCriteria,List</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],Where</token>
</entry>
<entry count="10">
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
</entry>
<entry count="1">
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
<token>Model]],List</token>
</entry>
<entry count="3">
<token>BetterCms.Module.LuceneSearch],[TSubType</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],OrderByAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="4">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,Enumerable</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateCriteria</token>
</entry>
<entry count="3">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],SelectList</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,SetFirstResult</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="54">
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISQLQuery,AddEntity</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetFirstResult</token>
<token>NHibernate.IQuery,SetCacheable</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="2">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="194">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="1">
<token>Model]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],SingleOrDefault</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="16">
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],Future</token>
</entry>
<entry count="1">
<token>MassTransit.AutomatonymousIntegration.Tests]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests]],SingleOrDefault</token>
</entry>
<entry count="10">
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
</entry>
<entry count="128">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],Where</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Person,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.ICriteria,SetCacheable</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetMaxResults</token>
</entry>
<entry count="3">
<token>BetterCms.Module.LuceneSearch]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Model]],List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="25">
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Model]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
</entry>
<entry count="12">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
</entry>
<entry count="3">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],JoinQueryOver</token>
<token>NHibernate.ICriteria,CreateAlias</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,Update</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameterList</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],Future</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="1">
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests]],Where</token>
</entry>
<entry count="3">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Fetch</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="6">
<token>Model]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>ServiceStack.Authentication.NHibernate]],OrderBy</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],List</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ITransaction,Commit</token>
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
<token>NHibernate.IStatelessSession,BeginTransaction</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests],[TSubType</token>
</entry>
<entry count="5">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>TSaga],[TSubType</token>
<token>-&gt;</token>
<token>TSaga]],Where</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],SelectList</token>
</entry>
<entry count="5">
<token>TSaga],[TSubType</token>
<token>-&gt;</token>
<token>TSaga]],Where</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateCriteria</token>
<token>NHibernate.ICriteria,SetFetchMode</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="25">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,AddOrder</token>
</entry>
<entry count="4">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
</entry>
<entry count="54">
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ITransaction,Commit</token>
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
</entry>
<entry count="66">
<token>BetterCms.Module.MediaManager]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,GetAllCollectionMetadata</token>
<token>NHibernate.ISessionFactory,EvictCollection</token>
<token>NHibernate.ISessionFactory,GetAllClassMetadata</token>
<token>NHibernate.ISessionFactory,EvictEntity</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Order,</token>
<token>Model]],WhereRestrictionOn</token>
</entry>
<entry count="4">
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
<token>NHibernate.IStatelessSession,BeginTransaction</token>
<token>NHibernate.IStatelessSession,Insert</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="2">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
<token>NHibernate.IStatelessSession,CreateCriteria</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],OrderBy</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
</entry>
<entry count="10">
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],OrderBy</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateMultiCriteria</token>
<token>NHibernate.IMultiCriteria,Add</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IMultiCriteria,Add</token>
</entry>
<entry count="2">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],Future</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,UniqueResult</token>
</entry>
<entry count="31">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
</entry>
<entry count="97">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="256">
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],Future</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SettingEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TSaga]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>TSaga],[TSubType</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="156">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],List</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="51">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="31">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="31">
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
</entry>
<entry count="1">
<token>Model]],Lock</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameterList</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="9">
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
</entry>
<entry count="7">
<token>BetterCms.Module.Blog]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="3">
<token>NHibernate.IQuery,ExecuteUpdate</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
</entry>
<entry count="4">
<token>NHibernate.ISessionFactory,EvictQueries</token>
<token>NHibernate.ISessionFactory,GetAllCollectionMetadata</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],SingleOrDefault</token>
</entry>
<entry count="24">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Merge</token>
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
</entry>
<entry count="3">
<token>BetterCms.Module.LuceneSearch]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
</entry>
<entry count="55">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],Where</token>
</entry>
<entry count="3">
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,SetResultTransformer</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,List</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Blog]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
</entry>
<entry count="126">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
</entry>
<entry count="2">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages]],RowCount</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],List</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetCacheable</token>
<token>NHibernate.IQuery,SetMaxResults</token>
</entry>
<entry count="6">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],JoinAlias</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
</entry>
<entry count="7">
<token>BetterCms.Module.Blog]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],JoinQueryOver</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskCostEntity,</token>
</entry>
<entry count="5">
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
<token>NHibernate.IStatelessSession,BeginTransaction</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.ICriteria,SetCacheable</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Load</token>
<token>NHibernate.NHibernateUtil,IsInitialized</token>
<token>NHibernate.NHibernateUtil,IsPropertyInitialized</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="71">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,UniqueResult</token>
</entry>
<entry count="33">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="16">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],TransformUsing</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,FutureValue</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetCacheable</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
</entry>
<entry count="24">
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
</entry>
<entry count="12">
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Model]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,GetCurrentLockMode</token>
<token>NHibernate.ISession,Lock</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
</entry>
<entry count="162">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="3">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
</entry>
<entry count="3">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="33">
<token>BetterCms.Module.MediaManager]],List</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],And</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="24">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>TSaga]],Where</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
</entry>
<entry count="32">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,EnableFilter</token>
<token>NHibernate.IFilter,SetParameter</token>
</entry>
<entry count="4">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="10">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,SetFirstResult</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],SelectList</token>
</entry>
<entry count="522">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,Future</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Customer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="47">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="11">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateFilter</token>
</entry>
<entry count="66">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="6">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiQuery,SetParameter</token>
<token>NHibernate.IMultiQuery,Add</token>
</entry>
<entry count="536">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Customer,</token>
<token>Model]],Future</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetFirstResult</token>
</entry>
<entry count="1">
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests],[TSubType</token>
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
</entry>
<entry count="1">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetMaxResults</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Lock</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,EnableFilter</token>
<token>NHibernate.IFilter,SetParameter</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="54">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Customer,</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ITransaction,Commit</token>
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],JoinAlias</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,GetNamedQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="24">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],And</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
</entry>
<entry count="12">
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>BetterCms.Module.LuceneSearch],[TSubType</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],SingleOrDefault</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="48">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],TransformUsing</token>
</entry>
<entry count="6">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],Future</token>
</entry>
<entry count="26">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetResultTransformer</token>
</entry>
<entry count="1">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],OrderBy</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,FutureValue</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],Future</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],OrderBy</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ITransaction,Commit</token>
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
<token>NHibernate.IStatelessSession,BeginTransaction</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
</entry>
<entry count="216">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],Take</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Take</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],SelectList</token>
</entry>
<entry count="54">
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="13">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="174">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,EnableFilter</token>
<token>NHibernate.IFilter,SetParameter</token>
<token>NHibernate.ISession,DisableFilter</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,EnableFilter</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetProjection</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],TransformUsing</token>
</entry>
<entry count="7">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
</entry>
<entry count="128">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="48">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Update</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],OrderByAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],OrderBy</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Where</token>
</entry>
<entry count="25">
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="17">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch],[TSubType</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.ISQLQuery,AddEntity</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,GetCurrentLockMode</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Future</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Order,</token>
<token>Model]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PageContent,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,UniqueResult</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="3">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,GetCurrentLockMode</token>
<token>NHibernate.ISession,Lock</token>
<token>NHibernate.ISession,GetCurrentLockMode</token>
<token>NHibernate.ISession,Lock</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="2">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Load</token>
<token>NHibernate.NHibernateUtil,IsInitialized</token>
<token>NHibernate.NHibernateUtil,Initialize</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.ISQLQuery,AddEntity</token>
</entry>
<entry count="35">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
</entry>
<entry count="12">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateCriteria</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateMultiQuery</token>
<token>NHibernate.IMultiQuery,Add</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,UniqueResult</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Post,</token>
<token>Model]],ToRowCountQuery</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
</entry>
<entry count="1">
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],JoinAlias</token>
</entry>
<entry count="54">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,Enumerable</token>
</entry>
<entry count="4">
<token>TSaga],[TSubType</token>
<token>-&gt;</token>
<token>TSaga]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,FutureValue</token>
</entry>
<entry count="3">
<token>BetterCms.Module.LuceneSearch]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
</entry>
<entry count="1">
<token>Model]],ToRowCountQuery</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="18">
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Evict</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,EvictQueries</token>
<token>NHibernate.ISessionFactory,GetAllCollectionMetadata</token>
<token>NHibernate.ISessionFactory,GetAllClassMetadata</token>
<token>NHibernate.ISessionFactory,EvictEntity</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
</entry>
<entry count="2">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],Future</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Blog]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog]],OrderBy</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="108">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="3">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Get</token>
</entry>
<entry count="1">
<token>TSaga]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>TSaga]],List</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Load</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.NHibernateUtil,Initialize</token>
<token>NHibernate.NHibernateUtil,IsPropertyInitialized</token>
</entry>
<entry count="24">
<token>ServiceStack.Authentication.NHibernate]],And</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="6">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="79">
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="108">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,UniqueResult</token>
</entry>
<entry count="26">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetCacheable</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
</entry>
<entry count="1">
<token>Model]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Post,</token>
<token>Model]],FutureValue</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
</entry>
<entry count="2">
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,GetNamedQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,SetFirstResult</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],SingleOrDefault</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="2">
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,AddOrder</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,GetNamedQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,GetNamedQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="2">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Customer,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateMultiQuery</token>
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,SetParameter</token>
<token>NHibernate.IMultiQuery,Add</token>
</entry>
<entry count="3">
<token>Succinctly.Model.Order,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>NHibernate.NHibernateUtil,IsInitialized</token>
<token>NHibernate.NHibernateUtil,Initialize</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],And</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="6">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,Future</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="54">
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateMultiQuery</token>
<token>NHibernate.IMultiQuery,Add</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,GetNamedQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,GetNamedQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>Model]],List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="32">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="97">
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Select</token>
</entry>
<entry count="1">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],SelectList</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetMaxResults</token>
</entry>
<entry count="1">
<token>BetterCms.Module.MediaManager]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="55">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],Where</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],SingleOrDefault</token>
</entry>
<entry count="4">
<token>NHibernate.IQuery,SetResultTransformer</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="16">
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,Load</token>
<token>NHibernate.NHibernateUtil,IsInitialized</token>
</entry>
<entry count="3">
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],OrderByAlias</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root]],Fetch</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="24">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],And</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
</entry>
<entry count="18">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="12">
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model],[TSubType</token>
</entry>
<entry count="1">
<token>Model]],Future</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,FutureValue</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="3">
<token>BetterCms.Module.LuceneSearch]],Lock</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Model]],List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],RowCount</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ITransaction,Commit</token>
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
<token>NHibernate.IStatelessSession,BeginTransaction</token>
<token>NHibernate.IStatelessSession,Insert</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
</entry>
<entry count="2">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="475">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskCostEntity,</token>
</entry>
<entry count="12">
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
</entry>
<entry count="108">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,Get</token>
</entry>
<entry count="9">
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
<token>NHibernate.IStatelessSession,BeginTransaction</token>
</entry>
<entry count="18">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetMaxResults</token>
</entry>
<entry count="25">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetCacheable</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,UniqueResult</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="234">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Post,</token>
<token>Model]],ToRowCountQuery</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
</entry>
<entry count="126">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],JoinQueryOver</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="5">
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
</entry>
<entry count="12">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],List</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.EmptyInterceptor,new</token>
</entry>
<entry count="12">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
</entry>
<entry count="5">
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,UniqueResult</token>
</entry>
<entry count="475">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],Future</token>
</entry>
<entry count="12">
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="16">
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],List</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
</entry>
<entry count="3">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],TransformUsing</token>
</entry>
<entry count="26">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Blog]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>Model]],RowCount</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="2">
<token>NHibernate.IStatelessSession,CreateSQLQuery</token>
<token>NHibernate.IQuery,UniqueResult</token>
</entry>
<entry count="79">
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ITransaction,Commit</token>
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
<token>NHibernate.IStatelessSession,BeginTransaction</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Future</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="382">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
</entry>
<entry count="3">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],SelectList</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Post,</token>
<token>Model],[TSubType</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Merge</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
</entry>
<entry count="13">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>Model]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
</entry>
<entry count="9">
<token>Succinctly.Model.Product,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,ExecuteUpdate</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetResultTransformer</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="79">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateCriteria</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Lock</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.ICriteria,SetMaxResults</token>
</entry>
<entry count="7">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
</entry>
<entry count="1">
<token>Model]],RowCount</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
</entry>
<entry count="3">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>TSaga]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],Fetch</token>
</entry>
<entry count="10">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>Model]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
</entry>
<entry count="1">
<token>Model]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],List</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],And</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="71">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Fetch</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="24">
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],And</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="24">
<token>BetterCms.Module.Root]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],Future</token>
</entry>
<entry count="69">
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="3">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Clear</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityUserEntity,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="4">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="9">
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="83">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
</entry>
<entry count="16">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="54">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],And</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="64">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,AddOrder</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="1">
<token>Model]],RowCount</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="18">
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Update</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.ISQLQuery,AddEntity</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="51">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],Future</token>
</entry>
<entry count="48">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
</entry>
<entry count="12">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TSaga]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Model]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
<token>Model]],Where</token>
</entry>
<entry count="24">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],And</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>TSaga]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>TSaga]],List</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>TSaga]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="7">
<token>BetterCms.Module.Blog]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="3">
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],OrderByAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="3">
<token>NHibernate.ISession,GetNamedQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],Where</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameterList</token>
</entry>
<entry count="24">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],WhereRestrictionOn</token>
</entry>
<entry count="1">
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateCriteria</token>
<token>NHibernate.ICriteria,SetFetchMode</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="194">
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="11">
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="24">
<token>ServiceStack.Authentication.NHibernate]],And</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],WhereRestrictionOn</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],TransformUsing</token>
</entry>
<entry count="2">
<token>Succinctly.Model.Product,</token>
<token>Model]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>Model]],JoinQueryOver</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="23">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root]],Fetch</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],SingleOrDefault</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetProjection</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,GetClassMetadata</token>
<token>NHibernate.ISessionFactory,GetClassMetadata</token>
<token>NHibernate.ISessionFactory,GetClassMetadata</token>
</entry>
<entry count="36">
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,GetCurrentLockMode</token>
<token>NHibernate.ISession,Lock</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetLockMode</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],SingleOrDefault</token>
</entry>
<entry count="71">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
</entry>
<entry count="295">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
</entry>
<entry count="3">
<token>BetterCms.Module.LuceneSearch]],Lock</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Take</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetCacheable</token>
<token>NHibernate.IQuery,Enumerable</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Skip</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
</entry>
<entry count="2">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="6">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],OrderBy</token>
</entry>
<entry count="4">
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],Select</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],SelectList</token>
</entry>
<entry count="83">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model]],ToRowCountQuery</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="648">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
</entry>
<entry count="1">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Update</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityQueueEntity,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,FutureValue</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="6">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISessionFactory,GetCurrentSession</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SettingEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model],[TSubType</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Load</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ITransaction,Commit</token>
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
<token>Model]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
</entry>
<entry count="256">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
</entry>
<entry count="10">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],SelectList</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PageContent,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PageContent,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PageContent,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Model]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="237">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>TSaga]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>TSaga],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,EvictCollection</token>
<token>NHibernate.ISessionFactory,GetAllClassMetadata</token>
<token>NHibernate.ISessionFactory,EvictEntity</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Root]],Future</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateCriteria</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Person,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="29">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetResultTransformer</token>
</entry>
<entry count="12">
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,UniqueResult</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.EmptyInterceptor,new</token>
</entry>
<entry count="5">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,GetNamedQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,GetNamedQuery</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
</entry>
<entry count="144">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="8">
<token>ServiceStack.Authentication.NHibernate]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetFirstResult</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,SetCacheable</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="2">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="3">
<token>Succinctly.Model.Product,</token>
<token>Model]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="475">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="26">
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,Clear</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameterList</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="2">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
<token>Model]],List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.ISQLQuery,AddEntity</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="237">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,Future</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],And</token>
</entry>
<entry count="475">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="24">
<token>BetterCms.Module.Root]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="55">
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],Where</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],Where</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Customer,</token>
<token>Model]],Future</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,FutureValue</token>
</entry>
<entry count="4">
<token>BetterCms.Module.MediaManager]],And</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="51">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],SelectList</token>
</entry>
<entry count="2165">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="12">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="4">
<token>Model]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Model]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>NHibernate.IQuery,ExecuteUpdate</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.ICriteria,SetMaxResults</token>
</entry>
<entry count="24">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],SingleOrDefault</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="32">
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>Model]],List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="3">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="5">
<token>NHibernate.IStatelessSession,BeginTransaction</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="24">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="126">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],JoinQueryOver</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],RowCount</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityShiftEntity,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Skip</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetFirstResult</token>
<token>NHibernate.IQuery,SetMaxResults</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,UniqueResult</token>
</entry>
<entry count="759">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="10">
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
</entry>
<entry count="78">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],List</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="9">
<token>Succinctly.Model.Product,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Select</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Order,</token>
<token>Model]],JoinQueryOver</token>
<token>NHibernate.ICriteria,CreateAlias</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
</entry>
<entry count="4">
<token>TSaga]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Person,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="2">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Customer,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ITransaction,Commit</token>
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
<token>NHibernate.IStatelessSession,BeginTransaction</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Customer,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],SelectList</token>
</entry>
<entry count="10">
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="39">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="1">
<token>Model]],ToRowCountQuery</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model]],FutureValue</token>
</entry>
<entry count="23">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
</entry>
<entry count="475">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="3">
<token>NHibernate.ITransaction,Commit</token>
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
<token>NHibernate.IStatelessSession,BeginTransaction</token>
<token>NHibernate.IStatelessSession,Insert</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,GetNamedQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="4">
<token>NHibernate.IStatelessSession,Insert</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root]],Future</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Merge</token>
<token>NHibernate.ISession,Update</token>
</entry>
<entry count="5">
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Clear</token>
</entry>
<entry count="256">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="11">
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],SingleOrDefault</token>
</entry>
<entry count="126">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="29">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="4">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
</entry>
<entry count="194">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="72">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
</entry>
<entry count="97">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="10">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
</entry>
<entry count="6">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>TSaga],[TSubType</token>
</entry>
<entry count="71">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Merge</token>
</entry>
<entry count="108">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
</entry>
<entry count="6">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],JoinAlias</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="1">
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
<token>MassTransit.AutomatonymousIntegration.Tests],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ITransaction,Commit</token>
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,Enumerable</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],JoinQueryOver</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root]],And</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="108">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PageContent,</token>
<token>BetterCms.Module.Root]],And</token>
</entry>
<entry count="1">
<token>TSaga]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="54">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="18">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="1">
<token>Model]],ToRowCountQuery</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,GetCurrentLockMode</token>
<token>NHibernate.ISession,Lock</token>
<token>NHibernate.ISession,GetCurrentLockMode</token>
<token>NHibernate.ISession,Lock</token>
</entry>
<entry count="2">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PageContent,</token>
<token>BetterCms.Module.Root]],RowCount</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,CreateFilter</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,UniqueResult</token>
<token>NHibernate.ISession,CreateFilter</token>
</entry>
<entry count="6">
<token>Model]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],Fetch</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Post,</token>
<token>Model]],ToRowCountQuery</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,SetCacheable</token>
<token>NHibernate.ICriteria,UniqueResult</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,UniqueResult</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],Future</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="2">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],JoinQueryOver</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="2">
<token>Succinctly.Model.Order,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],JoinQueryOver</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Load</token>
</entry>
<entry count="11">
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="848">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>Model]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="475">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Person,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Evict</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],Fetch</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Future</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,GetCurrentLockMode</token>
<token>NHibernate.ISession,Lock</token>
<token>NHibernate.ISession,GetCurrentLockMode</token>
<token>NHibernate.ISession,Lock</token>
</entry>
<entry count="1">
<token>NHibernate.ISQLQuery,AddEntity</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetLockMode</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="127">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],List</token>
</entry>
<entry count="71">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetCacheable</token>
<token>NHibernate.IQuery,SetMaxResults</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetFirstResult</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetFetchMode</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="8">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Post,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,AddOrder</token>
</entry>
<entry count="130">
<token>BetterCms.Module.MediaManager]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateMultiQuery</token>
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,SetParameter</token>
<token>NHibernate.IMultiQuery,Add</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
</entry>
<entry count="66">
<token>BetterCms.Module.MediaManager]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="1">
<token>Model]],JoinQueryOver</token>
<token>NHibernate.ICriteria,CreateAlias</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>Succinctly.Model.Product,</token>
<token>Model]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Order,</token>
<token>Model]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Order,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],Fetch</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetResultTransformer</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="128">
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="26">
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Post,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateMultiQuery</token>
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,SetParameter</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Lock</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
</entry>
<entry count="3">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Lock</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetLockMode</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetLockMode</token>
</entry>
<entry count="194">
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
</entry>
<entry count="7">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,SetFirstResult</token>
<token>NHibernate.IQuery,SetMaxResults</token>
</entry>
<entry count="72">
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="5">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Update</token>
</entry>
<entry count="97">
<token>BetterCms.Module.Root]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
</entry>
<entry count="79">
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="18">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Person,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>NHibernate.ISessionFactory,EvictQueries</token>
<token>NHibernate.ISessionFactory,GetAllCollectionMetadata</token>
<token>NHibernate.ISessionFactory,EvictCollection</token>
</entry>
<entry count="25">
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,FutureValue</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>ServiceStack.Authentication.NHibernate]],OrderBy</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,SetFirstResult</token>
</entry>
<entry count="79">
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
</entry>
<entry count="12">
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Post,</token>
<token>Model]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="237">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="54">
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Person,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Merge</token>
<token>NHibernate.ISession,Update</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetLockMode</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="9">
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="9">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model],[TSubType</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
</entry>
<entry count="1">
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="2">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,GetNamedQuery</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>Model]],List</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],OrderBy</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],Future</token>
</entry>
<entry count="54">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],List</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="18">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model]],Skip</token>
</entry>
<entry count="14">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetMaxResults</token>
</entry>
<entry count="1">
<token>Model]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,List</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="60">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
</entry>
<entry count="3">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
</entry>
<entry count="1">
<token>Model]],List</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model]],Lock</token>
</entry>
<entry count="1">
<token>TSaga],[TSubType</token>
<token>-&gt;</token>
<token>TSaga]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="72">
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="51">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],List</token>
</entry>
<entry count="90">
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,UniqueResult</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Post,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityShiftEntity,</token>
</entry>
<entry count="3">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model]],WhereRestrictionOn</token>
</entry>
<entry count="11">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="54">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.ICriteria,AddOrder</token>
</entry>
<entry count="1">
<token>BetterCms.Module.MediaManager]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],OrderBy</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],Future</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,SetCacheable</token>
</entry>
<entry count="66">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetMaxResults</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetFetchMode</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetResultTransformer</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Merge</token>
</entry>
<entry count="12">
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
</entry>
<entry count="4">
<token>Succinctly.Model.Product,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Post,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
</entry>
<entry count="156">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],List</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],RowCount</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="77">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="8">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
</entry>
<entry count="4">
<token>Model]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,UniqueResult</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="4">
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="126">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],List</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
</entry>
<entry count="1">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],OrderBy</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="4">
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],And</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
</entry>
<entry count="237">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,SetFirstResult</token>
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,AddOrder</token>
</entry>
<entry count="6">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="51">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],OrderBy</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.ISQLQuery,AddEntity</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
</entry>
<entry count="66">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],Fetch</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],Future</token>
</entry>
<entry count="3">
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="108">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Update</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
</entry>
<entry count="3">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISQLQuery,AddEntity</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="22">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
</entry>
<entry count="128">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
</entry>
<entry count="9">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
</entry>
<entry count="1">
<token>Model]],Lock</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="382">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
</entry>
<entry count="765">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,UniqueResult</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
</entry>
<entry count="2">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="17">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="126">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="79">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="194">
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="15">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
</entry>
<entry count="3">
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],OrderByAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="36">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Customer,</token>
<token>Model]],Future</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Take</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameterList</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root]],And</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PageContent,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,UniqueResult</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="45">
<token>BetterCms.Module.Pages]],List</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="30">
<token>Model],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="10">
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],Where</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
</entry>
<entry count="47">
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Person,</token>
<token>Model],[TSubType</token>
</entry>
<entry count="3">
<token>NHibernate.IQuery,ExecuteUpdate</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="3">
<token>BetterCms.Module.LuceneSearch]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetResultTransformer</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameterList</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Select</token>
</entry>
<entry count="1">
<token>NHibernate.ISQLQuery,AddEntity</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.ISQLQuery,AddEntity</token>
</entry>
<entry count="25">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityForecastEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
</entry>
<entry count="1">
<token>Model]],Fetch</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],SelectList</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetResultTransformer</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,UniqueResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],List</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],OrderBy</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ISessionFactory,EvictCollection</token>
<token>NHibernate.ISessionFactory,GetAllClassMetadata</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,GetNamedQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,GetNamedQuery</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Succinctly.Model.Customer,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetResultTransformer</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="54">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetLockMode</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Get</token>
<token>NHibernate.ISession,GetCurrentLockMode</token>
<token>NHibernate.ISession,Lock</token>
</entry>
<entry count="9">
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateMultiQuery</token>
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,SetParameter</token>
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,Add</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
</entry>
<entry count="25">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
</entry>
<entry count="5">
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,SetCacheable</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],Where</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Post,</token>
<token>Model]],ToRowCountQuery</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
</entry>
<entry count="2">
<token>NHibernate.ICriteria,CreateAlias</token>
<token>NHibernate.ICriteria,SetProjection</token>
</entry>
<entry count="26">
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Customer,</token>
<token>Model]],Future</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameterList</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Future</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],Future</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],RowCount</token>
</entry>
<entry count="10">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateMultiCriteria</token>
<token>NHibernate.IMultiCriteria,Add</token>
</entry>
<entry count="216">
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="16">
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>MassTransit.AutomatonymousIntegration.Tests.ShoppingChore,</token>
</entry>
<entry count="5">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityQueueEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="5">
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetLockMode</token>
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetLockMode</token>
</entry>
<entry count="11">
<token>ServiceStack.Authentication.NHibernate]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],SingleOrDefault</token>
</entry>
<entry count="126">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="2">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],List</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="54">
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
</entry>
<entry count="1">
<token>Succinctly.Model.Product,</token>
<token>Model]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate],[TSubType</token>
<token>-&gt;</token>
<token>ServiceStack.Authentication.NHibernate.UserAuthDetailsNHibernate,</token>
<token>ServiceStack.Authentication.NHibernate]],OrderBy</token>
</entry>
<entry count="130">
<token>BetterCms.Module.MediaManager]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
<token>NHibernate.ICriteria,UniqueResult</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
</entry>
<entry count="1">
<token>Model]],WhereRestrictionOn</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages]],RowCount</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
</entry>
<entry count="1">
<token>Model]],Take</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
</entry>
<entry count="1048">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.ISQLQuery,AddEntity</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="2">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="6">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,Add</token>
<token>NHibernate.IMultiQuery,List</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityRosterEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="4">
<token>BetterCms.Module.MediaManager]],And</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
</entry>
<entry count="1">
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],SelectList</token>
</entry>
<entry count="54">
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages]],Where</token>
</entry>
<entry count="471">
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Tag,</token>
<token>BetterCms.Module.Root]],Where</token>
</entry>
<entry count="18">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
</entry>
<entry count="1">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],JoinAlias</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],Select</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.CategoryTree,</token>
<token>BetterCms.Module.Root]],TransformUsing</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Root]],And</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
<token>NHibernate.ISession,Evict</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,Load</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
</entry>
<entry count="9">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="10">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model],[TSubType</token>
</entry>
<entry count="295">
<token>BetterCms.Module.Root.Models.Page,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
</entry>
<entry count="48">
<token>BetterCms.Module.Root]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],List</token>
</entry>
<entry count="2">
<token>Succinctly.Model.Product,</token>
<token>Model]],SingleOrDefault</token>
</entry>
<entry count="1">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetMaxResults</token>
<token>NHibernate.IQuery,UniqueResult</token>
</entry>
<entry count="126">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.Customer,</token>
<token>Model]],List</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="48">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Layout,</token>
<token>BetterCms.Module.Root]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Pages]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],Future</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog]],OrderBy</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog],[TSubType</token>
</entry>
<entry count="9">
<token>Succinctly.Model.Order,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Blog.Models.BlogPost,</token>
<token>BetterCms.Module.Blog]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="295">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Page,</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetCacheable</token>
<token>NHibernate.IQuery,Enumerable</token>
</entry>
<entry count="1">
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager]],JoinAlias</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Take</token>
</entry>
<entry count="1">
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.Product,</token>
<token>Model]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="79">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
</entry>
<entry count="162">
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Evict</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],List</token>
</entry>
<entry count="6">
<token>Succinctly.Model.OrderDetail,</token>
<token>Model],[TSubType</token>
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],JoinAlias</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.ContentRegion,</token>
<token>BetterCms.Module.Root]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,SetProjection</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="5">
<token>NHibernate.IQuery,SetCacheable</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityUserEntity,</token>
<token>Medgate.PMSC.Shared]],List</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.ICriteria,SetMaxResults</token>
<token>NHibernate.ICriteria,UniqueResult</token>
<token>NHibernate.ISession,CreateCriteria</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="324">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.IntervalEntity,</token>
</entry>
<entry count="1">
<token>Model]],SingleOrDefault</token>
<token>NHibernate.ISession,QueryOver</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
<token>BetterCms.Module.Blog]],List</token>
</entry>
<entry count="4">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="5">
<token>NHibernate.ISession,CreateCriteria</token>
<token>NHibernate.ICriteria,SetProjection</token>
</entry>
<entry count="5">
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.PageProperties,</token>
<token>BetterCms.Module.Pages]],SingleOrDefault</token>
</entry>
<entry count="24">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],WhereRestrictionOn</token>
</entry>
<entry count="1">
<token>BetterCms.Module.Blog]],TransformUsing</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Blog.Models.Author,</token>
</entry>
<entry count="4">
<token>BetterCms.Module.Pages.Models.Redirect,</token>
<token>BetterCms.Module.Pages]],SelectList</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Model]],List</token>
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,List</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ITransaction,Commit</token>
<token>NHibernate.ISessionFactory,OpenStatelessSession</token>
</entry>
<entry count="6">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],List</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],List</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Succinctly.Model.OrderDetail,</token>
<token>Model]],OrderBy</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="2">
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],Where</token>
</entry>
<entry count="18">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
</entry>
<entry count="127">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
</entry>
<entry count="1">
<token>Model]],List</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>BetterCms.Module.Pages],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages]],TransformUsing</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaFolder,</token>
<token>BetterCms.Module.MediaManager]],TransformUsing</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,Add</token>
<token>NHibernate.ICriteria,AddOrder</token>
<token>NHibernate.ICriteria,SetCacheable</token>
<token>NHibernate.ICriteria,List</token>
</entry>
<entry count="108">
<token>BetterCms.Module.Pages.Models.SitemapTag,</token>
<token>BetterCms.Module.Pages]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
</entry>
<entry count="1">
<token>NHibernate.ICriteria,CreateCriteria</token>
<token>NHibernate.ICriteria,CreateCriteria</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],JoinQueryOver</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.ClarityTaskEntity,</token>
</entry>
<entry count="1">
<token>NHibernate.IQueryOver`1[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
<token>Model]],RowCount</token>
<token>NHibernate.ISession,QueryOver</token>
</entry>
<entry count="31">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="31">
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root],[TSubType</token>
</entry>
<entry count="10">
<token>BetterCms.Module.Pages]],Where</token>
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.Pages.Models.Sitemap,</token>
<token>BetterCms.Module.Pages],[TSubType</token>
</entry>
<entry count="3">
<token>NHibernate.ISession,Save</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,Save</token>
</entry>
<entry count="1">
<token>NHibernate.ISessionFactory,OpenSession</token>
<token>NHibernate.ISession,BeginTransaction</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
<token>NHibernate.ISQLQuery,AddEntity</token>
<token>NHibernate.IQuery,SetParameter</token>
</entry>
<entry count="382">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCms.Module.MediaManager.Models.MediaTag,</token>
<token>BetterCms.Module.MediaManager],[TSubType</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>BetterCMS.Module.LuceneSearch.Models.IndexSource,</token>
<token>BetterCms.Module.LuceneSearch],[TSubType</token>
</entry>
<entry count="1">
<token>NHibernate.ISession,SaveOrUpdate</token>
<token>NHibernate.ISession,Flush</token>
<token>NHibernate.ISession,Clear</token>
<token>NHibernate.ISession,Delete</token>
</entry>
<entry count="1">
<token>Medgate.PMSC.Shared],[TSubType</token>
<token>-&gt;</token>
<token>Medgate.PMSC.Shared.DataAccess.Entities.SlotAdjustmentEntity,</token>
<token>Medgate.PMSC.Shared]],Where</token>
<token>NHibernate.IQueryOver`1[[TRoot</token>
</entry>
<entry count="2">
<token>NHibernate.ISession,CreateQuery</token>
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,ExecuteUpdate</token>
<token>NHibernate.ISession,Delete</token>
<token>NHibernate.ITransaction,Commit</token>
</entry>
<entry count="2">
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.Category,</token>
<token>BetterCms.Module.Root]],JoinQueryOver</token>
</entry>
<entry count="79">
<token>BetterCms.Module.Root],[TSubType</token>
<token>-&gt;</token>
<token>BetterCms.Module.Root.Models.PagesView,</token>
</entry>
<entry count="9">
<token>NHibernate.IQueryOver`2[[TRoot</token>
<token>-&gt;</token>
<token>Succinctly.Model.Order,</token>
</entry>
<entry count="2">
<token>NHibernate.IQuery,SetParameter</token>
<token>NHibernate.IQuery,List</token>
<token>NHibernate.ISession,CreateSQLQuery</token>
</entry>
</dictionary>
