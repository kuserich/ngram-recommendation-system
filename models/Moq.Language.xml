<?xml version="1.0" encoding="UTF-8"?><dictionary case_sensitive="false">
<entry count="7">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
</entry>
<entry count="3">
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="13">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core],[T2</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>System.Type,</token>
</entry>
<entry count="3">
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.Server.Serialization.IBucketConfig,</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceFactory,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="4">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="9">
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>p:int]],Returns</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>DataExplorer.Application.Columns.ColumnDto,</token>
<token>Application]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
</entry>
<entry count="6">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasItem,</token>
<token>Presentation]],</token>
<token>mscorlib,</token>
</entry>
<entry count="5">
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData],[TProperty</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Common.Model.ProcessInfo,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>System.Type,</token>
</entry>
<entry count="2">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IDictionary`2[[TKey</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlot,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
</entry>
<entry count="4">
<token>NzbDrone.Core.Organizer.NamingConfig,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="5">
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Messaging.Commands.CommandModel,</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasItem,</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
</entry>
<entry count="4">
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:int]],Returns</token>
</entry>
<entry count="12">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TProperty</token>
</entry>
<entry count="1">
<token>Fohjin.DDD.BankApplication],[TResult</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.ClientReport,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Pending.PendingRelease,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:Couchbase.Configuration.Server.Serialization.IBucketConfig,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.Maps.SourceMap,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Download.Clients.Nzbget.NzbgetGlobalStatus,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="3">
<token>Couchbase.Configuration.Client.ClientConfiguration,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="12">
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlotLayout,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>System.Xml.Linq,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:int]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
</entry>
<entry count="7">
<token>Moq.Language.IThrows,Throws</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnectionPool,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasImage,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverter,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
<token>p:int]],</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IAccountDetailsView,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
</entry>
<entry count="21">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application],[TResult</token>
</entry>
<entry count="4">
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.Maps.SourceMap,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="2">
<token>System.Windows.DependencyObject,</token>
<token>WindowsBase,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Pending.PendingRelease,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application],[TResult</token>
</entry>
<entry count="15">
<token>NzbDrone.Core.Tv.Episode,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator.Settings.UserProfileSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Indexers.IndexerPageableRequestChain,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportDecision,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="7">
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
<token>Domain]],</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.IServiceFactory,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
</entry>
<entry count="2">
<token>DataExplorer.Application.Legends.Colors.ColorLegendItemDto,</token>
<token>Application]],</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportDecision,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>e:NzbDrone.Core.Update.UpdateMechanism,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="13">
<token>Fohjin.DDD.Reporting.Dto.AccountDetailsReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
<token>mscorlib,</token>
<token>2.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpResponse,</token>
<token>NzbDrone.Common]],Returns</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.NzbVortex.NzbVortexGroup,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="1">
<token>4.0.0.0],[TValue</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
<token>Domain]],</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Notifications.Xbmc.Model.TvShow,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlotLayout,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>System.Data.DataTable,</token>
<token>System.Data,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.RemotePathMappings.RemotePathMapping,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Windows.Media.Visual,</token>
<token>PresentationCore,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="2">
<token>System.Threading.Tasks.Task,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
<token>4.0.0.0].([T]</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="4">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
<token>KaVE.Commons],[T2</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>NzbDrone.Core.DecisionEngine.DownloadDecision,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>DataExplorer.Application.Importers.CsvFiles.CsvFileSourceDto,</token>
<token>Application]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Notifications.Xbmc.Model.TvShow,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>KaVE.Commons.Utils.ScheduledAction,</token>
<token>KaVE.Commons]],Returns</token>
</entry>
<entry count="6">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>e:Couchbase.IO.ResponseStatus,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Data.DataTable,</token>
</entry>
<entry count="2">
<token>e:DataExplorer.Domain.Semantics.SemanticType,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="7">
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.CsvFileSource,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Columns.ColumnDto,</token>
<token>Application]],Returns</token>
</entry>
<entry count="22">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountDetailsReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
</entry>
<entry count="1">
<token>e:System.ServiceProcess.ServiceControllerStatus,</token>
<token>System.ServiceProcess,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Projects.Project,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.LocalEpisode,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>System.Threading.Tasks.Task`1[[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpRequest,</token>
</entry>
<entry count="8">
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>i:Couchbase.Core.IBucket,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IThrows,Throws</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
</entry>
<entry count="2">
<token>Couchbase],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="10">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Metadata.Files.MetadataFile,</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
</entry>
<entry count="2">
<token>Fohjin.DDD.BankApplication],[TResult</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountReport,</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="8">
<token>s:System.Windows.Rect,</token>
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>e:NzbDrone.Core.Indexers.DownloadProtocol,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0],[TProperty</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.DataAugmentation.Xem.Model.XemSceneTvdbMapping,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="11">
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>p:int]],Callback</token>
</entry>
<entry count="4">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasItem,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
</entry>
<entry count="10">
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.Media.Visual,</token>
<token>PresentationCore,</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>DataExplorer.Application.Columns.ColumnDto,</token>
<token>Application]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.CanvasControl,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.IO.DirectoryInfo,</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>s:System.DateTime,</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
</entry>
<entry count="4">
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="13">
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Columns.ColumnDto,</token>
<token>Application]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.ClientReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],Returns</token>
</entry>
<entry count="2">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase],[TProperty</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>p:int]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.IO.Stream,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Notifications.Xbmc.Model.TvShow,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverter,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="14">
<token>mscorlib,</token>
<token>2.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>e:NzbDrone.Core.Update.UpdateMechanism,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.History.History,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="84">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
</entry>
<entry count="5">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
</entry>
<entry count="2">
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="1">
<token>Infrastructure],[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
</entry>
<entry count="2">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>System.Threading.Tasks.Task,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.AnonymizationSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>NzbDrone.Common.Http.HttpRequest,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>p:string[]]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
</entry>
<entry count="14">
<token>System.Xml.Linq,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>System.IO.FileStream,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0],[TProperty</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application],[TResult</token>
</entry>
<entry count="2">
<token>Couchbase],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Sizes.SizeLegendItemDto,</token>
<token>Application]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>System.Type,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Projects.Project,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
</entry>
<entry count="2">
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.UploadSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
</entry>
<entry count="1">
<token>System.Threading.Tasks.Task`1[[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],</token>
<token>mscorlib,</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
</entry>
<entry count="4">
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IParseIndexerResponse,</token>
</entry>
<entry count="2">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
<token>Application],[TResult</token>
</entry>
<entry count="13">
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
</entry>
<entry count="4">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],</token>
<token>mscorlib,</token>
</entry>
<entry count="4">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="1">
<token>p:object]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons],[TResult</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Pending.PendingRelease,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerRequestGenerator,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.Nzbget.NzbgetGlobalStatus,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
</entry>
<entry count="2">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>d:[TResult]</token>
<token>[System.Func`2[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLine,</token>
<token>Presentation]],</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>p:double]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>e:Couchbase.IO.ResponseStatus,</token>
</entry>
<entry count="2">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
</entry>
<entry count="8">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>NzbDrone.Core.DecisionEngine.Decision,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>System.Windows.Media.Visual,</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlotLayout,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>s:System.DateTime,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:int]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
</entry>
<entry count="2">
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
</entry>
<entry count="12">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons],[TResult</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IPrioritizeDownloadDecision,</token>
</entry>
<entry count="2">
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>TResult]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="1">
<token>p:string],[TValue</token>
<token>-&gt;</token>
<token>p:object]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.DependencyObject,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="35">
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IThrows,Throws</token>
</entry>
<entry count="4">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Views.View,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Callback</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator.Settings.AnonymizationSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
</entry>
<entry count="9">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="17">
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Xem.Model.XemSceneTvdbMapping,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.Server.Serialization.IBucketConfig,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:double]],Returns</token>
</entry>
<entry count="33">
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
</entry>
<entry count="3">
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="9">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common],[TProperty</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="2">
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
</entry>
<entry count="4">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Configuration.Config,</token>
<token>NzbDrone.Core]],Callback</token>
</entry>
<entry count="8">
<token>p:string]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Rows.Row,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>e:Couchbase.IO.ResponseStatus,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DecisionEngine.Decision,</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="2">
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>e:NzbDrone.Core.Indexers.DownloadProtocol,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="1">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.Window,</token>
<token>PresentationFramework,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.UserProfileSettings,</token>
</entry>
<entry count="31">
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProcessDownloadDecisions,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Views.ScatterPlots.PlotDto,</token>
<token>Application]],</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
<token>KaVE.Commons]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>e:NzbDrone.Core.Update.UpdateMechanism,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.DependencyObject,</token>
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>System.IO.FileInfo,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
</entry>
<entry count="1">
<token>Application]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.CsvFileSource,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Importers.CsvFiles.CsvFileSourceDto,</token>
</entry>
<entry count="10">
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>System.Type,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.Source,</token>
</entry>
<entry count="3">
<token>Couchbase.Configuration.Client.ClientConfiguration,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
<token>Domain]],</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoader,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="2">
<token>Application]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
</entry>
<entry count="7">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
</entry>
<entry count="2">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application],[TProperty</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.BankApplication.Views.IAccountDetailsView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountReport,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
</entry>
<entry count="2">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
<token>Presentation]],</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.Maps.SourceMap,</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common],[TProperty</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProcessDownloadDecisions,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
</entry>
<entry count="10">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="3">
<token>mscorlib,</token>
<token>4.0.0.0]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
</entry>
<entry count="2">
<token>PresentationCore,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
</entry>
<entry count="3">
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons]],Returns</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="10">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
</entry>
<entry count="4">
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
</entry>
<entry count="2">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Model.ProcessInfo,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="10">
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlot,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>p:object]],Returns</token>
</entry>
<entry count="7">
<token>6.15.0.0],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Sources.Source,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>p:int]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
</entry>
<entry count="5">
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="3">
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
</entry>
<entry count="1">
<token>Application],[TProperty</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="2">
<token>DataExplorer.Application.Legends.Sizes.SizeLegendItemDto,</token>
<token>Application]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasImage,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Notifications.Xbmc.Model.ActivePlayer,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="6">
<token>Couchbase],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="39">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
</entry>
<entry count="6">
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
<token>p:string]],</token>
</entry>
<entry count="3">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
</entry>
<entry count="1">
<token>p:bool]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.DecisionEngine.DownloadDecision,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasItem,</token>
<token>Presentation]],</token>
<token>mscorlib,</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>System.Threading.Tasks.Task`1[[TResult</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.Delay.IDelayProfileService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons],[TResult</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DecisionEngine.Decision,</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="9">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common],[TProperty</token>
</entry>
<entry count="5">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="2">
<token>5.6.0.0],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>System.Windows.Media.Visual,</token>
</entry>
<entry count="4">
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData],[TProperty</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpRequest,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
</entry>
<entry count="6">
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
<token>p:string]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.ClientDetailsReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
</entry>
<entry count="4">
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.AxisGridLine,</token>
<token>Domain]],</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Notifications.Xbmc.Model.ActivePlayer,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.RemotePathMappings.RemotePathMapping,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application],[TResult</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application],[TResult</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLine,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.IServiceFactory,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Views.View,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>System.IO.FileStream,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.IO.FileInfo,</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="12">
<token>NzbDrone.Core.DecisionEngine.Decision,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.ClientDetailsReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
<token>mscorlib,</token>
</entry>
<entry count="12">
<token>p:string[]]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>p:int]],</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerRequestGenerator,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="17">
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountReport,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
<token>KaVE.Commons],[T2</token>
</entry>
<entry count="1">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IThrows,Throws</token>
</entry>
<entry count="10">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IDictionary`2[[TKey</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnectionPool,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>p:double]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="17">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.RemotePathMappings.RemotePathMapping,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerPageableRequestChain,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasItem,</token>
<token>Presentation]],</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core],[TProperty</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpRequest,</token>
<token>NzbDrone.Common]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="3">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpResponse,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
<token>Application],[TResult</token>
</entry>
<entry count="2">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasCircle,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
</entry>
<entry count="22">
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="92">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="3">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.CsvFileSource,</token>
</entry>
<entry count="1">
<token>Application],[TProperty</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Application.Views.ScatterPlots.PlotDto,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
<token>Application],[TResult</token>
</entry>
<entry count="3">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
</entry>
<entry count="6">
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
<token>p:string]],</token>
</entry>
<entry count="4">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverter,</token>
</entry>
<entry count="57">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.ParsedEpisodeInfo,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="19">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProcessDownloadDecisions,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>e:DataExplorer.Domain.Layouts.SortOrder,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.DownloadClientItem,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core],[T2</token>
</entry>
<entry count="1">
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasCircle,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.History.History,</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IAccountDetailsView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TProperty</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Couchbase.IO.SocketAsyncState,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>System.Threading.Tasks.Task,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Profiles.Delay.DelayProfile,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Collections.IKaVESet`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="13">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="2">
<token>TResult]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>?],[TProperty</token>
</entry>
<entry count="9">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoader,</token>
</entry>
<entry count="54">
<token>-&gt;</token>
<token>TProperty]],Returns</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.ICoverExistsSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>NzbDrone.Core.DecisionEngine.DownloadDecision,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.Nzbget.NzbgetGlobalStatus,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Download.DownloadClientItem,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="41">
<token>Fohjin.DDD.Reporting],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:int]],Returns</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.Nzbget.NzbgetGlobalStatus,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
<token>Domain]],</token>
</entry>
<entry count="3">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.LocalEpisode,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>NzbDrone.Core.Configuration.Config,</token>
<token>NzbDrone.Core]],Callback</token>
</entry>
<entry count="10">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="4">
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportDecision,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
</entry>
<entry count="31">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>DataExplorer.Presentation.Core.Canvas.CanvasControl,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Panes.Filter.FilterViewModel,</token>
</entry>
<entry count="1">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.Window,</token>
<token>PresentationFramework,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="6">
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="5">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
</entry>
<entry count="1">
<token>System.Web.OData],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.RemotePathMappings.RemotePathMapping,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.NzbVortex.NzbVortexGroup,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.MediaCover.ICoverExistsSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="14">
<token>-&gt;</token>
<token>DataExplorer.Application.Columns.ColumnDto,</token>
<token>Application]],Returns</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
</entry>
<entry count="2">
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.LocalEpisode,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="3">
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
<token>p:bool]],</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="5">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:string],[TValue</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Collections.IKaVESet`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:int]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Notifications.Xbmc.Model.ActivePlayer,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Rect,</token>
</entry>
<entry count="6">
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Windows.Window,</token>
<token>PresentationFramework,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.RootFolders.RootFolder,</token>
</entry>
<entry count="62">
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Update.UpdatePackage,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="22">
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverter,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Application.Views.ScatterPlots.PlotDto,</token>
<token>Application]],</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MetadataSource.IProvideSeriesInfo,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.Plot,</token>
<token>Domain]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.Nzbget.NzbgetGlobalStatus,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
</entry>
<entry count="20">
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
</entry>
<entry count="57">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="3">
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
</entry>
<entry count="2">
<token>System.Windows.Window,</token>
<token>PresentationFramework,</token>
</entry>
<entry count="3">
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
<token>p:int]],</token>
<token>mscorlib,</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProcessDownloadDecisions,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.IO.DirectoryInfo,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="84">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Columns.ColumnDto,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Windows.Window,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
<token>-&gt;</token>
<token>System.Type,</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
<token>KaVE.Commons]],</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>d:[TResult]</token>
<token>[System.Func`2[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>p:long]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoader,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.AxisGridLine,</token>
<token>Domain]],</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>p:bool]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="23">
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasItem,</token>
</entry>
<entry count="4">
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
</entry>
<entry count="5">
<token>KaVE.Commons.Model.Events.CompletionEvents.CompletionEvent,</token>
<token>KaVE.Commons]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IThrows,Throws</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:int]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MetadataSource.IProvideSeriesInfo,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:long]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="55">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.DataAugmentation.Xem.Model.XemSceneTvdbMapping,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IParseIndexerResponse,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="4">
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.Server.Serialization.IBucketConfig,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Importers.CsvFiles.CsvFileSourceDto,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Type,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>NzbDrone.Core.DecisionEngine.DownloadDecision,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Notifications.Xbmc.Model.TvShow,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.Plot,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Type,</token>
<token>mscorlib,</token>
<token>4.0.0.0],[TValue</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.ClientReport,</token>
</entry>
<entry count="3">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Configuration.Config,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.Source,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="6">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Qualities.QualityDefinition,</token>
</entry>
<entry count="2">
<token>DataExplorer.Application.Columns.ColumnDto,</token>
<token>Application]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>Couchbase.Configuration.Client.ClientConfiguration,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application],[TResult</token>
</entry>
<entry count="4">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Scene.SceneMapping,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>System.Type,</token>
</entry>
<entry count="1">
<token>PresentationCore,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
<token>-&gt;</token>
<token>p:string],[TValue</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
</entry>
<entry count="2">
<token>Application]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application],[TResult</token>
</entry>
<entry count="2">
<token>System.IO.FileInfo,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.Maps.SourceMap,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Threading.Tasks.Task`1[[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.RootFolders.RootFolder,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
</entry>
<entry count="3">
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
</entry>
<entry count="41">
<token>mscorlib,</token>
<token>2.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core],[T2</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Episode,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
</entry>
<entry count="3">
<token>DataExplorer.Domain.Filters.Filter,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>System.Type,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="34">
<token>-&gt;</token>
<token>?],[TProperty</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Messaging.Commands.CommandModel,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientDetailsView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
</entry>
<entry count="4">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:double]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],</token>
</entry>
<entry count="6">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DecisionEngine.DownloadDecision,</token>
</entry>
<entry count="5">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Colors.Color,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>p:bool]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.FilterTrees.FilterTreeNode,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.INamingConfigService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Organizer.NamingConfig,</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="4">
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.History.History,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
<token>Domain]],</token>
</entry>
<entry count="13">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
</entry>
<entry count="9">
<token>System.Web.OData],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Type,</token>
<token>mscorlib,</token>
<token>4.0.0.0],[TValue</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoader,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>p:double]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
<token>p:bool]],</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>s:NzbDrone.Common.Disk.OsPath,</token>
</entry>
<entry count="1">
<token>p:double]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="9">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="15">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountReport,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.CompletionEvent,</token>
<token>KaVE.Commons]],</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:double]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Threading.Tasks.Task,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnectionPool,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.History.History,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="35">
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="8">
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>System.IO.Stream,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:Couchbase.Configuration.Server.Serialization.IBucketConfig,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="4">
<token>DataExplorer.Domain.Views.ScatterPlots.AxisGridLine,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="4">
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>KaVE.FeedbackProcessor],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.UploadSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
</entry>
<entry count="5">
<token>DataExplorer.Domain.Rows.Row,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>e:DataExplorer.Domain.Semantics.SemanticType,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.History.History,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Metadata.Files.MetadataFile,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="2">
<token>Moq.Language.IThrows,Throws</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="41">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Core.Qualities.QualityDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.History.History,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="38">
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
</entry>
<entry count="1">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>System.Threading.Tasks.Task`1[[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>p:int]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.Source,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core],[TProperty</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
</entry>
<entry count="1">
<token>System.Windows.Media.Visual,</token>
<token>PresentationCore,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>System.Type,</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common],[TProperty</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IPrioritizeDownloadDecision,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Columns.ColumnDto,</token>
<token>Application]],</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.CanvasControl,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Point,</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Rect,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Update.UpdatePackage,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>e:System.ServiceProcess.ServiceControllerStatus,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlot,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>e:Couchbase.IO.ResponseStatus,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0],[TProperty</token>
</entry>
<entry count="1">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.Plot,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Download.DownloadClientItem,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application],[TProperty</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.IO.Stream,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="17">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Type,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Update.UpdatePackage,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerRequestGenerator,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerPageableRequestChain,</token>
</entry>
<entry count="6">
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
</entry>
<entry count="5">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common],[TProperty</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
</entry>
<entry count="1">
<token>p:string]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Common.Model.ProcessInfo,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
</entry>
<entry count="13">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
</entry>
<entry count="2">
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0],[TProperty</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="21">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core],[T2</token>
</entry>
<entry count="4">
<token>System.IO.FileStream,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>s:System.Windows.Point,</token>
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.CsvFileSource,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="12">
<token>p:string[]]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
<token>-&gt;</token>
<token>p:string],[TValue</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>p:string],[TValue</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:double]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="4">
<token>KaVE.Commons],[T2</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
<token>KaVE.Commons]],</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Callback</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:int]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.Delay.IDelayProfileService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="9">
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
<token>p:double]],</token>
</entry>
<entry count="2">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.AxisGridLine,</token>
</entry>
<entry count="3">
<token>p:long]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.Media.Visual,</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasImage,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>s:NzbDrone.Common.Disk.OsPath,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:int]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application],[TProperty</token>
</entry>
<entry count="5">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
</entry>
<entry count="7">
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Scene.SceneMapping,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="8">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>System.IO.Stream,</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0],[TValue</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>p:string]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Callback</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Colors.ColorLegendItemDto,</token>
<token>Application]],</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
</entry>
<entry count="2">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportResult,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasImage,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>DataExplorer.Application.Importers.CsvFiles.CsvFileSourceDto,</token>
<token>Application]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>NzbDrone.Common.Model.ProcessInfo,</token>
<token>NzbDrone.Common]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>d:[TResult]</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.BankApplication.Views.IClientSearchFormView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Threading.Tasks.Task,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.IServiceFactory,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.BankApplication.Views.IClientSearchFormView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.ClientReport,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>TResult]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>TResult]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="1">
<token>p:int]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProcessDownloadDecisions,</token>
</entry>
<entry count="1">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>System.Threading.Tasks.Task`1[[TResult</token>
</entry>
<entry count="3">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Sizes.SizeLegendItemDto,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common.Http.HttpResponse,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverter,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.NzbVortex.NzbVortexGroup,</token>
</entry>
<entry count="10">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlot,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.DependencyObject,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Tv.Episode,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
</entry>
<entry count="50">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IParseIndexerResponse,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.ICoverExistsSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>System.IO.DirectoryInfo,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>TResult]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpResponse,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverter,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
</entry>
<entry count="6">
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
</entry>
<entry count="3">
<token>NzbDrone.Core.Parser.Model.ReleaseInfo,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>s:System.DateTime,</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Colors.Color,</token>
</entry>
<entry count="12">
<token>NzbDrone.Core.DecisionEngine.Decision,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="13">
<token>2.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
</entry>
<entry count="3">
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IBucket,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Xem.Model.XemSceneTvdbMapping,</token>
</entry>
<entry count="3">
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerPageableRequestChain,</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
<token>-&gt;</token>
<token>p:string],[TValue</token>
<token>-&gt;</token>
<token>p:string]],</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="14">
<token>Fohjin.DDD.Reporting.Dto]],</token>
<token>mscorlib,</token>
<token>2.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>NzbDrone.Core.History.History,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Core.Qualities.QualityDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="19">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
</entry>
<entry count="1">
<token>System.Xml.Linq,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Profiles.Delay.IDelayProfileService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="3">
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Metadata.Files.MetadataFile,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>p:string],[TValue</token>
<token>-&gt;</token>
<token>p:string]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlot,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Utils.ScheduledAction,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:int]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application],[TProperty</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
</entry>
<entry count="2">
<token>p:object]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IThrows,Throws</token>
</entry>
<entry count="3">
<token>KaVE.VS.FeedbackGenerator.Settings.UserProfileSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
</entry>
<entry count="1">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.Window,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Indexers.IndexerPageableRequestChain,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IParseIndexerResponse,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>p:long]],Returns</token>
</entry>
<entry count="4">
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Windows.Media.Imaging.BitmapSource,</token>
<token>PresentationCore,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>s:System.DateTime,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Rect,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],</token>
<token>mscorlib,</token>
</entry>
<entry count="5">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="2">
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor],[TResult</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="3">
<token>DataExplorer.Application.Columns.ColumnDto,</token>
<token>Application]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
</entry>
<entry count="22">
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>?],[TProperty</token>
</entry>
<entry count="5">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>e:DataExplorer.Domain.Semantics.SemanticType,</token>
</entry>
<entry count="5">
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Model.ProcessInfo,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IAccountDetailsView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Utils.ScheduledAction,</token>
<token>KaVE.Commons]],Callback</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="11">
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
</entry>
<entry count="5">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Notifications.Xbmc.Model.TvShow,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
</entry>
<entry count="5">
<token>NzbDrone.Core.DecisionEngine.Decision,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
</entry>
<entry count="2">
<token>System.Data.DataTable,</token>
<token>System.Data,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
</entry>
<entry count="3">
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.CanvasControl,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
</entry>
<entry count="1">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Vector,</token>
<token>WindowsBase,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
<token>Presentation]],</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.RemotePathMappings.RemotePathMapping,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
</entry>
<entry count="2">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Data.DataTable,</token>
<token>System.Data,</token>
</entry>
<entry count="83">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
</entry>
<entry count="41">
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>System.IO.FileInfo,</token>
</entry>
<entry count="3">
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasItem,</token>
<token>Presentation]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.LocalEpisode,</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.IConnectionPool,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="1">
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasCircle,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>d:[TResult]</token>
<token>[System.Func`2[[T</token>
</entry>
<entry count="1">
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.UserProfiles.UserProfileEvent,</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
</entry>
<entry count="9">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
</entry>
<entry count="1">
<token>System.Type,</token>
<token>mscorlib,</token>
<token>4.0.0.0],[TValue</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application],[TResult</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Notifications.Xbmc.Model.ActivePlayer,</token>
</entry>
<entry count="2">
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
</entry>
<entry count="3">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.IO.DirectoryInfo,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpResponse,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>?],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="4">
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
</entry>
<entry count="1">
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>NzbDrone.Core.Configuration.Config,</token>
</entry>
<entry count="6">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.RootFolders.RootFolder,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Sizes.SizeLegendItemDto,</token>
<token>Application]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="2">
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>p:int]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasImage,</token>
</entry>
<entry count="2">
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
<token>4.0.0.0].([T]</token>
</entry>
<entry count="36">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>p:bool]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Couchbase],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.RemotePathMappings.RemotePathMapping,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
</entry>
<entry count="8">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Sources.CsvFileSource,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
</entry>
<entry count="8">
<token>KaVE.Commons],[T2</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="34">
<token>?],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
</entry>
<entry count="2">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Utils.ScheduledAction,</token>
<token>KaVE.Commons]],Returns</token>
</entry>
<entry count="3">
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.UserProfileSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>KaVE.Commons],[T2</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
</entry>
<entry count="4">
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
</entry>
<entry count="2">
<token>mscorlib,</token>
<token>4.0.0.0].([T]</token>
<token>arg)]],Returns</token>
</entry>
<entry count="2">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>e:DataExplorer.Domain.Layouts.SortOrder,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>NzbDrone.Core.Configuration.Config,</token>
<token>NzbDrone.Core]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
<token>Domain]],</token>
</entry>
<entry count="16">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Application],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
</entry>
<entry count="3">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Collections.IKaVESet`1[[T</token>
</entry>
<entry count="3">
<token>KaVE.VS.FeedbackGenerator.Settings.UserProfileSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="9">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="3">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Configuration.Config,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>KaVE.VS.FeedbackGenerator.Settings.UserProfileSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="13">
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>e:System.ServiceProcess.ServiceControllerStatus,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
</entry>
<entry count="2">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>p:double]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.AxisGridLine,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.UserProfiles.UserProfileEvent,</token>
<token>KaVE.Commons]],Returns</token>
</entry>
<entry count="4">
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0],[TValue</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
</entry>
<entry count="193">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.AnonymizationSettings,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="5">
<token>6.15.0.0],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlot,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core],[TProperty</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application],[TResult</token>
</entry>
<entry count="2">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.CanvasControl,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>p:int]],</token>
<token>mscorlib,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>p:int]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="7">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.UploadSettings,</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.RootFolders.RootFolder,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="5">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="8">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerPageableRequestChain,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="92">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>p:object]],</token>
<token>mscorlib,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
<token>KaVE.Commons],[T2</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="32">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:bool]],Callback</token>
</entry>
<entry count="3">
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.UserProfiles.UserProfileEvent,</token>
<token>KaVE.Commons]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Sizes.SizeLegendItemDto,</token>
</entry>
<entry count="17">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.DecisionEngine.IPrioritizeDownloadDecision,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
</entry>
<entry count="10">
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
</entry>
<entry count="8">
<token>p:bool]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>e:NzbDrone.Core.Update.UpdateMechanism,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>?],[TResult</token>
<token>-&gt;</token>
<token>?]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application],[TResult</token>
</entry>
<entry count="7">
<token>Application]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="5">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>s:System.DateTime,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="10">
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlot,</token>
</entry>
<entry count="4">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
<token>Presentation]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure],[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Windows.Media.Visual,</token>
<token>PresentationCore,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.CanvasControl,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
</entry>
<entry count="2">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Metadata.Files.MetadataFile,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MetadataSource.IProvideSeriesInfo,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="10">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.ReleaseInfo,</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Views.ScatterPlots.PlotDto,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="15">
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
</entry>
<entry count="38">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>Couchbase.Configuration.Client.ClientConfiguration,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="4">
<token>System.Type,</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="15">
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator.Settings.UploadSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
</entry>
<entry count="25">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.ProcessedDecisions,</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:bool]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>s:System.DateTime,</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
</entry>
<entry count="4">
<token>p:int]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:string]],</token>
<token>KaVE.Commons]],</token>
</entry>
<entry count="3">
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.Media.Visual,</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
<token>-&gt;</token>
<token>System.Type,</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="80">
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>d:[TResult]</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>Application]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.RemotePathMappings.RemotePathMapping,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Colors.Color,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="22">
<token>Fohjin.DDD.Reporting.Dto.AccountDetailsReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
<token>mscorlib,</token>
<token>2.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>s:System.DateTime,</token>
<token>mscorlib,</token>
</entry>
<entry count="15">
<token>Domain]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>System.IO.Stream,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.CanvasControl,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasCircle,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>System.IO.FileStream,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="9">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IVerifies,Verifiable</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
</entry>
<entry count="3">
<token>Moq.Language.IVerifies,Verifiable</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IVerifies,Verifiable</token>
</entry>
<entry count="7">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.ReleaseInfo,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
</entry>
<entry count="18">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="21">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
<token>KaVE.Commons],[T2</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoader,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[T2</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Episode,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
</entry>
<entry count="7">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverter,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Colors.Color,</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.UserProfileSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.Delay.IDelayProfileService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="8">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="15">
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Episode,</token>
</entry>
<entry count="41">
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.RemotePathMappings.RemotePathMapping,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
</entry>
<entry count="1">
<token>p:object]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Tv.Episode,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
</entry>
<entry count="1">
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:long]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>System.Xml.Linq,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application],[TResult</token>
</entry>
<entry count="13">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
</entry>
<entry count="2">
<token>mscorlib,</token>
<token>4.0.0.0]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
</entry>
<entry count="3">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
</entry>
<entry count="7">
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="5">
<token>NzbDrone.Core.DecisionEngine.Decision,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IAccountDetailsView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="4">
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.NzbVortex.NzbVortexFiles,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
</entry>
<entry count="7">
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="5">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.ICoverExistsSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>Fohjin.DDD.BankApplication],[TResult</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.ClientReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],Returns</token>
</entry>
<entry count="6">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DecisionEngine.DownloadDecision,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>System.Type,</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>System.IO.Stream,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Download.Clients.Nzbget.NzbgetGlobalStatus,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Pending.PendingRelease,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>s:System.DateTime,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="3">
<token>NzbDrone.Core.Parser.Model.ReleaseInfo,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Callback</token>
</entry>
<entry count="1">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>p:object]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.NzbVortex.NzbVortexFiles,</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Projects.Project,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Xem.Model.XemSceneTvdbMapping,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="17">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
</entry>
<entry count="15">
<token>Fohjin.DDD.Reporting.Dto.AccountReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:bool]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>System.Type,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasItem,</token>
<token>Presentation]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:double]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
</entry>
<entry count="4">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>Couchbase.Configuration.Client.ClientConfiguration,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerPageableRequestChain,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>s:System.Windows.Vector,</token>
<token>WindowsBase,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.Window,</token>
</entry>
<entry count="1">
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>DataExplorer.Application.Columns.ColumnDto,</token>
<token>Application]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application],[TResult</token>
</entry>
<entry count="17">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
<token>Application],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnectionPool,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="11">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
</entry>
<entry count="18">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientDetailsView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountReport,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Core.Messaging.Commands.CommandModel,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
</entry>
<entry count="8">
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
</entry>
<entry count="5">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.Server.Serialization.IBucketConfig,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
</entry>
<entry count="2">
<token>s:System.Windows.Point,</token>
<token>WindowsBase,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="7">
<token>System.Web.OData],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons],[TResult</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Model.ProcessInfo,</token>
<token>NzbDrone.Common]],Returns</token>
</entry>
<entry count="31">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlot,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="8">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlot,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.Plot,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>KaVE.Commons.Utils.ScheduledAction,</token>
<token>KaVE.Commons]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Configuration.Config,</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
</entry>
<entry count="15">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Episode,</token>
</entry>
<entry count="7">
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.ReleaseInfo,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="21">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="2">
<token>i:Couchbase.Configuration.Server.Serialization.IBucketConfig,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IThrows,Throws</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="2">
<token>5.6.0.0],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="15">
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="6">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="2">
<token>d:[TResult]</token>
<token>[System.Func`2[[T</token>
<token>-&gt;</token>
<token>Couchbase.IO.SocketAsyncState,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasCircle,</token>
</entry>
<entry count="10">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>TResult]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Colors.Color,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Colors.Color,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>d:[TResult]</token>
<token>[System.Func`2[[T</token>
</entry>
<entry count="6">
<token>p:string]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Callback</token>
</entry>
<entry count="22">
<token>Fohjin.DDD.Reporting.Dto.AccountDetailsReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasImage,</token>
</entry>
<entry count="7">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="2">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
</entry>
<entry count="7">
<token>NzbDrone.Core.Parser.Model.ReleaseInfo,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>DataExplorer.Application.Views.ScatterPlots.PlotDto,</token>
<token>Application]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="5">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
</entry>
<entry count="1">
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>e:NzbDrone.Core.Update.UpdateMechanism,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Application],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
</entry>
<entry count="7">
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
</entry>
<entry count="6">
<token>p:string]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="16">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IThrows,Throws</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
</entry>
<entry count="14">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Columns.ColumnDto,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientDetailsView,</token>
</entry>
<entry count="2">
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>mscorlib,</token>
</entry>
<entry count="4">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasItem,</token>
<token>Presentation]],</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="9">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.NzbVortex.NzbVortexFiles,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>e:NzbDrone.Core.Update.UpdateMechanism,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="2">
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IParseIndexerResponse,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>e:NzbDrone.Core.Indexers.DownloadProtocol,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Couchbase.Core.IBucket,</token>
</entry>
<entry count="1">
<token>Domain]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="2">
<token>DataExplorer.Application.Legends.Colors.ColorLegendItemDto,</token>
<token>Application]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
</entry>
<entry count="79">
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>PresentationCore,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>2.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IAccountDetailsView,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="3">
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Organizer.INamingConfigService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Scene.SceneMapping,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>DataExplorer.Domain.Sources.CsvFileSource,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.Media.Imaging.BitmapSource,</token>
<token>PresentationCore,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="3">
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.UserProfileSettings,</token>
</entry>
<entry count="4">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Windows.Media.Visual,</token>
<token>PresentationCore,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>e:DataExplorer.Domain.Layouts.SortOrder,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasImage,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="13">
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="5">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Core.Messaging.Commands.CommandModel,</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="21">
<token>Domain]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IProcessDownloadDecisions,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
</entry>
<entry count="4">
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="15">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Episode,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Vector,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasImage,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
</entry>
<entry count="12">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Notifications.Xbmc.Model.TvShow,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="8">
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpResponse,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
</entry>
<entry count="3">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>p:double]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
<token>-&gt;</token>
<token>System.Type,</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>4.0.0.0],[TValue</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common],[TProperty</token>
</entry>
<entry count="1">
<token>p:bool]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="3">
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.BankApplication.Views.IClientDetailsView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],Returns</token>
</entry>
<entry count="9">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Projects.Project,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.Media.Imaging.BitmapSource,</token>
<token>PresentationCore,</token>
</entry>
<entry count="2">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Profiles.Delay.DelayProfile,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="2">
<token>Couchbase],[TProperty</token>
<token>-&gt;</token>
<token>e:Couchbase.IO.ResponseStatus,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="2">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application],[TProperty</token>
</entry>
<entry count="7">
<token>6.15.0.0],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IPrioritizeDownloadDecision,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core],[T2</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>KaVE.Commons.Utils.ScheduledAction,</token>
<token>KaVE.Commons]],Callback</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Callback</token>
</entry>
<entry count="2">
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
</entry>
<entry count="2">
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
<token>Presentation]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.Maps.SourceMap,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlotLayout,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.ParsedEpisodeInfo,</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Pending.PendingRelease,</token>
</entry>
<entry count="13">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="6">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceFactory,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="4">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Organizer.NamingConfig,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
</entry>
<entry count="5">
<token>DataExplorer.Domain.Rows.Row,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common],[TProperty</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.Plot,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="7">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Columns.ColumnDto,</token>
<token>Application]],Returns</token>
</entry>
<entry count="2">
<token>System.Threading.Tasks.Task,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpResponse,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>System.IO.Stream,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IDictionary`2[[TKey</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Configuration.Config,</token>
</entry>
<entry count="4">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Scene.SceneMapping,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>5.6.0.0],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerRequestGenerator,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>p:int]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="2">
<token>4.0.0.0].([T]</token>
<token>arg)]],Returns</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
</entry>
<entry count="3">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Xem.Model.XemSceneTvdbMapping,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="4">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLine,</token>
<token>Presentation]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
<token>Domain]],</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Callback</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:double]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.INamingConfigService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>p:string],[TValue</token>
<token>-&gt;</token>
<token>p:string]],</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application],[TResult</token>
</entry>
<entry count="4">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TProperty</token>
</entry>
<entry count="8">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Columns.ColumnDto,</token>
</entry>
<entry count="2">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLine,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpResponse,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IParseIndexerResponse,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
</entry>
<entry count="3">
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="4">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.ClientDetailsReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="25">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.AxisGridLine,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.RemotePathMappings.RemotePathMapping,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>e:DataExplorer.Domain.Layouts.SortOrder,</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase],[TProperty</token>
</entry>
<entry count="1">
<token>2.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IAccountDetailsView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Sizes.SizeLegendItemDto,</token>
<token>Application]],</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.CompletionEvent,</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>?],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IVerifies,Verifiable</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Rect,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
</entry>
<entry count="2">
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
</entry>
<entry count="6">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>p:bool]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
<token>p:string]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.Plot,</token>
<token>Domain]],</token>
</entry>
<entry count="4">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="7">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
<token>KaVE.Commons],[T2</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="2">
<token>TResult]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
</entry>
<entry count="3">
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.UserProfiles.UserProfileEvent,</token>
<token>KaVE.Commons]],Returns</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.CompletionEvent,</token>
<token>KaVE.Commons]],</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Views.ScatterPlots.PlotDto,</token>
<token>Application]],</token>
</entry>
<entry count="3">
<token>p:string]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="3">
<token>4.0.0.0]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>?],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Couchbase.Configuration.Server.Serialization.IBucketConfig,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>6.15.0.0],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="2">
<token>KaVE.Commons]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="3">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>PresentationCore,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.History.History,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="12">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>p:double]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Data,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
</entry>
<entry count="41">
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
<token>KaVE.Commons],[T2</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
<token>KaVE.Commons]],</token>
</entry>
<entry count="2">
<token>p:long]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="3">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Download.DownloadClientItem,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.UserProfiles.UserProfileEvent,</token>
</entry>
<entry count="1">
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="3">
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="2">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnectionPool,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application],[TResult</token>
</entry>
<entry count="2">
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
</entry>
<entry count="6">
<token>s:System.Windows.Rect,</token>
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>p:long]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
<token>-&gt;</token>
<token>p:string],[TValue</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportDecision,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="2">
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="13">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
</entry>
<entry count="39">
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
</entry>
<entry count="7">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientDetailsView,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.UploadSettings,</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
</entry>
<entry count="4">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasItem,</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
</entry>
<entry count="2">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:object]],Returns</token>
</entry>
<entry count="4">
<token>NzbDrone.Core.Organizer.NamingConfig,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Download.Clients.NzbVortex.Responses.NzbVortexApiVersionResponse,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>d:[TResult]</token>
<token>[System.Func`2[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:long]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceFactory,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="9">
<token>Presentation]],</token>
<token>mscorlib,</token>
</entry>
<entry count="4">
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="6">
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
</entry>
<entry count="2">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Scene.SceneMapping,</token>
</entry>
<entry count="2">
<token>i:Couchbase.Configuration.Server.Serialization.IBucketConfig,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IThrows,Throws</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
</entry>
<entry count="3">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.AxisGridLine,</token>
<token>Domain]],</token>
</entry>
<entry count="21">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application],[TResult</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>?],[TResult</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Rect,</token>
<token>WindowsBase,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.INamingConfigService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>s:System.Windows.Rect,</token>
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>?],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IThrows,Throws</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Vector,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>e:NzbDrone.Core.Update.UpdateMechanism,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Core.History.History,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="2">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.AxisGridLine,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="17">
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.History.History,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasItem,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="1">
<token>Infrastructure],[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Windows.Media.Imaging.BitmapSource,</token>
<token>PresentationCore,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.RemotePathMappings.RemotePathMapping,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>e:System.ServiceProcess.ServiceControllerStatus,</token>
<token>System.ServiceProcess,</token>
</entry>
<entry count="12">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DecisionEngine.Decision,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>e:DataExplorer.Domain.Semantics.SemanticType,</token>
</entry>
<entry count="1">
<token>p:string]],</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Notifications.Xbmc.Model.ActivePlayer,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientDetailsView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>Couchbase.Configuration.Client.ClientConfiguration,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>System.IO.Stream,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IDictionary`2[[TKey</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
</entry>
<entry count="3">
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
<token>p:double]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>p:string]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>TResult]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLine,</token>
<token>Presentation]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
</entry>
<entry count="2">
<token>Couchbase.IO.SocketAsyncState,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData],[TProperty</token>
</entry>
<entry count="22">
<token>Fohjin.DDD.Reporting.Dto.AccountDetailsReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
</entry>
<entry count="2">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="10">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlot,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>s:System.DateTime,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Colors.ColorLegendItemDto,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.LocalEpisode,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="2">
<token>System.IO.DirectoryInfo,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
</entry>
<entry count="2">
<token>Couchbase],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
</entry>
<entry count="2">
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
</entry>
<entry count="2">
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application],[TResult</token>
</entry>
<entry count="4">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasItem,</token>
<token>Presentation]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="14">
<token>2.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
</entry>
<entry count="2">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Data.DataTable,</token>
</entry>
<entry count="7">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Columns.ColumnDto,</token>
</entry>
<entry count="21">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>p:double]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:double]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.INamingConfigService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
</entry>
<entry count="4">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.AnonymizationSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common],[TProperty</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpRequest,</token>
<token>NzbDrone.Common]],Returns</token>
</entry>
<entry count="1">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application],[TResult</token>
</entry>
<entry count="17">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Model.ProcessInfo,</token>
<token>NzbDrone.Common]],</token>
</entry>
<entry count="2">
<token>System.Threading.Tasks.Task,</token>
<token>mscorlib,</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.NzbVortex.NzbVortexGroup,</token>
</entry>
<entry count="4">
<token>s:System.DateTime,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Update.UpdatePackage,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.Nzbget.NzbgetGlobalStatus,</token>
</entry>
<entry count="2">
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLine,</token>
<token>Presentation]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
</entry>
<entry count="2">
<token>Couchbase],[TProperty</token>
<token>-&gt;</token>
<token>e:Couchbase.IO.ResponseStatus,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="14">
<token>NzbDrone.Common],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="34">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>?],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.IO.Stream,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.UploadSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="27">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlot,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="4">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="34">
<token>-&gt;</token>
<token>?],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.IO.Stream,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Callback</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="2">
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Utils.ScheduledAction,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
</entry>
<entry count="2">
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>e:NzbDrone.Core.Update.UpdateMechanism,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="38">
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.NzbVortex.NzbVortexGroup,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>p:string]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverter,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="2">
<token>System.Data,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.Media.Imaging.BitmapSource,</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>NzbDrone.Core.DecisionEngine.Decision,</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator.Settings.UploadSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IBucket,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLine,</token>
<token>Presentation]],</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:int]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:Couchbase.Configuration.Server.Serialization.IBucketConfig,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.Media.Imaging.BitmapSource,</token>
<token>PresentationCore,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>?]],Returns</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>System.Windows.Media.Visual,</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common],[TProperty</token>
</entry>
<entry count="3">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.FilterTrees.FilterTreeNode,</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
<token>KaVE.Commons],[T2</token>
<token>-&gt;</token>
</entry>
<entry count="14">
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Episode,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="4">
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
</entry>
<entry count="5">
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="2">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>d:[TResult]</token>
<token>[System.Func`2[[T</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>p:string]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="5">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>s:System.DateTime,</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0],[TProperty</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>s:System.Windows.Rect,</token>
<token>WindowsBase,</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlot,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.ReleaseInfo,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Callback</token>
</entry>
<entry count="2">
<token>System.Data,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceFactory,</token>
</entry>
<entry count="5">
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientSearchFormView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Type,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>s:System.Windows.Point,</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Application.Importers.CsvFiles.CsvFileSourceDto,</token>
<token>Application]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>TProperty]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Filters.Filter,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.ReleaseInfo,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>p:string[]]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IPrioritizeDownloadDecision,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
</entry>
<entry count="9">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Domain.Colors.Color,</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Views.ScatterPlots.AxisGridLine,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],</token>
</entry>
<entry count="1">
<token>DataExplorer.Presentation.Panes.Filter.FilterViewModel,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.DecisionEngine.IPrioritizeDownloadDecision,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Download.DownloadClientItem,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="15">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountReport,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Colors.ColorLegendItemDto,</token>
</entry>
<entry count="2">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLine,</token>
<token>Presentation]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="4">
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlot,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
</entry>
<entry count="7">
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Metadata.Files.MetadataFile,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Rect,</token>
<token>WindowsBase,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.RemotePathMappings.RemotePathMapping,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.NzbVortex.NzbVortexGroup,</token>
</entry>
<entry count="4">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="2">
<token>NzbDrone.Common.Model.ProcessInfo,</token>
<token>NzbDrone.Common]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="4">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Scene.SceneMapping,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Download.Clients.NzbVortex.NzbVortexGroup,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>e:NzbDrone.Core.Update.UpdateMechanism,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasItem,</token>
<token>Presentation]],</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>?],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.Maps.SourceMap,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="4">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IAccountDetailsView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
</entry>
<entry count="3">
<token>NzbDrone.Core.DataAugmentation.Scene.SceneMapping,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>e:Couchbase.IO.ResponseStatus,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Colors.ColorLegendItemDto,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="4">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="7">
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="4">
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="7">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.CanvasControl,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0],[TProperty</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.AnonymizationSettings,</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Notifications.Xbmc.Model.TvShow,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
</entry>
<entry count="4">
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Couchbase.IO.SocketAsyncState,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="3">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.Server.Serialization.IBucketConfig,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>System.Windows.Media.Visual,</token>
<token>PresentationCore,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.IO.FileInfo,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="7">
<token>System.Web.OData],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="5">
<token>NzbDrone.Core.Tv.Episode,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Panes.Filter.FilterViewModel,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Download.ProcessedDecisions,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.Configuration.Server.Serialization.IBucketConfig,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IThrows,Throws</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
</entry>
<entry count="1">
<token>System.Data,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
</entry>
<entry count="10">
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="22">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountDetailsReport,</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.ReleaseInfo,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.ClientDetailsReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
<token>mscorlib,</token>
<token>2.0.0.0]],Returns</token>
</entry>
<entry count="172">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="11">
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
</entry>
<entry count="3">
<token>i:Couchbase.Configuration.Server.Serialization.IBucketConfig,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>System.IO.Stream,</token>
</entry>
<entry count="2">
<token>KaVE.FeedbackProcessor],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons],[TResult</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
<token>Domain]],</token>
</entry>
<entry count="9">
<token>Application]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="22">
<token>?],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>s:System.Windows.Point,</token>
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IThrows,Throws</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Data.DataTable,</token>
<token>System.Data,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Application.Importers.CsvFiles.CsvFileSourceDto,</token>
<token>Application]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.IO.FileStream,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Scene.SceneMapping,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>NzbDrone.Core.Qualities.QualityDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
<token>p:double]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NzbDrone.Common.Model.ProcessInfo,</token>
<token>NzbDrone.Common]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.BankApplication.Views.IClientDetailsView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.Window,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application],[TResult</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerRequestGenerator,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerPageableRequestChain,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpRequest,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>System.Type,</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase],[TProperty</token>
</entry>
<entry count="15">
<token>Fohjin.DDD.Reporting.Dto.AccountReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
<token>mscorlib,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>Application],[TProperty</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
</entry>
<entry count="2">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Vector,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="6">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="4">
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Returns</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.AxisGridLine,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientDetailsView,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLine,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
</entry>
<entry count="1">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
</entry>
<entry count="11">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
</entry>
<entry count="7">
<token>NzbDrone.Core.Parser.Model.ReleaseInfo,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IDictionary`2[[TKey</token>
<token>-&gt;</token>
<token>p:string],[TValue</token>
</entry>
<entry count="92">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Projects.Project,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
</entry>
<entry count="5">
<token>NzbDrone.Common],[TProperty</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:int]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>p:bool]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportDecision,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Colors.ColorLegendItemDto,</token>
<token>Application]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpResponse,</token>
<token>NzbDrone.Common]],Returns</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.Media.Visual,</token>
<token>PresentationCore,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:object]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Projects.Project,</token>
</entry>
<entry count="17">
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
<token>Application],[TResult</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
<token>Application],[TResult</token>
</entry>
<entry count="2">
<token>NzbDrone.Common.Model.ProcessInfo,</token>
<token>NzbDrone.Common]],</token>
</entry>
<entry count="1">
<token>2.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IAccountDetailsView,</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.IConnectionPool,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="15">
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Threading.Tasks.Task`1[[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Rect,</token>
<token>WindowsBase,</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>s:System.DateTime,</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="4">
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
<token>KaVE.Commons]],</token>
</entry>
<entry count="5">
<token>NzbDrone.Core.Download.Pending.PendingRelease,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>System.IO.DirectoryInfo,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
</entry>
<entry count="8">
<token>System.IO.Stream,</token>
<token>mscorlib,</token>
</entry>
<entry count="5">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Xml.Linq,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
</entry>
<entry count="13">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application],[TResult</token>
</entry>
<entry count="6">
<token>s:System.Windows.Rect,</token>
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="41">
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting],[TResult</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.Collections.IKaVESet`1[[T</token>
<token>-&gt;</token>
<token>p:string]],</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IDictionary`2[[TKey</token>
<token>-&gt;</token>
<token>p:string],[TValue</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IParseIndexerResponse,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>p:string]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons],[TResult</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="3">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>s:NzbDrone.Common.Disk.OsPath,</token>
<token>NzbDrone.Common]],Returns</token>
</entry>
<entry count="3">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
<token>Domain]],</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlotLayout,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="8">
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportResult,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>TResult]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>System.Windows.Media.Visual,</token>
<token>PresentationCore,</token>
</entry>
<entry count="41">
<token>Fohjin.DDD.Reporting],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:object]],Returns</token>
</entry>
<entry count="8">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>System.IO.Stream,</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
</entry>
<entry count="2">
<token>p:long]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="41">
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>System.Windows.Media.Visual,</token>
<token>PresentationCore,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="4">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.ClientDetailsReport,</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator.Settings.UploadSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0],[TProperty</token>
</entry>
<entry count="3">
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="2">
<token>System.Data.DataTable,</token>
<token>System.Data,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.CsvFileSource,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Metadata.Files.MetadataFile,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.ICoverExistsSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="4">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlotLayout,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Filters.Filter,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="3">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Configuration.Config,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.CompletionEvent,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.DownloadClientItem,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:int]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Sizes.SizeLegendItemDto,</token>
</entry>
<entry count="2">
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Notifications.Xbmc.Model.ActivePlayer,</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Sizes.SizeLegendItemDto,</token>
<token>Application]],</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>System.IO.FileStream,</token>
<token>mscorlib,</token>
</entry>
<entry count="5">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
</entry>
<entry count="7">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core],[TProperty</token>
</entry>
<entry count="1">
<token>DataExplorer.Application.Importers.CsvFiles.CsvFileSourceDto,</token>
<token>Application]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.Delay.IDelayProfileService,</token>
</entry>
<entry count="4">
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Data.DataTable,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="14">
<token>System.Xml.Linq,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>5.6.0.0],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.Source,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
</entry>
<entry count="4">
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="7">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpResponse,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.NzbVortex.Responses.NzbVortexApiVersionResponse,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>s:System.DateTime,</token>
<token>mscorlib,</token>
</entry>
<entry count="8">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="11">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.CompletionEvent,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>PresentationCore,</token>
<token>4.0.0.0]],</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
</entry>
<entry count="10">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Callback</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData],[TProperty</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportDecision,</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
</entry>
<entry count="4">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerRequestGenerator,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>e:NzbDrone.Core.Update.UpdateMechanism,</token>
</entry>
<entry count="22">
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountDetailsReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
<token>mscorlib,</token>
<token>2.0.0.0]],Returns</token>
</entry>
<entry count="7">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
<token>Domain]],</token>
</entry>
<entry count="2">
<token>TResult]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="1">
<token>System.Windows.Media.Imaging.BitmapSource,</token>
<token>PresentationCore,</token>
</entry>
<entry count="4">
<token>DataExplorer.Domain.Views.ScatterPlots.AxisGridLine,</token>
<token>Domain]],</token>
</entry>
<entry count="34">
<token>-&gt;</token>
<token>?],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Rect,</token>
</entry>
<entry count="3">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerPageableRequestChain,</token>
</entry>
<entry count="1">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
</entry>
<entry count="1">
<token>KaVE.Commons.Utils.ScheduledAction,</token>
<token>KaVE.Commons]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:int]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
</entry>
<entry count="55">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase],[TProperty</token>
<token>-&gt;</token>
<token>e:Couchbase.IO.ResponseStatus,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="4">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],</token>
</entry>
<entry count="2">
<token>d:[TResult]</token>
<token>[System.Func`2[[T</token>
<token>-&gt;</token>
<token>Couchbase.IO.SocketAsyncState,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="6">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
</entry>
<entry count="2">
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
</entry>
<entry count="2">
<token>System.IO.FileInfo,</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>System.IO.DirectoryInfo,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="9">
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:string],[TValue</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Collections.IKaVESet`1[[T</token>
<token>-&gt;</token>
<token>p:string]],</token>
</entry>
<entry count="2">
<token>TResult]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
</entry>
<entry count="3">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
<token>p:bool]],</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IParseIndexerResponse,</token>
</entry>
<entry count="2">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Point,</token>
<token>WindowsBase,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.ClientDetailsReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
</entry>
<entry count="1">
<token>PresentationCore,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[T2</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="12">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
</entry>
<entry count="2">
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
<token>Presentation]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IParseIndexerResponse,</token>
</entry>
<entry count="1">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TProperty</token>
</entry>
<entry count="2">
<token>System.IO.DirectoryInfo,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
</entry>
<entry count="1">
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:string],[TValue</token>
<token>-&gt;</token>
<token>p:string]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>e:NzbDrone.Core.Update.UpdateMechanism,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
</entry>
<entry count="2">
<token>System.Threading.Tasks.Task,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.Source,</token>
</entry>
<entry count="2">
<token>System.IO.FileInfo,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.AnonymizationSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
</entry>
<entry count="2">
<token>?],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Common.Http.HttpRequest,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpResponse,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="13">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Common.Http.HttpResponse,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlot,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],</token>
</entry>
<entry count="2">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Returns</token>
</entry>
<entry count="3">
<token>Moq.Language.IVerifies,Verifiable</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>NzbDrone.Common.Model.ProcessInfo,</token>
<token>NzbDrone.Common]],Returns</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Colors.ColorLegendItemDto,</token>
<token>Application]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
</entry>
<entry count="7">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientSearchFormView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
</entry>
<entry count="18">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Windows.DependencyObject,</token>
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:string]],</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>System.Type,</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="2">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Common.Model.ProcessInfo,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>e:DataExplorer.Domain.Semantics.SemanticType,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:int]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MetadataSource.IProvideSeriesInfo,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientSearchFormView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
</entry>
<entry count="5">
<token>KaVE.Commons.Model.Events.CompletionEvents.CompletionEvent,</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="38">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="6">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
</entry>
<entry count="1">
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
</entry>
<entry count="3">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="2">
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Projects.Project,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="4">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.Delay.IDelayProfileService,</token>
</entry>
<entry count="1">
<token>System.Windows.Media.Visual,</token>
<token>PresentationCore,</token>
<token>4.0.0.0]],</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="91">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
<token>p:bool]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.Plot,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasImage,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[T2</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NzbDrone.Common.Model.ProcessInfo,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="115">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Couchbase.Core.IBucket,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="1">
<token>System.Xml.Linq,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
</entry>
<entry count="16">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="3">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.LocalEpisode,</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.ParsedEpisodeInfo,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="5">
<token>mscorlib,</token>
<token>4.0.0.0]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasItem,</token>
<token>Presentation]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.Server.Serialization.IBucketConfig,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IThrows,Throws</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientSearchFormView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
<token>Application],[TResult</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.RemotePathMappings.RemotePathMapping,</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>p:long]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>e:System.ServiceProcess.ServiceControllerStatus,</token>
<token>System.ServiceProcess,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
<token>p:int]],</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Callback</token>
</entry>
<entry count="12">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>Application],[TProperty</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="75">
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="15">
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Episode,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Metadata.Files.MetadataFile,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.RootFolders.RootFolder,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasCircle,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportDecision,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
</entry>
<entry count="5">
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.CompletionEvent,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Panes.Filter.FilterViewModel,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="2">
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase],[TProperty</token>
<token>-&gt;</token>
<token>e:Couchbase.IO.ResponseStatus,</token>
</entry>
<entry count="7">
<token>Presentation]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="4">
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
<token>KaVE.Commons],[T2</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
<token>KaVE.Commons]],Returns</token>
</entry>
<entry count="6">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="4">
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
<token>KaVE.Commons],[T2</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
</entry>
<entry count="1">
<token>p:double]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.UserProfileSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
</entry>
<entry count="4">
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Profiles.Delay.IDelayProfileService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Profiles.Delay.DelayProfile,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Columns.ColumnDto,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
</entry>
<entry count="25">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
</entry>
<entry count="3">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
</entry>
<entry count="10">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="2">
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>e:NzbDrone.Core.Update.UpdateMechanism,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Download.Clients.Nzbget.NzbgetGlobalStatus,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.AnonymizationSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
<token>p:double]],</token>
</entry>
<entry count="22">
<token>Fohjin.DDD.Reporting],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountDetailsReport,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor],[TResult</token>
</entry>
<entry count="13">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>e:System.ServiceProcess.ServiceControllerStatus,</token>
<token>System.ServiceProcess,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Notifications.Xbmc.Model.TvShow,</token>
</entry>
<entry count="4">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Organizer.NamingConfig,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.Source,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasImage,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="17">
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>mscorlib,</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="21">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
<token>Presentation]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>System.Windows.DependencyObject,</token>
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>p:bool]],</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.INamingConfigService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.Media.Visual,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Model.ProcessInfo,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>KaVE.Commons.Utils.ScheduledAction,</token>
<token>KaVE.Commons]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>s:System.DateTime,</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IVerifies,Verifiable</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="12">
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>p:string]],</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Configuration.Config,</token>
<token>NzbDrone.Core]],Callback</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Notifications.Xbmc.Model.TvShow,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlot,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
</entry>
<entry count="2">
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.IO.Stream,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>NzbDrone.Common.Http.HttpRequest,</token>
<token>NzbDrone.Common]],Returns</token>
</entry>
<entry count="2">
<token>System.Windows.Media.Visual,</token>
<token>PresentationCore,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.AxisGridLine,</token>
<token>Domain]],</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
</entry>
<entry count="2">
<token>KaVE.FeedbackProcessor],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
</entry>
<entry count="1">
<token>p:string[]]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:object]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
</entry>
<entry count="14">
<token>mscorlib,</token>
<token>2.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Profiles.Delay.DelayProfile,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="17">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>System.Xml.Linq,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Couchbase]],Returns</token>
<token>Moq.Language.IThrows,Throws</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="8">
<token>DataExplorer.Application.Columns.ColumnDto,</token>
<token>Application]],</token>
</entry>
<entry count="2">
<token>System.Data,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>Application],[TProperty</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Sources.Source,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0],[TProperty</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>?],[TResult</token>
</entry>
<entry count="6">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
</entry>
<entry count="1">
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="2">
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.History.History,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.UserProfileSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Type,</token>
</entry>
<entry count="5">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Rect,</token>
<token>WindowsBase,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0],[TProperty</token>
</entry>
<entry count="4">
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="4">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Vector,</token>
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
</entry>
<entry count="1">
<token>p:string[]]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:double]],Returns</token>
</entry>
<entry count="35">
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
<token>4.0.0.0].([T]</token>
</entry>
<entry count="1">
<token>p:int]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="2">
<token>KaVE.FeedbackProcessor],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Panes.Filter.FilterViewModel,</token>
</entry>
<entry count="9">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>Couchbase.Configuration.Client.ClientConfiguration,</token>
</entry>
<entry count="2">
<token>s:NzbDrone.Common.Disk.OsPath,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="3">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Download.ProcessedDecisions,</token>
</entry>
<entry count="2">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Point,</token>
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.UploadSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.CanvasControl,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>p:int]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerRequestGenerator,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>NzbDrone.Common],[TProperty</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IThrows,Throws</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.RootFolders.RootFolder,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.FilterTrees.FilterTreeNode,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
</entry>
<entry count="140">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.Media.Imaging.BitmapSource,</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Model.ProcessInfo,</token>
<token>NzbDrone.Common]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IThrows,Throws</token>
<token>Moq.Language.IThrows,Throws</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Views.ScatterPlots.PlotDto,</token>
</entry>
<entry count="6">
<token>NzbDrone.Core.DataAugmentation.Scene.SceneMapping,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>DataExplorer.Application.Legends.Sizes.SizeLegendItemDto,</token>
<token>Application]],</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="9">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common],[TProperty</token>
</entry>
<entry count="9">
<token>p:bool]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="8">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportResult,</token>
</entry>
<entry count="8">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application],[TProperty</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlot,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="2">
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>NzbDrone.Core.DecisionEngine.Decision,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Profiles.Delay.IDelayProfileService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Messaging.Commands.CommandModel,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLine,</token>
<token>Presentation]],</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.Source,</token>
<token>Domain]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpRequest,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
</entry>
<entry count="10">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common.Http.HttpRequest,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="5">
<token>NzbDrone.Core.Download.Pending.PendingRelease,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>NzbDrone.Common.Http.HttpResponse,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
</entry>
<entry count="21">
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Columns.ColumnDto,</token>
</entry>
<entry count="8">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Columns.ColumnDto,</token>
<token>Application]],</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="22">
<token>-&gt;</token>
<token>?],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.RemotePathMappings.RemotePathMapping,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
</entry>
<entry count="2">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
<token>Presentation]],</token>
<token>mscorlib,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>NzbDrone.Core.Qualities.QualityDefinition,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Common.Model.ProcessInfo,</token>
<token>NzbDrone.Common]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application],[TProperty</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>p:int]],</token>
</entry>
<entry count="1">
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
</entry>
<entry count="2">
<token>d:[TResult]</token>
<token>[System.Func`2[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="5">
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.CompletionEvent,</token>
<token>KaVE.Commons]],</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="12">
<token>NzbDrone.Core.DecisionEngine.Decision,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="9">
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="83">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Sizes.SizeLegendItemDto,</token>
<token>Application]],</token>
</entry>
<entry count="2">
<token>Application],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Organizer.INamingConfigService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Organizer.NamingConfig,</token>
</entry>
<entry count="2">
<token>e:Couchbase.IO.ResponseStatus,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>System.Threading.Tasks.Task,</token>
<token>mscorlib,</token>
</entry>
<entry count="7">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
</entry>
<entry count="2">
<token>[System.Func`2[[T</token>
<token>-&gt;</token>
<token>Couchbase.IO.SocketAsyncState,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.Window,</token>
<token>PresentationFramework,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Core.History.History,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="10">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:string],[TValue</token>
<token>-&gt;</token>
<token>p:object]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Colors.Color,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0],[TProperty</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Pending.PendingRelease,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
</entry>
<entry count="9">
<token>System.Web.OData],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="10">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="7">
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MetadataSource.IProvideSeriesInfo,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.Source,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.AxisGridLine,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>p:int]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>NzbDrone.Common]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:double]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="6">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Columns.ColumnDto,</token>
<token>Application]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="5">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>s:System.DateTime,</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
</entry>
<entry count="6">
<token>p:bool]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="2">
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="4">
<token>Fohjin.DDD.Reporting],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.ClientDetailsReport,</token>
</entry>
<entry count="13">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.RootFolders.RootFolder,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
</entry>
<entry count="1">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Importers.CsvFiles.CsvFileSourceDto,</token>
<token>Application]],Returns</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.RootFolders.RootFolder,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>e:DataExplorer.Domain.Layouts.SortOrder,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="27">
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Colors.ColorLegendItemDto,</token>
<token>Application]],</token>
</entry>
<entry count="7">
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.ReleaseInfo,</token>
</entry>
<entry count="16">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:long]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>s:NzbDrone.Common.Disk.OsPath,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="14">
<token>DataExplorer.Application.Columns.ColumnDto,</token>
<token>Application]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Profiles.Delay.DelayProfile,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>NzbDrone.Core.Organizer.NamingConfig,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>4.0.0.0],[TValue</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Filters.Filter,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Type,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerRequestGenerator,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerPageableRequestChain,</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.MediaCover.ICoverExistsSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:int]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MetadataSource.IProvideSeriesInfo,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
</entry>
<entry count="8">
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpResponse,</token>
<token>NzbDrone.Common]],Returns</token>
</entry>
<entry count="6">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.NzbVortex.NzbVortexFiles,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.CanvasControl,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
</entry>
<entry count="8">
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportResult,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>e:DataExplorer.Domain.Semantics.SemanticType,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TProperty</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
<token>-&gt;</token>
<token>System.Type,</token>
</entry>
<entry count="2">
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.BankApplication.Views.IAccountDetailsView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
<token>-&gt;</token>
<token>p:string],[TValue</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>e:System.ServiceProcess.ServiceControllerStatus,</token>
<token>System.ServiceProcess,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application],[TResult</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.Qualities.QualityDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>System.IO.FileStream,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>PresentationFramework,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
</entry>
<entry count="2">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:object]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
</entry>
<entry count="1">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>p:double]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:object]],</token>
</entry>
<entry count="13">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
</entry>
<entry count="8">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
</entry>
<entry count="1">
<token>p:string]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
</entry>
<entry count="9">
<token>p:string[]]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlotLayout,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoader,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.Qualities.QualityDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Metadata.Files.MetadataFile,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>s:System.DateTime,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="22">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountDetailsReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.FilterTrees.FilterTreeNode,</token>
</entry>
<entry count="1">
<token>PresentationFramework,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Update.UpdatePackage,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverter,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:object]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="8">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
</entry>
<entry count="1">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlotLayout,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:string]],</token>
<token>KaVE.Commons]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>e:NzbDrone.Core.Indexers.DownloadProtocol,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
</entry>
<entry count="1">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpResponse,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Notifications.Xbmc.Model.ActivePlayer,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IDictionary`2[[TKey</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IPrioritizeDownloadDecision,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:object]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.BankApplication.Views.IAccountDetailsView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],Returns</token>
</entry>
<entry count="57">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="14">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Episode,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IParseIndexerResponse,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlot,</token>
</entry>
<entry count="3">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>s:NzbDrone.Common.Disk.OsPath,</token>
</entry>
<entry count="4">
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Returns</token>
</entry>
<entry count="10">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Profiles.Delay.IDelayProfileService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Profiles.Delay.DelayProfile,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="41">
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MetadataSource.IProvideSeriesInfo,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="13">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
</entry>
<entry count="1">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoader,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>s:System.DateTime,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="19">
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>NzbDrone.Core.Configuration.Config,</token>
<token>NzbDrone.Core]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
</entry>
<entry count="7">
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.ReleaseInfo,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>NzbDrone.Core.Organizer.NamingConfig,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="2">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasCircle,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>System.IO.DirectoryInfo,</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.Source,</token>
</entry>
<entry count="8">
<token>DataExplorer.Application.Columns.ColumnDto,</token>
<token>Application]],</token>
<token>mscorlib,</token>
</entry>
<entry count="15">
<token>Domain]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
</entry>
<entry count="22">
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>?],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="5">
<token>4.0.0.0]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:int]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IThrows,Throws</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
</entry>
<entry count="1">
<token>System.Type,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>p:object]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>NzbDrone.Core.Organizer.NamingConfig,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.DownloadClientItem,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
</entry>
<entry count="57">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="34">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>?],[TProperty</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Threading.Tasks.Task`1[[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Views.ScatterPlots.Plot,</token>
<token>Domain]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>e:DataExplorer.Domain.Layouts.SortOrder,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TResult]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>?],[TProperty</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Model.ProcessInfo,</token>
<token>NzbDrone.Common]],</token>
</entry>
<entry count="5">
<token>p:bool]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="2">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>System.IO.FileInfo,</token>
</entry>
<entry count="4">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>NzbDrone.Common.Model.ProcessInfo,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="3">
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
</entry>
<entry count="13">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Panes.Filter.FilterViewModel,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Xem.Model.XemSceneTvdbMapping,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Application.Importers.CsvFiles.CsvFileSourceDto,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common],[TProperty</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.RootFolders.RootFolder,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Filters.Filter,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Sizes.SizeLegendItemDto,</token>
<token>Application]],</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.NzbVortex.Responses.NzbVortexApiVersionResponse,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Notifications.Xbmc.Model.TvShow,</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IAccountDetailsView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountReport,</token>
</entry>
<entry count="1">
<token>p:object]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceFactory,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.UserProfiles.UserProfileEvent,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:Couchbase.Configuration.Server.Serialization.IBucketConfig,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.AxisGridLine,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Sources.CsvFileSource,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Xml.Linq,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
<token>p:bool]],</token>
</entry>
<entry count="6">
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
<token>p:string]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="2">
<token>Fohjin.DDD.BankApplication],[TResult</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],Returns</token>
</entry>
<entry count="84">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerPageableRequestChain,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceFactory,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Sources.Maps.SourceMap,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="15">
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Episode,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="8">
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
<token>p:string]],</token>
</entry>
<entry count="15">
<token>Fohjin.DDD.Reporting.Dto.AccountReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
<token>mscorlib,</token>
<token>2.0.0.0]],Returns</token>
</entry>
<entry count="4">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Pending.PendingRelease,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.Nzbget.NzbgetGlobalStatus,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>[System.Func`2[[T</token>
<token>-&gt;</token>
<token>Couchbase.IO.SocketAsyncState,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
</entry>
<entry count="6">
<token>System.IO.Stream,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="5">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
</entry>
<entry count="5">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IProcessDownloadDecisions,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Point,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasCircle,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoader,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlotLayout,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="13">
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.UploadSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
</entry>
<entry count="2">
<token>Couchbase],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="1">
<token>e:DataExplorer.Domain.Semantics.SemanticType,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>p:double]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="21">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="2">
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor],[TResult</token>
</entry>
<entry count="2">
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>TResult]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Vector,</token>
<token>WindowsBase,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>NzbDrone.Core.DecisionEngine.DownloadDecision,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
<token>p:double]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="13">
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Configuration.Config,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>System.Threading.Tasks.Task`1[[TResult</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
</entry>
<entry count="2">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="41">
<token>Fohjin.DDD.Reporting.Dto]],</token>
<token>mscorlib,</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>KaVE.Commons.Utils.ScheduledAction,</token>
<token>KaVE.Commons]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>e:DataExplorer.Domain.Semantics.SemanticType,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Metadata.Files.MetadataFile,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.IO.Stream,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>e:Couchbase.IO.ResponseStatus,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Notifications.Xbmc.Model.ActivePlayer,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DecisionEngine.Decision,</token>
</entry>
<entry count="6">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Common.Model.ProcessInfo,</token>
<token>NzbDrone.Common]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="11">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:long]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
</entry>
<entry count="4">
<token>Fohjin.DDD.Reporting.Dto.ClientDetailsReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>Couchbase.IO.SocketAsyncState,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>System.Threading.Tasks.Task,</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.BankApplication.Views.IAccountDetailsView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>e:NzbDrone.Core.Update.UpdateMechanism,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
</entry>
<entry count="4">
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportDecision,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Colors.Color,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
</entry>
<entry count="4">
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
</entry>
<entry count="3">
<token>DataExplorer.Domain.Rows.Row,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
<token>Application],[TResult</token>
</entry>
<entry count="4">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>Couchbase.IO.SocketAsyncState,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>System.Threading.Tasks.Task,</token>
</entry>
<entry count="1">
<token>Fohjin.DDD.Reporting.Dto.AccountReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
<token>mscorlib,</token>
<token>2.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>Moq.Language.IThrows,Throws</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
<token>Domain]],</token>
</entry>
<entry count="22">
<token>-&gt;</token>
<token>DataExplorer.Application.Columns.ColumnDto,</token>
</entry>
<entry count="2">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.Source,</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.Window,</token>
<token>PresentationFramework,</token>
</entry>
<entry count="6">
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="6">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="5">
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasItem,</token>
<token>Presentation]],</token>
<token>mscorlib,</token>
</entry>
<entry count="17">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
</entry>
<entry count="1">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>s:NzbDrone.Common.Disk.OsPath,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.ClientDetailsReport,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasImage,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasCircle,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>System.Type,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Sizes.SizeLegendItemDto,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>p:long]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.DownloadClientItem,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.ReleaseInfo,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:object]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.Window,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpRequest,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
</entry>
<entry count="140">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Sources.CsvFileSource,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Scene.SceneMapping,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>p:string]],</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
</entry>
<entry count="2">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLine,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MetadataSource.IProvideSeriesInfo,</token>
</entry>
<entry count="2">
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.DecisionEngine.DownloadDecision,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="2">
<token>e:NzbDrone.Core.Update.UpdateMechanism,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>p:string]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>Moq.Language.IThrows,Throws</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.DataAugmentation.Xem.Model.XemSceneTvdbMapping,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
</entry>
<entry count="5">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoader,</token>
</entry>
<entry count="9">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Metadata.Files.MetadataFile,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
</entry>
<entry count="1">
<token>System.Type,</token>
<token>mscorlib,</token>
<token>4.0.0.0],[TValue</token>
</entry>
<entry count="6">
<token>DataExplorer.Application.Columns.ColumnDto,</token>
<token>Application]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Scene.SceneMapping,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="1">
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core],[T2</token>
</entry>
<entry count="15">
<token>Fohjin.DDD.Reporting],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountReport,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="5">
<token>KaVE.Commons.Model.Events.CompletionEvents.CompletionEvent,</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>e:NzbDrone.Core.Update.UpdateMechanism,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.Maps.SourceMap,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DecisionEngine.DownloadDecision,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="3">
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="2">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLine,</token>
<token>Presentation]],</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Rect,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="8">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>NzbDrone.Core.Configuration.Config,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.DependencyObject,</token>
<token>WindowsBase,</token>
</entry>
<entry count="4">
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.ProcessedDecisions,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Collections.IKaVESet`1[[T</token>
<token>-&gt;</token>
<token>p:string]],</token>
<token>KaVE.Commons]],</token>
</entry>
<entry count="8">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
</entry>
<entry count="3">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="2">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="2">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
</entry>
<entry count="1">
<token>Fohjin.DDD.Reporting.Dto.ClientReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>NzbDrone.Core.Parser.Model.ReleaseInfo,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.Nzbget.NzbgetGlobalStatus,</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons],[TResult</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="3">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IBucket,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
</entry>
<entry count="1">
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Callback</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="15">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Episode,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Sizes.SizeLegendItemDto,</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Xem.Model.XemSceneTvdbMapping,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="22">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Data.DataTable,</token>
<token>System.Data,</token>
</entry>
<entry count="1">
<token>DataExplorer.Application.Importers.CsvFiles.CsvFileSourceDto,</token>
<token>Application]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportDecision,</token>
</entry>
<entry count="2">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
<token>p:int]],</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasItem,</token>
<token>Presentation]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>PresentationFramework,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
<token>KaVE.Commons],[T2</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.UploadSettings,</token>
</entry>
<entry count="1">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Sizes.SizeLegendItemDto,</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasCircle,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="13">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="6">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>s:System.Windows.Vector,</token>
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
</entry>
<entry count="15">
<token>NzbDrone.Core.Tv.Episode,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="2">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.NzbVortex.NzbVortexFiles,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.CompletionEvent,</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.Source,</token>
<token>Domain]],</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Data.DataTable,</token>
<token>System.Data,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.NzbVortex.NzbVortexGroup,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
</entry>
<entry count="2">
<token>p:string[]]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>TResult]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Notifications.Xbmc.Model.TvShow,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverter,</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="2">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Views.View,</token>
<token>Domain]],</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.ICoverExistsSpecification,</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="15">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>Couchbase.Configuration.Client.ClientConfiguration,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="14">
<token>Application]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="12">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>DataExplorer.Domain.Rows.Row,</token>
<token>Domain]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:int]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
</entry>
<entry count="10">
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
</entry>
<entry count="6">
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application],[TResult</token>
</entry>
<entry count="2">
<token>DataExplorer.Application.Views.ScatterPlots.PlotDto,</token>
<token>Application]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="13">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpRequest,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>Application]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
</entry>
<entry count="84">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="7">
<token>Application]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
</entry>
<entry count="4">
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>NzbDrone.Common],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>p:double]],</token>
</entry>
<entry count="3">
<token>NzbDrone.Core.Configuration.Config,</token>
<token>NzbDrone.Core]],Callback</token>
</entry>
<entry count="2">
<token>NzbDrone.Common]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:string],[TValue</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Collections.IKaVESet`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Messaging.Commands.CommandModel,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="4">
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application],[TResult</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DecisionEngine.DownloadDecision,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IThrows,Throws</token>
</entry>
<entry count="103">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>DataExplorer.Application.Columns.ColumnDto,</token>
<token>Application]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
</entry>
<entry count="2">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="1">
<token>p:string],[TValue</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Collections.IKaVESet`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.IConnectionPool,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
</entry>
<entry count="7">
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Returns</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core],[T2</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.IO.FileStream,</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
</entry>
<entry count="2">
<token>Moq.Language.IThrows,Throws</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
</entry>
<entry count="5">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Rect,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Projects.Project,</token>
</entry>
<entry count="2">
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
<token>Presentation]],</token>
</entry>
<entry count="9">
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TResult]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Messaging.Commands.CommandModel,</token>
</entry>
<entry count="2">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
</entry>
<entry count="4">
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
<token>KaVE.Commons],[T2</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
</entry>
<entry count="7">
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>System.IO.Stream,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Callback</token>
</entry>
<entry count="5">
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="12">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="10">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="3">
<token>s:NzbDrone.Common.Disk.OsPath,</token>
<token>NzbDrone.Common]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Download.Clients.Nzbget.NzbgetGlobalStatus,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IBucket,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.RemotePathMappings.RemotePathMapping,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
</entry>
<entry count="1">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverter,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.NzbVortex.Responses.NzbVortexApiVersionResponse,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpRequest,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:object]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Panes.Filter.FilterViewModel,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="3">
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
<token>p:int]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.Server.Serialization.IBucketConfig,</token>
</entry>
<entry count="4">
<token>KaVE.Commons],[T2</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
<token>KaVE.Commons]],</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Colors.ColorLegendItemDto,</token>
</entry>
<entry count="7">
<token>s:System.DateTime,</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:int]],Returns</token>
</entry>
<entry count="7">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasItem,</token>
<token>Presentation]],</token>
</entry>
<entry count="1">
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>e:System.ServiceProcess.ServiceControllerStatus,</token>
<token>System.ServiceProcess,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="21">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="4">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application],[TResult</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasItem,</token>
</entry>
<entry count="2">
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.CsvFileSource,</token>
</entry>
<entry count="1">
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
</entry>
<entry count="3">
<token>Fohjin.DDD.BankApplication],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="21">
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.DependencyObject,</token>
<token>WindowsBase,</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>p:string]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:bool]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Configuration.Config,</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Xem.Model.XemSceneTvdbMapping,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Scene.SceneMapping,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="4">
<token>s:System.DateTime,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0],[TProperty</token>
</entry>
<entry count="5">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core],[TProperty</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Application]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="3">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IPrioritizeDownloadDecision,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:int]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Colors.Color,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>NzbDrone.Core.Configuration.Config,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpResponse,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Rect,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:string[]]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>p:double]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:string],[TValue</token>
<token>-&gt;</token>
<token>p:object]],</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>DataExplorer.Application.Columns.ColumnDto,</token>
<token>Application]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
</entry>
<entry count="3">
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>DataExplorer.Domain.Filters.Filter,</token>
<token>Domain]],</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:int]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="5">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData],[TProperty</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Views.View,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
<token>Presentation]],</token>
</entry>
<entry count="2">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Sources.Source,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="24">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
</entry>
<entry count="2">
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>NzbDrone.Common],[TProperty</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.FilterTrees.FilterTreeNode,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="5">
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportResult,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.FilterTrees.FilterTreeNode,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>mscorlib,</token>
<token>4.0.0.0].([T]</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>System.IO.FileStream,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IProcessDownloadDecisions,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.ProcessedDecisions,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="17">
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:object]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Colors.ColorLegendItemDto,</token>
<token>Application]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Download.Clients.NzbVortex.NzbVortexGroup,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="22">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountDetailsReport,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>e:NzbDrone.Core.Indexers.DownloadProtocol,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Application.Views.ScatterPlots.PlotDto,</token>
<token>Application]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Type,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Notifications.Xbmc.Model.ActivePlayer,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.Media.Visual,</token>
<token>PresentationCore,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="3">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:int]],Callback</token>
</entry>
<entry count="1">
<token>e:NzbDrone.Core.Update.UpdateMechanism,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverter,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
</entry>
<entry count="4">
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="2">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>e:DataExplorer.Domain.Semantics.SemanticType,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Update.UpdatePackage,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>[System.Func`2[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
<token>KaVE.Commons],[T2</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
<token>KaVE.Commons]],</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>System.Windows.Media.Visual,</token>
<token>PresentationCore,</token>
<token>4.0.0.0]],</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
<token>KaVE.Commons],[T2</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.Collections.IKaVESet`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>p:double]],</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.History.History,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="2">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="17">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Common.Http.HttpResponse,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="2">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.ParsedEpisodeInfo,</token>
</entry>
<entry count="4">
<token>DataExplorer.Domain.Views.ScatterPlots.AxisGridLine,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Profiles.Delay.DelayProfile,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>p:int]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Scene.SceneMapping,</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
</entry>
<entry count="6">
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Notifications.Xbmc.Model.ActivePlayer,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="15">
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
</entry>
<entry count="1">
<token>p:double]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application],[TResult</token>
</entry>
<entry count="13">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="12">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
</entry>
<entry count="6">
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>System.IO.Stream,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:double]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.Nzbget.NzbgetGlobalStatus,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:int]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
<token>Application],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
</entry>
<entry count="4">
<token>Couchbase.Configuration.Client.ClientConfiguration,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Type,</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>DataExplorer.Application.Views.ScatterPlots.PlotDto,</token>
<token>Application]],</token>
</entry>
<entry count="5">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IThrows,Throws</token>
</entry>
<entry count="2">
<token>System.Windows.Window,</token>
<token>PresentationFramework,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="8">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportResult,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="10">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.NzbVortex.Responses.NzbVortexApiVersionResponse,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData],[TProperty</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="2">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="3">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="22">
<token>?],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure],[TResult</token>
</entry>
<entry count="1">
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>e:NzbDrone.Core.Update.UpdateMechanism,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Download.Clients.NzbVortex.NzbVortexGroup,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="3">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.History.History,</token>
</entry>
<entry count="10">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IPrioritizeDownloadDecision,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:string],[TValue</token>
<token>-&gt;</token>
<token>p:object]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Messaging.Commands.CommandModel,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>NzbDrone.Core.Configuration.Config,</token>
<token>NzbDrone.Core]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>System.Windows.Media.Visual,</token>
<token>PresentationCore,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Windows.Window,</token>
<token>PresentationFramework,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Pending.PendingRelease,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="4">
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="4">
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.RemotePathMappings.RemotePathMapping,</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Qualities.QualityDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Qualities.QualityDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
</entry>
<entry count="5">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Returns</token>
</entry>
<entry count="4">
<token>NzbDrone.Common],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientDetailsView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>?],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MetadataSource.IProvideSeriesInfo,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
</entry>
<entry count="6">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DecisionEngine.DownloadDecision,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.Window,</token>
<token>PresentationFramework,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>System.IO.FileInfo,</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientDetailsView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase],[TProperty</token>
<token>-&gt;</token>
<token>e:Couchbase.IO.ResponseStatus,</token>
</entry>
<entry count="91">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
<token>Domain]],</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TProperty</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
</entry>
<entry count="41">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
</entry>
<entry count="8">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="5">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
</entry>
<entry count="2">
<token>NzbDrone.Common.Model.ProcessInfo,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>s:System.Windows.Rect,</token>
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Xem.Model.XemSceneTvdbMapping,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.RootFolders.RootFolder,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="4">
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
<token>KaVE.Commons]],</token>
</entry>
<entry count="1">
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
</entry>
<entry count="4">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>System.IO.Stream,</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>p:bool]],</token>
</entry>
<entry count="1">
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
</entry>
<entry count="6">
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.IThrows,Throws</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportResult,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.CsvFileSource,</token>
</entry>
<entry count="4">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="2">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Rect,</token>
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="3">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="2">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Point,</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlotLayout,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="3">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
</entry>
<entry count="2">
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
<token>4.0.0.0].([T]</token>
<token>arg)]],Returns</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="7">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Collections.IKaVESet`1[[T</token>
<token>-&gt;</token>
<token>p:string]],</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
</entry>
<entry count="5">
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Xem.Model.XemSceneTvdbMapping,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>p:long]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>e:NzbDrone.Core.Update.UpdateMechanism,</token>
</entry>
<entry count="1">
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
</entry>
<entry count="4">
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>KaVE.VS.FeedbackGenerator.Settings.UploadSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Rect,</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DecisionEngine.Decision,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlot,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Model.ProcessInfo,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="3">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.CsvFileSource,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
</entry>
<entry count="119">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="45">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProcessDownloadDecisions,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.ProcessedDecisions,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.BankApplication.Views.IClientDetailsView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
</entry>
<entry count="2">
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Colors.ColorLegendItemDto,</token>
<token>Application]],</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Colors.ColorLegendItemDto,</token>
<token>Application]],</token>
</entry>
<entry count="4">
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportDecision,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons],[TResult</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.Server.Serialization.IBucketConfig,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
</entry>
<entry count="6">
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="18">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:int]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="7">
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Parser.Model.LocalEpisode,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
</entry>
<entry count="22">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountDetailsReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
</entry>
<entry count="3">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.CsvFileSource,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MetadataSource.IProvideSeriesInfo,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
</entry>
<entry count="1">
<token>System.Windows.DependencyObject,</token>
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="39">
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>i:Couchbase.Configuration.Server.Serialization.IBucketConfig,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>mscorlib,</token>
<token>4.0.0.0]],Callback</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Pending.PendingRelease,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>NzbDrone.Core.Download.Pending.PendingRelease,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.RemotePathMappings.RemotePathMapping,</token>
</entry>
<entry count="9">
<token>NzbDrone.Common.Http.HttpResponse,</token>
<token>NzbDrone.Common]],Returns</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnectionPool,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>e:System.ServiceProcess.ServiceControllerStatus,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Views.ScatterPlots.PlotDto,</token>
<token>Application]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpResponse,</token>
</entry>
<entry count="5">
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportResult,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientDetailsView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>p:int]],Callback</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="9">
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
</entry>
<entry count="4">
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.UserProfiles.UserProfileEvent,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application],[TResult</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="4">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasImage,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Download.DownloadClientItem,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
</entry>
<entry count="22">
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountDetailsReport,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
</entry>
<entry count="2">
<token>p:int]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.IO.FileStream,</token>
</entry>
<entry count="17">
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="2">
<token>System.IO.DirectoryInfo,</token>
<token>mscorlib,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="14">
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
</entry>
<entry count="2">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnectionPool,</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>DataExplorer.Domain.Rows.Row,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
</entry>
<entry count="4">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Pending.PendingRelease,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>KaVE.Commons.Utils.ScheduledAction,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core],[T2</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Update.UpdatePackage,</token>
</entry>
<entry count="3">
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="3">
<token>NzbDrone.Core.Configuration.Config,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.DownloadClientItem,</token>
</entry>
<entry count="2">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
</entry>
<entry count="1">
<token>System.Type,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
</entry>
<entry count="3">
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0],[TProperty</token>
</entry>
<entry count="15">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Sources.Source,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
</entry>
<entry count="10">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportDecision,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="3">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="112">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Columns.ColumnDto,</token>
<token>Application]],Returns</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>s:System.DateTime,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportDecision,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Colors.ColorLegendItemDto,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Domain.Projects.Project,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>s:NzbDrone.Common.Disk.OsPath,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.Delay.IDelayProfileService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Profiles.Delay.DelayProfile,</token>
</entry>
<entry count="7">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Pending.PendingRelease,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>NzbDrone.Core.Organizer.NamingConfig,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
</entry>
<entry count="3">
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="15">
<token>System.Xml.Linq,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Columns.ColumnDto,</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlot,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.ParsedEpisodeInfo,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Model.ProcessInfo,</token>
<token>NzbDrone.Common]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>p:int]],</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.INamingConfigService,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>e:NzbDrone.Core.Indexers.DownloadProtocol,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>System.Type,</token>
</entry>
<entry count="4">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>System.IO.FileStream,</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>e:NzbDrone.Core.Update.UpdateMechanism,</token>
</entry>
<entry count="4">
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.RemotePathMappings.RemotePathMapping,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>PresentationFramework,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Update.UpdatePackage,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>NzbDrone.Core.DecisionEngine.DownloadDecision,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>p:string],[TValue</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
</entry>
<entry count="3">
<token>DataExplorer.Domain.Filters.Filter,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
</entry>
<entry count="5">
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>s:NzbDrone.Common.Disk.OsPath,</token>
<token>NzbDrone.Common]],Returns</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Projects.Project,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>DataExplorer.Application.Legends.Colors.ColorLegendItemDto,</token>
<token>Application]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
</entry>
<entry count="3">
<token>p:bool]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="2">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.NzbVortex.NzbVortexFiles,</token>
</entry>
<entry count="3">
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
</entry>
<entry count="1">
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.NzbVortex.NzbVortexGroup,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>s:System.Windows.Vector,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="3">
<token>p:bool]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
</entry>
<entry count="3">
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Qualities.QualityDefinition,</token>
</entry>
<entry count="2">
<token>Couchbase],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="15">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
<token>mscorlib,</token>
</entry>
<entry count="8">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="12">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TProperty</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>p:object]],Returns</token>
</entry>
<entry count="5">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure],[TResult</token>
</entry>
<entry count="2">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceFactory,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientSearchFormView,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.AnonymizationSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="4">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportDecision,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
</entry>
<entry count="2">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
<token>Presentation]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
<token>KaVE.Commons],[T2</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Projects.Project,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="8">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Columns.ColumnDto,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common],[TProperty</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>KaVE.Commons.Utils.ScheduledAction,</token>
<token>KaVE.Commons]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons],[TResult</token>
</entry>
<entry count="13">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
</entry>
<entry count="3">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportResult,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.IO.FileInfo,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.AxisGridLine,</token>
<token>Domain]],</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
</entry>
<entry count="12">
<token>Moq.Language.IVerifies,Verifiable</token>
<token>Moq.Language.IVerifies,Verifiable</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Callback</token>
</entry>
<entry count="2">
<token>Fohjin.DDD.Reporting.Dto.AccountReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Download.DownloadClientItem,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
</entry>
<entry count="2">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="15">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Episode,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
</entry>
<entry count="3">
<token>Couchbase.Configuration.Client.ClientConfiguration,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>Fohjin.DDD.Reporting.Dto.ClientDetailsReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
</entry>
<entry count="4">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.ClientDetailsReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
<token>mscorlib,</token>
</entry>
<entry count="14">
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Application.Views.ScatterPlots.PlotDto,</token>
<token>Application]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="4">
<token>Fohjin.DDD.Reporting.Dto.ClientDetailsReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
<token>mscorlib,</token>
<token>2.0.0.0]],Returns</token>
</entry>
<entry count="5">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.ICoverExistsSpecification,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
</entry>
<entry count="4">
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
<token>KaVE.Commons],[T2</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.UploadSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TResult]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>TResult]],Returns</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:int]],Returns</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IParseIndexerResponse,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.NzbVortex.NzbVortexGroup,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>KaVE.Commons.Utils.ScheduledAction,</token>
<token>KaVE.Commons]],Callback</token>
</entry>
<entry count="3">
<token>Application]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Pending.PendingRelease,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MetadataSource.IProvideSeriesInfo,</token>
</entry>
<entry count="2">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
</entry>
<entry count="2">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Colors.Color,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlot,</token>
</entry>
<entry count="2">
<token>?],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Type,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
</entry>
<entry count="4">
<token>KaVE.Commons],[T2</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
</entry>
<entry count="4">
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
<token>KaVE.Commons],[T2</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
</entry>
<entry count="10">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="6">
<token>NzbDrone.Core.DecisionEngine.DownloadDecision,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.AxisGridLine,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.BankApplication.Views.IClientSearchFormView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.Plot,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application],[TResult</token>
</entry>
<entry count="10">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="2">
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application],[TProperty</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="13">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
</entry>
<entry count="14">
<token>Application]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="4">
<token>KaVE.Commons],[T2</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:int]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Qualities.QualityDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IDictionary`2[[TKey</token>
<token>-&gt;</token>
<token>p:string],[TValue</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>NzbDrone.Core.DataAugmentation.Scene.SceneMapping,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.NzbVortex.Responses.NzbVortexApiVersionResponse,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="3">
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="4">
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
<token>KaVE.Commons],[T2</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="36">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>Couchbase.Configuration.Client.ClientConfiguration,</token>
</entry>
<entry count="83">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerRequestGenerator,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
<token>p:int]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>p:double]],Returns</token>
</entry>
<entry count="91">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.UserProfileSettings,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
</entry>
<entry count="7">
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator.Settings.AnonymizationSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.History.History,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>System.IO.DirectoryInfo,</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],</token>
</entry>
<entry count="2">
<token>System.Data.DataTable,</token>
<token>System.Data,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="6">
<token>DataExplorer.Application.Columns.ColumnDto,</token>
<token>Application]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
</entry>
<entry count="3">
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IThrows,Throws</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>Infrastructure],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="3">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Configuration.Config,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Xem.Model.XemSceneTvdbMapping,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.Window,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Type,</token>
<token>mscorlib,</token>
<token>4.0.0.0],[TValue</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLine,</token>
<token>Presentation]],</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:long]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.LocalEpisode,</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
</entry>
<entry count="3">
<token>Application]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application],[TResult</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.RootFolders.RootFolder,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MetadataSource.IProvideSeriesInfo,</token>
</entry>
<entry count="2">
<token>i:Couchbase.Configuration.Server.Serialization.IBucketConfig,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IThrows,Throws</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>System.Xml.Linq,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
</entry>
<entry count="11">
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Returns</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoader,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>KaVE.Commons]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
<token>Domain]],</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
</entry>
<entry count="4">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="1">
<token>p:object]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>p:int]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.CanvasControl,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>NzbDrone.Core.Organizer.NamingConfig,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MetadataSource.IProvideSeriesInfo,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="41">
<token>Fohjin.DDD.Reporting.Dto]],</token>
<token>mscorlib,</token>
<token>2.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
</entry>
<entry count="5">
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
</entry>
<entry count="1">
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IDictionary`2[[TKey</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="10">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
</entry>
<entry count="2">
<token>System.Windows.DependencyObject,</token>
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Download.DownloadClientItem,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientSearchFormView,</token>
</entry>
<entry count="1">
<token>e:DataExplorer.Domain.Semantics.SemanticType,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>DataExplorer.Application.Columns.ColumnDto,</token>
<token>Application]],</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
</entry>
<entry count="1">
<token>p:string]],</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="4">
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="41">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting],[TResult</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="18">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Core.RemotePathMappings.RemotePathMapping,</token>
</entry>
<entry count="5">
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>System.Xml.Linq,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProcessDownloadDecisions,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.CompletionEvent,</token>
</entry>
<entry count="11">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
</entry>
<entry count="1">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Couchbase.Configuration.Server.Serialization.IBucketConfig,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="21">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0],[TProperty</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
</entry>
<entry count="3">
<token>KaVE.Commons.Model.Events.UserProfiles.UserProfileEvent,</token>
<token>KaVE.Commons]],Returns</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="34">
<token>?],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="6">
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
<token>KaVE.Commons],[T2</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.FilterTrees.FilterTreeNode,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>p:int]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="6">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Qualities.QualityDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="8">
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.RemotePathMappings.RemotePathMapping,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DecisionEngine.Decision,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="11">
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>DataExplorer.Domain.Filters.Filter,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>d:[TResult]</token>
<token>[System.Func`2[[T</token>
<token>-&gt;</token>
<token>Couchbase.IO.SocketAsyncState,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>?],[TResult</token>
<token>-&gt;</token>
<token>?]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core],[TProperty</token>
</entry>
<entry count="45">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="2">
<token>s:NzbDrone.Common.Disk.OsPath,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.INamingConfigService,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
</entry>
<entry count="5">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Update.UpdatePackage,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="3">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Sizes.SizeLegendItemDto,</token>
<token>Application]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Windows.Media.Visual,</token>
<token>PresentationCore,</token>
<token>4.0.0.0]],</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.History.History,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.NzbVortex.Responses.NzbVortexApiVersionResponse,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.IO.Stream,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Callback</token>
</entry>
<entry count="5">
<token>4.0.0.0]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>NzbDrone.Common],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.History.History,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.UploadSettings,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons],[TResult</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IParseIndexerResponse,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="14">
<token>NzbDrone.Core.Tv.Episode,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>p:string[]]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>?],[TResult</token>
<token>-&gt;</token>
<token>?]],Returns</token>
</entry>
<entry count="13">
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
</entry>
<entry count="2">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Projects.Project,</token>
</entry>
<entry count="1">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
<token>-&gt;</token>
<token>System.Type,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Messaging.Commands.CommandModel,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Sizes.SizeLegendItemDto,</token>
<token>Application]],</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Download.DownloadClientItem,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="4">
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.BankApplication.Views.IClientSearchFormView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.ClientReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],Returns</token>
</entry>
<entry count="14">
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
</entry>
<entry count="4">
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>Couchbase.Configuration.Client.ClientConfiguration,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Messaging.Commands.CommandModel,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Update.UpdatePackage,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Views.ScatterPlots.Plot,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:string],[TValue</token>
<token>-&gt;</token>
<token>p:string]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.DownloadClientItem,</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.RootFolders.RootFolder,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Common],[TProperty</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>e:DataExplorer.Domain.Semantics.SemanticType,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Windows.Media.Imaging.BitmapSource,</token>
<token>PresentationCore,</token>
</entry>
<entry count="2">
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientSearchFormView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.ClientReport,</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="1">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Projects.Project,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
</entry>
<entry count="6">
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
</entry>
<entry count="12">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DecisionEngine.Decision,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Download.Clients.NzbVortex.NzbVortexGroup,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>System.Windows.Window,</token>
<token>PresentationFramework,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:object]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Threading.Tasks.Task,</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor],[TResult</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
</entry>
<entry count="13">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Projects.Project,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
<token>Domain]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceFactory,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
</entry>
<entry count="1">
<token>p:string]],</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportResult,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="2">
<token>p:string[]]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>e:DataExplorer.Domain.Semantics.SemanticType,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
</entry>
<entry count="4">
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
<token>KaVE.Commons]],Returns</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="4">
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpResponse,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="16">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TResult]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Windows.DependencyObject,</token>
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="5">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpResponse,</token>
<token>NzbDrone.Common]],Returns</token>
</entry>
<entry count="3">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IPrioritizeDownloadDecision,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="4">
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Metadata.Files.MetadataFile,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.Messaging.Commands.CommandModel,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="9">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>d:[TResult]</token>
</entry>
<entry count="5">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
</entry>
<entry count="8">
<token>s:System.Windows.Rect,</token>
<token>WindowsBase,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Qualities.QualityDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.Download.Clients.NzbVortex.NzbVortexFiles,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>System.Xml.Linq,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IThrows,Throws</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TProperty</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Messaging.Commands.CommandModel,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Profiles.Delay.DelayProfile,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Notifications.Xbmc.Model.TvShow,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="10">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:long]],Returns</token>
</entry>
<entry count="12">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Couchbase.IO.SocketAsyncState,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.NzbVortex.NzbVortexGroup,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.Media.Imaging.BitmapSource,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DecisionEngine.Decision,</token>
</entry>
<entry count="3">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="1">
<token>s:System.Windows.Vector,</token>
<token>WindowsBase,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.DecisionEngine.IPrioritizeDownloadDecision,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
</entry>
<entry count="2">
<token>Moq.Language.IThrows,Throws</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting],[TResult</token>
</entry>
<entry count="2">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Views.ScatterPlots.PlotDto,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>s:NzbDrone.Common.Disk.OsPath,</token>
<token>NzbDrone.Common]],Returns</token>
</entry>
<entry count="7">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="84">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IThrows,Throws</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="4">
<token>System.IO.FileStream,</token>
<token>mscorlib,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>DataExplorer.Presentation.Core.Canvas.CanvasControl,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasItem,</token>
<token>Presentation]],</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.DataAugmentation.Xem.Model.XemSceneTvdbMapping,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IThrows,Throws</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator.Settings.UploadSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.Configuration.Server.Serialization.IBucketConfig,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IThrows,Throws</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="5">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="34">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>?],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.AxisGridLine,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Update.UpdatePackage,</token>
</entry>
<entry count="7">
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Profiles.Delay.DelayProfile,</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Projects.Project,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="3">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="41">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="2">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Data.DataTable,</token>
<token>System.Data,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>System.Threading.Tasks.Task`1[[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],</token>
</entry>
<entry count="9">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Organizer.INamingConfigService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Organizer.NamingConfig,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>s:System.DateTime,</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.IServiceFactory,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>s:System.Windows.Point,</token>
<token>WindowsBase,</token>
</entry>
<entry count="2">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Model.ProcessInfo,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>p:string]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.IO.DirectoryInfo,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Notifications.Xbmc.Model.TvShow,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application],[TProperty</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="2">
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLine,</token>
<token>Presentation]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Metadata.Files.MetadataFile,</token>
</entry>
<entry count="3">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IPrioritizeDownloadDecision,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>System.IO.Stream,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoader,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>4.0.0.0],[TValue</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="35">
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlotLayout,</token>
</entry>
<entry count="4">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Importers.CsvFiles.CsvFileSourceDto,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Xml.Linq,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
</entry>
<entry count="8">
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>e:Couchbase.IO.ResponseStatus,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="2">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="4">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
</entry>
<entry count="1">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Colors.ColorLegendItemDto,</token>
</entry>
<entry count="4">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Scene.SceneMapping,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="4">
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
</entry>
<entry count="2">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Model.ProcessInfo,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IThrows,Throws</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="15">
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Domain.Projects.Project,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
</entry>
<entry count="3">
<token>NzbDrone.Core.Configuration.Config,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="15">
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
<token>mscorlib,</token>
<token>2.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>?],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Domain.Colors.Color,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
</entry>
<entry count="4">
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>e:NzbDrone.Core.Indexers.DownloadProtocol,</token>
</entry>
<entry count="2">
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
</entry>
<entry count="3">
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
<token>p:bool]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
</entry>
<entry count="6">
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase],[TProperty</token>
</entry>
<entry count="7">
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Common],[TProperty</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
<token>KaVE.Commons]],</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>e:DataExplorer.Domain.Layouts.SortOrder,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Columns.ColumnDto,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>s:System.DateTime,</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TProperty</token>
</entry>
<entry count="2">
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>e:NzbDrone.Core.Indexers.DownloadProtocol,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="14">
<token>2.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="7">
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.DecisionEngine.Decision,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="6">
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>p:double]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Scene.SceneMapping,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="1">
<token>System.Threading.Tasks.Task`1[[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:object]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnectionPool,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
</entry>
<entry count="10">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="5">
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.CompletionEvent,</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
</entry>
<entry count="15">
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
</entry>
<entry count="4">
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>Couchbase.Configuration.Client.ClientConfiguration,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[T2</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application],[TResult</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProcessDownloadDecisions,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Couchbase]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>NzbDrone.Core.Configuration.Config,</token>
<token>NzbDrone.Core]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="8">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportResult,</token>
</entry>
<entry count="22">
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountDetailsReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
</entry>
<entry count="17">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
</entry>
<entry count="3">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Views.ScatterPlots.Plot,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="9">
<token>Presentation]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.Plot,</token>
<token>Domain]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
</entry>
<entry count="4">
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="41">
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting],[TResult</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>NzbDrone.Core.DecisionEngine.Decision,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Type,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="3">
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IBucket,</token>
</entry>
<entry count="2">
<token>[System.Func`2[[T</token>
<token>-&gt;</token>
<token>Couchbase.IO.SocketAsyncState,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IDictionary`2[[TKey</token>
<token>-&gt;</token>
<token>p:string],[TValue</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="10">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Common.Model.ProcessInfo,</token>
<token>NzbDrone.Common]],</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
</entry>
<entry count="2">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
</entry>
<entry count="3">
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Rect,</token>
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.CsvFileSource,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="4">
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
<token>KaVE.Commons],[T2</token>
</entry>
<entry count="3">
<token>4.0.0.0]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Core.History.History,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>p:string],[TValue</token>
<token>-&gt;</token>
<token>p:object]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.Source,</token>
</entry>
<entry count="7">
<token>Presentation]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Pending.PendingRelease,</token>
</entry>
<entry count="7">
<token>s:System.DateTime,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.Nzbget.NzbgetGlobalStatus,</token>
</entry>
<entry count="3">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.UserProfileSettings,</token>
</entry>
<entry count="4">
<token>KaVE.VS.FeedbackGenerator]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="2">
<token>Couchbase]],Returns</token>
<token>Moq.Language.IThrows,Throws</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.MediaCover.ICoverExistsSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
</entry>
<entry count="4">
<token>KaVE.VS.FeedbackGenerator]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasCircle,</token>
</entry>
<entry count="18">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>e:NzbDrone.Core.Update.UpdateMechanism,</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.NzbVortex.Responses.NzbVortexApiVersionResponse,</token>
</entry>
<entry count="2">
<token>p:string[]]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
</entry>
<entry count="1">
<token>System.Windows.Window,</token>
<token>PresentationFramework,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.History.History,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IDictionary`2[[TKey</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.ParsedEpisodeInfo,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="4">
<token>?],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IVerifies,Verifiable</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.ReleaseInfo,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.Collections.IKaVESet`1[[T</token>
<token>-&gt;</token>
<token>p:string]],</token>
<token>KaVE.Commons]],</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Messaging.Commands.CommandModel,</token>
</entry>
<entry count="7">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0],[TProperty</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="4">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>System.Threading.Tasks.Task,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>System.Windows.Media.Visual,</token>
<token>PresentationCore,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:string]],</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application],[TProperty</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>e:DataExplorer.Domain.Layouts.SortOrder,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>e:NzbDrone.Core.Update.UpdateMechanism,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerRequestGenerator,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlot,</token>
</entry>
<entry count="2">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>p:string],[TValue</token>
<token>-&gt;</token>
<token>p:string]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="25">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IDictionary`2[[TKey</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>KaVE.Commons.Model.Events.CompletionEvents.CompletionEvent,</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>Application]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Profiles.Delay.DelayProfile,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
</entry>
<entry count="2">
<token>s:NzbDrone.Common.Disk.OsPath,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>DataExplorer.Application.Columns.ColumnDto,</token>
<token>Application]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
</entry>
<entry count="5">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>d:[TResult]</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core],[TProperty</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Notifications.Xbmc.Model.ActivePlayer,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Pending.PendingRelease,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application],[TResult</token>
</entry>
<entry count="2">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
</entry>
<entry count="5">
<token>NzbDrone.Core.Download.Pending.PendingRelease,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>p:int]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Common.Http.HttpRequest,</token>
<token>NzbDrone.Common]],Returns</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
</entry>
<entry count="2">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.AxisGridLine,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Windows.DependencyObject,</token>
</entry>
<entry count="1">
<token>Couchbase]],</token>
<token>mscorlib,</token>
</entry>
<entry count="5">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Scene.SceneMapping,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:int]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="18">
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProcessDownloadDecisions,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.Collections.IKaVESet`1[[T</token>
<token>-&gt;</token>
<token>p:string]],</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Indexers.IndexerPageableRequestChain,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="5">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
</entry>
<entry count="2">
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>p:string],[TValue</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="4">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
</entry>
<entry count="5">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>System.IO.DirectoryInfo,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.IO.FileInfo,</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>p:int]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>KaVE.VS.FeedbackGenerator.Settings.UserProfileSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData],[TProperty</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.UserProfileSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Columns.ColumnDto,</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasLabel,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>p:string[]]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Organizer.INamingConfigService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Panes.Filter.FilterViewModel,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Common.Model.ProcessInfo,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Sizes.SizeLegendItemDto,</token>
</entry>
<entry count="5">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.ICoverExistsSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.Source,</token>
</entry>
<entry count="2">
<token>Couchbase.IO.SocketAsyncState,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Scene.SceneMapping,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlotLayout,</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0],[TValue</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
<token>Domain]],</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="2">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Common.Model.ProcessInfo,</token>
<token>NzbDrone.Common]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IPrioritizeDownloadDecision,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>p:int]],</token>
<token>mscorlib,</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.ReleaseInfo,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnectionPool,</token>
</entry>
<entry count="2">
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Rect,</token>
<token>WindowsBase,</token>
</entry>
<entry count="2">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="9">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="3">
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>s:NzbDrone.Common.Disk.OsPath,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="3">
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.Parser.Model.ReleaseInfo,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
</entry>
<entry count="39">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>System.IO.DirectoryInfo,</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="3">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Configuration.Config,</token>
<token>NzbDrone.Core]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Organizer.NamingConfig,</token>
</entry>
<entry count="14">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Columns.ColumnDto,</token>
<token>Application]],Returns</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="21">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.BankApplication.Views.IClientDetailsView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountReport,</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasCircle,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Profiles.Delay.DelayProfile,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="7">
<token>p:bool]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoader,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
</entry>
<entry count="10">
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>e:NzbDrone.Core.Update.UpdateMechanism,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
</entry>
<entry count="2">
<token>DataExplorer.Application.Views.ScatterPlots.PlotDto,</token>
<token>Application]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IDictionary`2[[TKey</token>
<token>-&gt;</token>
<token>p:string],[TValue</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Collections.IKaVESet`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.UploadSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasItem,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.History.History,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>e:NzbDrone.Core.Update.UpdateMechanism,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="5">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>NzbDrone.Core.Qualities.QualityDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="2">
<token>Moq.Language.IThrows,Throws</token>
<token>Moq.Language.IThrows,Throws</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IDictionary`2[[TKey</token>
<token>-&gt;</token>
<token>p:string],[TValue</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Common.Http.HttpResponse,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
</entry>
<entry count="1">
<token>DataExplorer.Presentation.Core.Canvas.CanvasControl,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Point,</token>
<token>WindowsBase,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Notifications.Xbmc.Model.ActivePlayer,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Notifications.Xbmc.Model.TvShow,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="2">
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase],[TProperty</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientSearchFormView,</token>
<token>Fohjin.DDD.BankApplication],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasImage,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.AnonymizationSettings,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="5">
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>e:System.ServiceProcess.ServiceControllerStatus,</token>
<token>System.ServiceProcess,</token>
</entry>
<entry count="4">
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="8">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TResult]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Rect,</token>
<token>WindowsBase,</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>System.IO.FileInfo,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
</entry>
<entry count="3">
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:object]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlotLayout,</token>
</entry>
<entry count="1">
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],</token>
<token>mscorlib,</token>
</entry>
<entry count="115">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="8">
<token>DataExplorer.Application.Columns.ColumnDto,</token>
<token>Application]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.NzbVortex.NzbVortexFiles,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>e:DataExplorer.Domain.Semantics.SemanticType,</token>
</entry>
<entry count="1">
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasCircle,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.ParsedEpisodeInfo,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Rect,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="2">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core],[T2</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
</entry>
<entry count="13">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:bool]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="14">
<token>Fohjin.DDD.Reporting.Dto]],</token>
<token>mscorlib,</token>
<token>2.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Importers.CsvFiles.CsvFileSourceDto,</token>
<token>Application]],Returns</token>
</entry>
<entry count="13">
<token>2.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting],[TResult</token>
</entry>
<entry count="4">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Pending.PendingRelease,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="2">
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>NzbDrone.Core.DataAugmentation.Scene.SceneMapping,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="7">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Threading.Tasks.Task,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>s:System.DateTime,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Data.DataTable,</token>
<token>System.Data,</token>
</entry>
<entry count="4">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Sizes.SizeLegendItemDto,</token>
<token>Application]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Couchbase.IO.SocketAsyncState,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Colors.Color,</token>
</entry>
<entry count="10">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:long]],Returns</token>
</entry>
<entry count="1">
<token>DataExplorer.Presentation.Core.Canvas.CanvasControl,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="7">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Messaging.Commands.CommandModel,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="22">
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountDetailsReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Utils.ScheduledAction,</token>
<token>KaVE.Commons]],Returns</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>System.Xml.Linq,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>System.Threading.Tasks.Task`1[[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application],[TResult</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.MediaCover.ICoverExistsSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>p:int]],Callback</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="5">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
</entry>
<entry count="4">
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
</entry>
<entry count="1">
<token>Application],[TProperty</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>NzbDrone.Core.DecisionEngine.DownloadDecision,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>p:bool]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
<token>KaVE.Commons],[T2</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.ObjectUsage.Query,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Threading.Tasks.Task`1[[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
</entry>
<entry count="4">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportDecision,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.History.History,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Common.Model.ProcessInfo,</token>
</entry>
<entry count="3">
<token>NzbDrone.Core.Configuration.Config,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Projects.Project,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Returns</token>
</entry>
<entry count="1">
<token>s:System.Windows.Vector,</token>
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>s:System.DateTime,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Windows.Media.Visual,</token>
<token>PresentationCore,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="4">
<token>TProperty]],Returns</token>
<token>Moq.Language.IVerifies,Verifiable</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Update.UpdatePackage,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Metadata.Files.MetadataFile,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="11">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Profiles.Delay.DelayProfile,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>NzbDrone.Common.Http.HttpResponse,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>p:string]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverter,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="6">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons],[TResult</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.Delay.IDelayProfileService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.History.History,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>Couchbase],[TProperty</token>
<token>-&gt;</token>
<token>e:Couchbase.IO.ResponseStatus,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.DependencyObject,</token>
</entry>
<entry count="2">
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>p:string]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TProperty</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="12">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DecisionEngine.Decision,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasImage,</token>
<token>Presentation]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Profiles.Delay.DelayProfile,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="3">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoader,</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Utils.ScheduledAction,</token>
<token>KaVE.Commons]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="10">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
</entry>
<entry count="5">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.Server.Serialization.IBucketConfig,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.Server.Serialization.IBucketConfig,</token>
</entry>
<entry count="5">
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Windows.Media.Visual,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IProcessDownloadDecisions,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.ProcessedDecisions,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="9">
<token>p:bool]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Tv.Episode,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="13">
<token>mscorlib,</token>
<token>2.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.History.History,</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.IConnectionPool,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Colors.ColorLegendItemDto,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="5">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.RemotePathMappings.RemotePathMapping,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
</entry>
<entry count="1">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>p:double]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.FilterTrees.FilterTreeNode,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Views.View,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.History.History,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="2">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.History.History,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="6">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons],[TResult</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.RemotePathMappings.RemotePathMapping,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure],[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Metadata.Files.MetadataFile,</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Sources.Source,</token>
<token>Domain]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Threading.Tasks.Task`1[[TResult</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
</entry>
<entry count="15">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.AccountReport,</token>
<token>Fohjin.DDD.Reporting.Dto]],</token>
</entry>
<entry count="1">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Importers.CsvFiles.CsvFileSourceDto,</token>
<token>Application]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProcessDownloadDecisions,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>Fohjin.DDD.Reporting.Dto.ClientDetailsReport,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.Plot,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>KaVE.Commons.Utils.ScheduledAction,</token>
<token>KaVE.Commons]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="3">
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Callback</token>
</entry>
<entry count="1">
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application],[TProperty</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
</entry>
<entry count="3">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
<token>p:double]],</token>
</entry>
<entry count="2">
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
<token>4.0.0.0].([T]</token>
<token>arg)]],Returns</token>
</entry>
<entry count="4">
<token>KaVE.Commons],[T2</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.CompletionEvents.Context,</token>
</entry>
<entry count="12">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>s:System.Windows.Rect,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>s:System.DateTime,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>System.IO.Stream,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MetadataSource.IProvideSeriesInfo,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Windows.DependencyObject,</token>
<token>WindowsBase,</token>
</entry>
<entry count="7">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],</token>
</entry>
<entry count="2">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.History.History,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="3">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.UserProfileSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.Window,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>p:int]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.UploadSettings,</token>
<token>KaVE.VS.FeedbackGenerator]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>p:int]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
</entry>
<entry count="2">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="17">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>?],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Colors.ColorLegendItemDto,</token>
<token>Application]],</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
<token>Application],[TResult</token>
</entry>
<entry count="5">
<token>mscorlib,</token>
<token>4.0.0.0]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
<token>-&gt;</token>
<token>p:string],[TValue</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Download.ProcessedDecisions,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
</entry>
<entry count="1">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
<token>KaVE.Commons]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core],[T2</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceFactory,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="10">
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="11">
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlot,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.RootFolders.RootFolder,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Update.UpdatePackage,</token>
</entry>
<entry count="2">
<token>DataExplorer.Application.Legends.Sizes.SizeLegendItemDto,</token>
<token>Application]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Update.UpdatePackage,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientSearchFormView,</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>p:string[]]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure],[TResult</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData],[TProperty</token>
<token>-&gt;</token>
<token>TProperty]],Returns</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerStatus,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>PresentationCore,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Rect,</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>Presentation]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Filters.Filter,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Indexers.IndexerPageableRequestChain,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
</entry>
<entry count="6">
<token>KaVE.Commons.Model.Events.IDEEvent,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
</entry>
<entry count="4">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Rect,</token>
<token>WindowsBase,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Utils.ScheduledAction,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:int]],Returns</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlot,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData],[TProperty</token>
</entry>
<entry count="8">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>p:int]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IParseIndexerResponse,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
<token>Application],[TResult</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>System.IO.Stream,</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>System.IO.FileStream,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="22">
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>System.Xml.Linq,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="3">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
<token>e:NzbDrone.Core.Update.UpdateMechanism,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Parser.Model.ParsedEpisodeInfo,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="2">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
</entry>
<entry count="41">
<token>Fohjin.DDD.Reporting],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="8">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportResult,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="22">
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DataAugmentation.Scene.SceneMapping,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure],[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
</entry>
<entry count="4">
<token>NzbDrone.Core.Organizer.NamingConfig,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
</entry>
<entry count="3">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="6">
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Data.DataTable,</token>
</entry>
<entry count="1">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>e:DataExplorer.Domain.Semantics.SemanticType,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="15">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Episode,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Xml.Linq,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
</entry>
<entry count="2">
<token>4.0.0.0]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Language.ICallback,Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.History.History,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
<token>Domain],[TResult</token>
</entry>
<entry count="5">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>Couchbase]],Returns</token>
<token>Moq.Language.IThrows,Throws</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
</entry>
<entry count="25">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>System.IO.FileInfo,</token>
</entry>
<entry count="2">
<token>TResult]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
<token>-&gt;</token>
<token>TResult]],Returns</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Qualities.QualityDefinition,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.Commons.Utils.ScheduledAction,</token>
<token>KaVE.Commons]],Callback</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
</entry>
<entry count="2">
<token>Infrastructure],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Presentation.Core.Canvas.Items.CanvasCircle,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common.Http.HttpResponse,</token>
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
</entry>
<entry count="1">
<token>System.ServiceProcess,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
</entry>
<entry count="2">
<token>Application],[TProperty</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Windows.Media.Imaging.BitmapSource,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0],[TValue</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common],[TResult</token>
</entry>
<entry count="2">
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
</entry>
<entry count="13">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.Source,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:bool]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Couchbase]],Returns</token>
<token>Moq.Language.IThrows,Throws</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Application.Legends.Colors.ColorLegendItemDto,</token>
<token>Application]],</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IList`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
</entry>
<entry count="4">
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence],[TResult</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="7">
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core],[TProperty</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
</entry>
<entry count="2">
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Indexers.IndexerPageableRequestChain,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="47">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="11">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],Returns</token>
</entry>
<entry count="10">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="1">
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Rows.Row,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="635">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
</entry>
<entry count="1">
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Windows.Window,</token>
<token>PresentationFramework,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>System.Xml.Linq.XElement,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.Source,</token>
<token>Domain]],</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
<token>-&gt;</token>
<token>System.Type,</token>
<token>mscorlib,</token>
<token>4.0.0.0],[TValue</token>
</entry>
<entry count="1">
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Sources.Source,</token>
<token>Domain]],</token>
<token>mscorlib,</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportResult,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>Infrastructure],[TResult</token>
<token>-&gt;</token>
<token>p:string[]]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoader,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="2">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>System.IO.FileInfo,</token>
<token>mscorlib,</token>
</entry>
<entry count="3">
<token>System.IO.FileStream,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>mscorlib,</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
</entry>
<entry count="2">
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.ICallback,Callback</token>
</entry>
<entry count="10">
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Columns.Column,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Windows.Window,</token>
<token>PresentationFramework,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
<token>e:System.ServiceProcess.ServiceControllerStatus,</token>
</entry>
<entry count="8">
<token>NzbDrone.Core.MediaFiles.EpisodeImport.ImportResult,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
<token>KaVE.RS.SolutionAnalysis],[TResult</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Clients.Nzbget.NzbgetGlobalStatus,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:bool]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="3">
<token>NzbDrone.Core.Configuration.Config,</token>
<token>NzbDrone.Core]],Callback</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Notifications.Xbmc.Model.ActivePlayer,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core],[TProperty</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation],[TResult</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="4">
<token>KaVE.Commons]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.Dictionary`2[[TKey</token>
<token>-&gt;</token>
<token>p:string],[TValue</token>
<token>-&gt;</token>
<token>p:object]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Download.Pending.PendingRelease,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="1">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Parser.Model.RemoteEpisode,</token>
<token>NzbDrone.Core]],</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
</entry>
<entry count="1">
<token>p:string],[TValue</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Collections.IKaVESet`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IParseIndexerResponse,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Configuration.Config,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Tuple`2[[T1</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
</entry>
<entry count="3">
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
<token>Couchbase.Configuration.Client.ClientConfiguration,</token>
<token>Couchbase]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TResult]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IAccountDetailsView,</token>
</entry>
<entry count="14">
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>p:bool]],Returns</token>
</entry>
<entry count="22">
<token>-&gt;</token>
<token>TProperty]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>?],[TProperty</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Colors.Color,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.DecisionEngine.IPrioritizeDownloadDecision,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons],[TResult</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.Settings.AnonymizationSettings,</token>
</entry>
<entry count="41">
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:int]],Returns</token>
<token>Moq.Language.ISetupSequentialResult`1[[TResult</token>
</entry>
<entry count="2">
<token>TResult]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
<token>?],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnectionPool,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Collections.Generic.IEnumerable`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.AxisGridLine,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>NzbDrone.Core.Configuration.Config,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
</entry>
<entry count="5">
<token>NzbDrone.Core.ThingiProvider.ProviderDefinition,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
<token>-&gt;</token>
</entry>
<entry count="18">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerRequestGenerator,</token>
</entry>
<entry count="4">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Application.Importers.CsvFiles.CsvFileSourceDto,</token>
<token>Application]],Returns</token>
</entry>
<entry count="7">
<token>Moq.Language.IThrows,Throws</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>s:System.Windows.Rect,</token>
<token>WindowsBase,</token>
</entry>
<entry count="1">
<token>System.Windows.Media.Visual,</token>
<token>PresentationCore,</token>
<token>4.0.0.0]],</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
<token>s:System.Nullable`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons]],Returns</token>
</entry>
<entry count="2">
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverter,</token>
<token>Domain]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>e:NzbDrone.Core.Update.UpdateMechanism,</token>
<token>NzbDrone.Core]],Returns</token>
<token>Moq.Language.IReturnsGetter`2[[TMock</token>
</entry>
<entry count="14">
<token>System.Xml.Linq.XElement,</token>
<token>System.Xml.Linq,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
<token>NzbDrone.Core],[TResult</token>
</entry>
<entry count="3">
<token>p:bool]],</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>p:object]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common],[TProperty</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.ScatterPlots.ScatterPlotLayout,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="4">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase],[TResult</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence],[TResult</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Views.View,</token>
<token>Domain]],Returns</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core],[TResult</token>
<token>-&gt;</token>
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application],[TResult</token>
</entry>
<entry count="1">
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="1">
<token>Moq.Language.IReturns`2[[TMock</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application],[TResult</token>
</entry>
<entry count="2">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons],[TResult</token>
<token>-&gt;</token>
<token>p:string]],Returns</token>
<token>Moq.Language.IReturns`2[[TMock</token>
</entry>
<entry count="6">
<token>System.Collections.Generic.List`1[[T</token>
<token>-&gt;</token>
<token>NzbDrone.Core.DecisionEngine.DownloadDecision,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Core.Tv.Series,</token>
<token>NzbDrone.Core]],</token>
</entry>
</dictionary>
