<?xml version="1.0" encoding="UTF-8"?><dictionary case_sensitive="false">
<entry count="2">
<token>Microsoft.Practices.Unity.InterceptionExtension.Interception,SetInterceptorFor</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor,new</token>
</entry>
<entry count="2">
<token>Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor,new</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.Interception,SetInterceptorFor</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor,new</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.Interception,SetInterceptorFor</token>
</entry>
<entry count="2">
<token>Microsoft.Practices.Unity.InterceptionExtension.Interceptor,new</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.InterceptionBehavior,new</token>
</entry>
<entry count="2">
<token>Microsoft.Practices.Unity.InterceptionExtension.Interception,SetInterceptorFor</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor,new</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.Interception,SetInterceptorFor</token>
</entry>
<entry count="1">
<token>Microsoft.Practices.Unity.InterceptionExtension.Interception,SetInterceptorFor</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor,new</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.Interception,SetInterceptorFor</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor,new</token>
</entry>
<entry count="2">
<token>Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor,new</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.Interception,SetInterceptorFor</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor,new</token>
</entry>
<entry count="1">
<token>Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor,new</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.Interception,SetInterceptorFor</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor,new</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.Interception,SetInterceptorFor</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor,new</token>
</entry>
<entry count="1">
<token>Microsoft.Practices.Unity.InterceptionExtension.Interception,SetInterceptorFor</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor,new</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.Interception,SetInterceptorFor</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor,new</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.Interception,SetInterceptorFor</token>
</entry>
<entry count="3">
<token>Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor,new</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.Interception,SetInterceptorFor</token>
</entry>
<entry count="2">
<token>Microsoft.Practices.Unity.InterceptionExtension.Interceptor,new</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.InterceptionBehavior,new</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.InterceptionBehavior,new</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.InterceptionBehavior,new</token>
</entry>
<entry count="4">
<token>Microsoft.Practices.Unity.InterceptionExtension.InterceptionBehavior,new</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.InterceptionBehavior,new</token>
</entry>
<entry count="2">
<token>Microsoft.Practices.Unity.InterceptionExtension.Interceptor,new</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.InterceptionBehavior,new</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.InterceptionBehavior,new</token>
</entry>
<entry count="2">
<token>Microsoft.Practices.Unity.InterceptionExtension.InterceptionBehavior,new</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.InterceptionBehavior,new</token>
<token>Microsoft.Practices.Unity.InterceptionExtension.InterceptionBehavior,new</token>
</entry>
</dictionary>
