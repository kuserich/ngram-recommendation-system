<?xml version="1.0" encoding="UTF-8"?><dictionary case_sensitive="false">
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IConfigureSyntax,Configure</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromAssembliesMatching</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindDefaultInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromAssembliesMatching</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllInterfaces</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindDefaultInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromAssembliesMatching</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllInterfaces</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromAssembliesMatching</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindDefaultInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromAssembliesMatching</token>
</entry>
<entry count="3">
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindToFactory</token>
<token>Ninject.Extensions.Conventions.Syntax.IConfigureSyntax,Configure</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindDefaultInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromAssembliesMatching</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFilterSyntax,EndingWith</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindToFactory</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IConfigureSyntax,Configure</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.IConfigureSyntax,Configure</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IConfigureSyntax,Configure</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IConfigureSyntax,Configure</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindDefaultInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromAssembliesMatching</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllInterfaces</token>
</entry>
<entry count="3">
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFilterSyntax,EndingWith</token>
</entry>
<entry count="10">
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindAllInterfaces</token>
</entry>
<entry count="9">
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromAssembliesMatching</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindAllInterfaces</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromAssembliesMatching</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFilterSyntax,EndingWith</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindToFactory</token>
</entry>
<entry count="3">
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromAssembliesMatching</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllInterfaces</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindDefaultInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromAssembliesMatching</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFilterSyntax,EndingWith</token>
</entry>
<entry count="3">
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFilterSyntax,EndingWith</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindDefaultInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromAssembliesMatching</token>
</entry>
<entry count="3">
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFilterSyntax,EndingWith</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindToFactory</token>
<token>Ninject.Extensions.Conventions.Syntax.IConfigureSyntax,Configure</token>
</entry>
<entry count="10">
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromAssembliesMatching</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.IConfigureSyntax,Configure</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
</entry>
<entry count="3">
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
</entry>
<entry count="4">
<token>Ninject.Extensions.Conventions.Syntax.IFilterSyntax,EndingWith</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindToFactory</token>
</entry>
<entry count="4">
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFilterSyntax,EndingWith</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindToFactory</token>
</entry>
<entry count="3">
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllInterfaces</token>
</entry>
<entry count="4">
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IConfigureSyntax,Configure</token>
</entry>
<entry count="3">
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllInterfaces</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IConfigureSyntax,Configure</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IConfigureSyntax,Configure</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindAllInterfaces</token>
</entry>
<entry count="3">
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllInterfaces</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.IConfigureSyntax,Configure</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindAllInterfaces</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromAssembliesMatching</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFilterSyntax,EndingWith</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromAssembliesMatching</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IConfigureSyntax,Configure</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
</entry>
<entry count="4">
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFilterSyntax,EndingWith</token>
</entry>
<entry count="3">
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFilterSyntax,EndingWith</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindAllInterfaces</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindDefaultInterfaces</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindDefaultInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromAssembliesMatching</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromAssembliesMatching</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindDefaultInterfaces</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.IConfigureSyntax,Configure</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
</entry>
<entry count="3">
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
</entry>
<entry count="3">
<token>Ninject.Extensions.Conventions.Syntax.IFilterSyntax,EndingWith</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindToFactory</token>
<token>Ninject.Extensions.Conventions.Syntax.IConfigureSyntax,Configure</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromAssembliesMatching</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllInterfaces</token>
</entry>
<entry count="3">
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromAssembliesMatching</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IConfigureSyntax,Configure</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindDefaultInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromAssembliesMatching</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFilterSyntax,EndingWith</token>
</entry>
<entry count="3">
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFilterSyntax,EndingWith</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindToFactory</token>
<token>Ninject.Extensions.Conventions.Syntax.IConfigureSyntax,Configure</token>
</entry>
<entry count="3">
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromAssembliesMatching</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
</entry>
<entry count="3">
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFilterSyntax,EndingWith</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindToFactory</token>
</entry>
<entry count="4">
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IConfigureSyntax,Configure</token>
</entry>
<entry count="3">
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IFilterSyntax,EndingWith</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindToFactory</token>
</entry>
<entry count="1">
<token>Ninject.Extensions.Conventions.Syntax.ISelectSyntax,SelectAllClasses</token>
<token>Ninject.Extensions.Conventions.Syntax.IBindSyntax,BindAllInterfaces</token>
<token>Ninject.Extensions.Conventions.Syntax.IConfigureSyntax,Configure</token>
<token>Ninject.Extensions.Conventions.Syntax.IFromSyntax,FromThisAssembly</token>
</entry>
</dictionary>
