<?xml version="1.0" encoding="UTF-8"?><dictionary case_sensitive="false">
<entry count="4">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.CompletionEventFilterLogger,</token>
</entry>
<entry count="1">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeRepository,</token>
</entry>
<entry count="2">
<token>p:int],[TReturn</token>
<token>-&gt;</token>
<token>p:object]],</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],Setup</token>
</entry>
<entry count="2">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="2">
<token>?]],new</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="23">
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
</entry>
<entry count="3">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILog,</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
</entry>
<entry count="1">
<token>System.Web.OData]],SetupAllProperties</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>i:System.Web.OData.IEdmEntityObject,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="13">
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
<token>Application]],Setup</token>
</entry>
<entry count="3">
<token>KaVE.RS.SolutionAnalysis.CompletionEventFilterLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
</entry>
<entry count="38">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],SetupAllProperties</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="26">
<token>i:Fohjin.DDD.BankApplication.Presenters.IPopupPresenter,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="15">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
</entry>
<entry count="2">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.Routing.IHttpVirtualPathData,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:Fohjin.DDD.EventStore.IDomainRepository`1[[TDomainEvent</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.EventStore.IDomainEvent,</token>
<token>Fohjin.DDD.EventStore]],</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.ILayoutPaneViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IBooleanColorLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDateTimeGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="17">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="24">
<token>-&gt;</token>
<token>?]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>System.Web.Http.Metadata.ModelMetadataProvider,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="1">
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock,Get</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Fohjin.DDD.EventStore.IDomainEvent,</token>
<token>Fohjin.DDD.EventStore]],</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookupWindowManager,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`2[[TContext</token>
</entry>
<entry count="1">
<token>p:object]],</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceFactory,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="2">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="6">
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IVisualService,</token>
<token>Presentation]],Verify</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>System.Web.Http.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IAccountDetailsView,</token>
</entry>
<entry count="13">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>System.Web.OData]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ODataModelBuilder,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.Controllers.HttpActionDescriptor,</token>
<token>System.Web.Http,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDayAxisGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.INavigationPaneViewModel,</token>
</entry>
<entry count="2">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.StringFilters.IStringFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.ImageFilters.IImageFilterSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceFactory,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="7">
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons]],Setup</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="8">
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IBooleanSizeLegendFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.Shape.IShapeLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IXAxisGridLineRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock,GetType</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MetadataSource.IProvideSeriesInfo,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
</entry>
<entry count="9">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],new</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IStringColorLegendFactory,</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IProcess,</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IBooleanSizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.HelpMenu.IHelpMenuViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ComplexTypeConfiguration,</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IStringSizeLegendFactory,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Generators.Activity.IKaVEMouseEvents,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="3">
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="48">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
</entry>
<entry count="18">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.MediaFiles.IUpgradeMediaFiles,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="6">
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IQualityUpgradableSpecification,</token>
</entry>
<entry count="2">
<token>System.Web.OData]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Location.IXAxisLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Navigation.StartMenu.IStartMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="21">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.MediaCover.ICoverExistsSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.ICanvasToBitmapExporter,</token>
<token>Application]],new</token>
</entry>
<entry count="15">
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="3">
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],Setup</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="26">
<token>Fohjin.DDD.BankApplication]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.ILayoutPaneViewModel,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
</entry>
<entry count="4">
<token>i:Microsoft.Data.Edm.IEdmTypeReference,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Net.Http.Formatting.MediaTypeFormatter,</token>
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],VerifySet</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmActionImport,</token>
</entry>
<entry count="5">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.EnableQueryAttribute,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="11">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>i:System.Web.Http.Routing.IHttpVirtualPathData,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="8">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
</entry>
<entry count="2">
<token>System.Web.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IYAxisGridLineRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IXAxisGridLabelRenderer,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventLogger,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IValueScaler,</token>
<token>Presentation]],new</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
<token>KaVE.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisher,</token>
<token>KaVE.RS.Commons]],Setup</token>
</entry>
<entry count="3">
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
</entry>
<entry count="7">
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],Setup</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.Controllers.HttpParameterDescriptor,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="8">
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IMinMaxDateTimeAxisGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenDialogService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="2">
<token>6.15.0.0]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Shell.StatusBar.IStatusBarViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="5">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Verify</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.EnableQueryAttribute,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Colors.IColorPaletteFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.NavigationTree.INavigationTreeViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.EventStore.IDomainRepository`1[[TDomainEvent</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="13">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="9">
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="5">
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Legend.Sizes.ISizeLegendViewModel,</token>
</entry>
<entry count="6">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="8">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Sabnzbd.ISabnzbdProxy,</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataCollectionDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IDateTimeColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IBooleanColorLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application]],Verify</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.UserControls.TrayNotification.NotifyTrayIcon,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogProvider,</token>
<token>Application]],Verify</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="4">
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Events.IEventLogger,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.IExceptionDialogService,</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],Verify</token>
</entry>
<entry count="4">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
</entry>
<entry count="6">
<token>i:Microsoft.Data.Edm.IEdmNavigationProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:System.Web.Http.OData.IEdmEntityObject,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Exceptions.IExceptionDialog,</token>
<token>Presentation]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsInRange</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="3">
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:Microsoft.OData.Edm.IEdmProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IParseIndexerResponse,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],Verify</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Presenters.IPopupPresenter,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.IConnectionPool,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="2">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
</entry>
<entry count="2">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.INavigationPaneViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>?]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Serialization.ODataFeedSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="7">
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>p:int],[TReturn</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="12">
<token>Presentation]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IArchiveService,</token>
</entry>
<entry count="12">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.ImageFilters.IImageFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.Newznab.INewznabCapabilitiesProvider,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="2">
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer,</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Tests_Integration.Utils.ITestShellComponent,</token>
<token>KaVE.RS.Commons.Tests_Integration]],new</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenDialogService,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="4">
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IFloatColorLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
</entry>
<entry count="5">
<token>i:DataExplorer.Presentation.Dialogs.Exceptions.IExceptionDialog,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Threading.SynchronizationContext,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.EditMenu.IEditMenuViewModel,</token>
</entry>
<entry count="20">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
</entry>
<entry count="3">
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.ISecondAxisGridLineFactory,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
</entry>
<entry count="2">
<token>KaVE.RS.SolutionAnalysis.UserProfileExports.UserProfileExportHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Bus.IBus,</token>
<token>Fohjin.DDD.Bus]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomOutScatterPlotCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityContainer,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="13">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="19">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="6">
<token>Moq.Mock,As</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Setup</token>
</entry>
<entry count="6">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityContainer,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Label.ILabelLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:object]],</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],VerifySet</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.IProfileRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Messaging.Events.IHandleAsync`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>4.0.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],SetupGet</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="7">
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="20">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaCover.IImageResizer,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],new</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="10">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IProcess,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Property.IPropertyPaneViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.Location.IYAxisLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="13">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmModel,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Color.IColorLayoutViewModel,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IRandomizationUtils,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.IDelta,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="38">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:Microsoft.OData.Edm.IEdmProperty,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="6">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
</entry>
<entry count="2">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Verify</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="4">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="10">
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.Routing.IHttpRoute,</token>
<token>System.Web.Http,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.BooleanGridLines.IBooleanGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDateTimeGridLineFactory,</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.EventStore.IDomainRepository`1[[TDomainEvent</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>KaVE.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelCommands,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Core.Commands.ICommandBus,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="8">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Organizer.INamingConfigService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
</entry>
<entry count="7">
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor]],Setup</token>
</entry>
<entry count="1">
<token>6.15.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IRandomizationUtils,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
</entry>
<entry count="8">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
</entry>
<entry count="26">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="4">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MetadataSource.IProvideSeriesInfo,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmComplexObject,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="8">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application]],new</token>
</entry>
<entry count="4">
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="10">
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="30">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Presenters.IPopupPresenter,</token>
</entry>
<entry count="7">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Couchbase.Core.Serialization.DefaultSerializer,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:Fohjin.DDD.Bus.IBus,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.IMessageBoxCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
</entry>
<entry count="9">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IntegerFilters.IIntegerFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="6">
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Shell.MainMenu.EditMenu.IEditMenuViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>?]],Verify</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Host.INzbDroneServiceFactory,</token>
<token>NzbDrone.Host]],Verify</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="10">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="7">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.ViewMenu.IViewMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataModelBuilder,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="5">
<token>Moq.Mock,Get</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.CompletionEventFilterLogger,</token>
</entry>
<entry count="9">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock,As</token>
<token>Moq.Mock,As</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer,</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Query.Validators.SelectExpandQueryValidator,</token>
</entry>
<entry count="83">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="6">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Sabnzbd.ISabnzbdProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],VerifySet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],SetupGet</token>
</entry>
<entry count="5">
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.IProfileRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookupWindowManager,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.IActionExecutor,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Color.IColorLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.IMessageBoxCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IDateTimeSizeLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>Infrastructure]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.ViewMenu.IViewMenuViewModel,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.NullFilters.INullFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,GetType</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.BooleanGridLines.IBooleanGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="9">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Link.ILinkLayoutViewModel,</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
</entry>
<entry count="6">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IEventAggregator,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="3">
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:System.Windows.Input.ICommand,</token>
<token>System,</token>
<token>4.0.0.0]],Verify</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.IExceptionDialogService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="4">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="12">
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="19">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
</entry>
<entry count="7">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.EditMenu.IEditMenuViewModel,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="47">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Import.IImportDialogService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmSingleton,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="20">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmFunctionImport,</token>
<token>Microsoft.Data.Edm,</token>
</entry>
<entry count="13">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmModel,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IRecycleBinProvider,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmTypeReference,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityContainer,</token>
</entry>
<entry count="2">
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
</entry>
<entry count="1">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Raise</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.Color.IColorLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock,Get</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Web.Http.Controllers.HttpActionDescriptor,</token>
</entry>
<entry count="2">
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.Controllers.HttpActionDescriptor,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataDeltaFeedSerializer,</token>
</entry>
<entry count="2">
<token>i:Fohjin.DDD.BankApplication.Presenters.IPopupPresenter,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsInRange</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.FloatFilters.IFloatFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IntegerFilters.IIntegerFilterSerializer,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IBooleanSizeLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="5">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer,</token>
</entry>
<entry count="13">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],Setup</token>
</entry>
<entry count="2">
<token>Infrastructure]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.Services.IReceiveMoneyTransfers,</token>
<token>Fohjin.DDD.Services]],Setup</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.EnableQueryAttribute,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenDialogService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveDialogService,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.IMainMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.Controllers.HttpActionDescriptor,</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.ISelectCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.IImageResizer,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="6">
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.TorrentRss.ITorrentRssSettingsDetector,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Importers.CsvFile.Body.ICsvFileImportBodyViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="4">
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="19">
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:object]],</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>System.Net.Http.Formatting.MediaTypeFormatter,</token>
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],Verify</token>
</entry>
<entry count="159">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.IConsoleService,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Location.IXAxisLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.NullFilters.INullFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.BooleanFilters.IBooleanFilterSerializer,</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.ODataConventionModelBuilder,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Application]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
</entry>
<entry count="1">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`1[[TContext</token>
</entry>
<entry count="2">
<token>5.2.2.0]],new</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:Microsoft.OData.Edm.IEdmStructuredType,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="23">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
</entry>
<entry count="5">
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataConventionModelBuilder,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock,As</token>
<token>Moq.Mock,As</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="9">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.Authentication.SASL.ISaslMechanism,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="18">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>6.15.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityTypeReference,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.EventStore.IDomainRepository`1[[TDomainEvent</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
</entry>
<entry count="26">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application]],Setup</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Exceptions.IExceptionDialog,</token>
</entry>
<entry count="4">
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Geometry.IGeometryCalculator,</token>
</entry>
<entry count="4">
<token>System.Web.OData]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>System.Threading.SynchronizationContext,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.ILayoutPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IXAxisGridLabelRenderer,</token>
</entry>
<entry count="16">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.Controllers.HttpParameterDescriptor,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
</entry>
<entry count="3">
<token>i:System.Collections.IEnumerable,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmSingleton,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>i:System.Web.Http.OData.Routing.IODataPathHandler,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="7">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.ViewMenu.IViewMenuViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Profiles.Delay.IDelayProfileService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuredTypeReference,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:System.Web.OData.Routing.IODataPathTemplateHandler,</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataModelBuilder,</token>
</entry>
<entry count="5">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="21">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
</entry>
<entry count="12">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IStringColorLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="5">
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Microsoft.OData.Edm.Library.EdmModel,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="2">
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="10">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IFloatSizeLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="10">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],VerifySet</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="26">
<token>i:Fohjin.DDD.BankApplication.Presenters.IPopupPresenter,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.Location.IYAxisLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Color.IColorLayoutViewModel,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.Http.OData]],Verify</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],Verify</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadService,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryLogger,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Verify</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
</entry>
<entry count="2">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Model.SSTs.Visitor.ISSTNode,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IEdmObject,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerRequestGenerator,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Legend.ILegendPaneViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Organizer.INamingConfigService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
</entry>
<entry count="1">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.VisualStudio.IFocusHelper,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmModel,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.Notifications.Synology.ISynologyIndexerProxy,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IStringColorLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="2">
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Geometry.IGeometryCalculator,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Exception,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IDateTimeSizeLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],VerifySet</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="3">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmEntityObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Synology.ISynologyIndexerProxy,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`1[[TContext</token>
<token>-&gt;</token>
<token>p:int]],</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.DateTimeFilters.IDateTimeFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IPrioritizeDownloadDecision,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IBooleanColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],SetupGet</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines.IFloatGridLineFactory,</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.FloatFilters.IFloatFilterSerializer,</token>
</entry>
<entry count="23">
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILog,</token>
</entry>
<entry count="3">
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileTableCleanupService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Presentation]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientDetailsView,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Location.IYAxisLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock,As</token>
<token>Moq.Mock,As</token>
</entry>
<entry count="3">
<token>i:Microsoft.OData.Edm.IEdmActionImport,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IIntegerSizeLegendFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDayAxisGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Web.Http.Routing.IHttpVirtualPathData,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.DateTimeFilters.IDateTimeFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Organizer.INamingConfigService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="25">
<token>Fohjin.DDD.BankApplication]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventLogger,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="15">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.ISelectCommand,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.StringFilters.IStringFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IDateTimeSizeLegendFactory,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IPrioritizeDownloadDecision,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.HelpMenu.IHelpMenuViewModel,</token>
</entry>
<entry count="17">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Import.IImportDialogService,</token>
<token>Application]],new</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.FloatFilters.IFloatFilterSerializer,</token>
</entry>
<entry count="1">
<token>i:Couchbase.N1QL.IQueryRequest,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.ICoverExistsSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.CompletionEventFilterLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="4">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.CompletionEventFilterLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],SetupGet</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],VerifySet</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],Setup</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
<token>Application]],new</token>
</entry>
<entry count="4">
<token>System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="2">
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
<token>Presentation]],new</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeRepository,</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
</entry>
<entry count="2">
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.Routing.IHttpVirtualPathData,</token>
</entry>
<entry count="2">
<token>KaVE.Commons]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaCover.IImageResizer,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
</entry>
<entry count="15">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
</entry>
<entry count="2">
<token>5.6.0.0]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IYAxisTitleRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializer,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="15">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Legend.Colors.IColorLegendViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:System.Web.Http.OData.IEdmObject,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDateTimeGridLineFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IIntegerSizeLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.VisualStudio.IFocusHelper,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Services.IReceiveMoneyTransfers,</token>
<token>Fohjin.DDD.Services]],Setup</token>
</entry>
<entry count="2">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IProcess,</token>
<token>Application]],new</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
</entry>
<entry count="5">
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Generators.IEventLogger,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.MediaFiles.IMediaFileRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IFloatColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualService,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandLogger,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotContextMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmObject,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.EnableQueryAttribute,</token>
</entry>
<entry count="6">
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmEntityObject,</token>
</entry>
<entry count="5">
<token>?]],new</token>
<token>Moq.Mock,As</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.Authentication.SASL.ISaslMechanism,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="11">
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Web.Http.Routing.IHttpRoute,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmNavigationProperty,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IRandomizationUtils,</token>
<token>KaVE.Commons]],Setup</token>
</entry>
<entry count="13">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="4">
<token>6.15.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="10">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="6">
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmActionImport,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenDialogService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenDialogService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>KaVE.FeedbackProcessor]],</token>
<token>KaVE.FeedbackProcessor]],Setup</token>
</entry>
<entry count="2">
<token>5.6.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.Commons.Model.SSTs.Visitor.ISSTNode,</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsInRange</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
</entry>
<entry count="4">
<token>5.6.0.0]],new</token>
<token>Moq.It,Is</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],SetupGet</token>
<token>Moq.Mock,As</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Query.ODataQueryOptions,</token>
<token>System.Web.Http.OData]],Verify</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="9">
<token>Application]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.UTorrent.IUTorrentProxy,</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="5">
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmActionImport,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.StringFilters.IStringFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IArchiveService,</token>
</entry>
<entry count="3">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IFloatColorLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Intervals.Model.Interval,</token>
<token>KaVE.FeedbackProcessor]],</token>
<token>KaVE.FeedbackProcessor]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.ISelectCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandBus,</token>
</entry>
<entry count="1">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],SetupAllProperties</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="2">
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
</entry>
<entry count="6">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelCommands,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="8">
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="2">
<token>System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="13">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandleAsync`1[[TEvent</token>
<token>-&gt;</token>
</entry>
<entry count="11">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="6">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="122">
<token>-&gt;</token>
<token>?]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Collections.IEnumerable,</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
</entry>
<entry count="3">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
</entry>
<entry count="4">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.FloatFilters.IFloatFilterSerializer,</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Query.ODataQueryOptions,</token>
<token>System.Web.Http.OData]],Verify</token>
</entry>
<entry count="23">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="6">
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
</entry>
<entry count="7">
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerRequestGenerator,</token>
</entry>
<entry count="7">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>5.6.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.IActionExecutor,</token>
<token>KaVE.RS.Commons]],Verify</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
<token>Application]],Setup</token>
</entry>
<entry count="106">
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
</entry>
<entry count="7">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
</entry>
<entry count="6">
<token>i:Microsoft.OData.Edm.IEdmNavigationProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Raise</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
<token>KaVE.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IIntegerColorLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmSingleton,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogProvider,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
</entry>
<entry count="6">
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],SetupGet</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Profiles.IProfileRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.Newznab.INewznabCapabilitiesProvider,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Generators.IEventLogger,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDateTimeGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
</entry>
<entry count="2">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="23">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
</entry>
<entry count="18">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="15">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,Is</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Moq.Mock,Get</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
</entry>
<entry count="3">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
</entry>
<entry count="2">
<token>mscorlib,</token>
<token>4.0.0.0]],new</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Size.ISizeLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IIntegerSizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="10">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
</entry>
<entry count="3">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="23">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="17">
<token>Moq.Mock,Of</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="15">
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>Application]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Query.ODataQueryOptions,</token>
<token>System.Web.OData]],Verify</token>
</entry>
<entry count="2">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Raise</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="9">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IQualityUpgradableSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="3">
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
<token>KaVE.Commons]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventLogger,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataValue,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="9">
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="13">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmModel,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="6">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.INamingConfigService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="6">
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="16">
<token>?]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcService,</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IYAxisTitleRenderer,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>?]],Raise</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.ISecondAxisGridLineFactory,</token>
<token>Application]],Setup</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IUpgradeMediaFiles,</token>
</entry>
<entry count="2">
<token>System.Web.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsInRange</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="11">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="71">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:System.Web.OData.Formatter.IETagHandler,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IXAxisGridLabelRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="3">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataValue,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="106">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],new</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
</entry>
<entry count="2">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
</entry>
<entry count="48">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="3">
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityType,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Messaging.Events.IHandleAsync`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IResizeScatterPlotViewExtentCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomInScatterPlotCommand,</token>
</entry>
<entry count="5">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IXAxisGridLineRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IYAxisGridLineRenderer,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],VerifySet</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveDialogService,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataDeltaFeedSerializer,</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IArchiveService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="10">
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Color.IColorLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="18">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
</entry>
<entry count="3">
<token>i:Microsoft.OData.Edm.IEdmTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuredType,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveDialogService,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],VerifySet</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],Setup</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation,</token>
<token>System.Web.OData]],Verify</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskTransferService,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
</entry>
<entry count="4">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="14">
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.NullFilters.INullFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFile,</token>
<token>Application]],new</token>
</entry>
<entry count="3">
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IXAxisGridLabelRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="9">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntityTypeConfiguration,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="29">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomInScatterPlotCommand,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Services.ISendMoneyTransfer,</token>
<token>Fohjin.DDD.Services]],Verify</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeRepository,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
</entry>
<entry count="2">
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],SetupGet</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="3">
<token>Fohjin.DDD.EventStore]],</token>
<token>Fohjin.DDD.EventStore]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="6">
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
</entry>
<entry count="2">
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsInRange</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
</entry>
<entry count="6">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="4">
<token>?]],new</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.ObjectUsageExport.IUsageExtractor,</token>
<token>KaVE.Commons]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IProcess,</token>
<token>Application]],Verify</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IUpgradeMediaFiles,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmFunctionImport,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.Newznab.INewznabCapabilitiesProvider,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.ICanvasToBitmapExporter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
</entry>
<entry count="34">
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IUpgradeMediaFiles,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="7">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="25">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IDateTimeColorLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="25">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.OData]],new</token>
<token>Moq.Mock,GetType</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Blacklisting.IBlacklistRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IBooleanColorLegendFactory,</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.TorrentRss.ITorrentRssSettingsDetector,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Net.Http.Formatting.MediaTypeFormatter,</token>
<token>System.Net.Http.Formatting,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="5">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
</entry>
<entry count="6">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.StartMenu.IStartMenuViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="8">
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.Routing.IODataPathTemplateHandler,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="8">
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:Microsoft.OData.Edm.IEdmProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IYearAxisGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDayAxisGridLineFactory,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
</entry>
<entry count="2">
<token>i:Couchbase.Authentication.SASL.ISaslMechanism,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryRepository,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.HelpMenu.IHelpMenuViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Couchbase.Core.Serialization.DefaultSerializer,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
</entry>
<entry count="2">
<token>Moq.Mock,Get</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualService,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="2">
<token>i:Couchbase.N1QL.IQueryRequestWithDataMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="1">
<token>i:Microsoft.OData.Edm.IEdmEntityContainer,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],new</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.Newznab.INewznabCapabilitiesProvider,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="38">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="5">
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],new</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.N1QL.IQueryRequestWithDataMapper,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.Formatter.IETagHandler,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Authentication.SASL.ISaslMechanism,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Domain.Colors.IColorPaletteFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Couchbase.Core.Serialization.DefaultSerializer,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Deserialization.ODataCollectionDeserializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.FloatFilters.IFloatFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="6">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,GetType</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.IMessageBoxCreator,</token>
</entry>
<entry count="1">
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`1[[TContext</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.Http.OData.Routing.IODataPathHandler,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.IActionExecutor,</token>
<token>KaVE.RS.Commons]],Verify</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="12">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IParseIndexerResponse,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
<token>Application]],new</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmEntityObject,</token>
</entry>
<entry count="4">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Exceptions.IExceptionDialog,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
</entry>
<entry count="4">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMoveEpisodeFiles,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.INavigationPaneViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="13">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
</entry>
<entry count="51">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDayAxisGridLineFactory,</token>
</entry>
<entry count="35">
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.FloatFilters.IFloatFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.Rarbg.IRarbgTokenProvider,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],SetupGet</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Color.IColorLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="6">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.ISecondAxisGridLineFactory,</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IUpgradeMediaFiles,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>Moq.Mock,Get</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Import.IImportDialogService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskTransferService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveDialogService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],SetupGet</token>
</entry>
<entry count="12">
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="14">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IXAxisTitleRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IYAxisTitleRenderer,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IPanScatterPlotCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.ImageFilters.IImageFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IBooleanColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Importers.CsvFile.Header.ICsvFileImportHeaderViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="16">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines.IFloatGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IXAxisGridLineRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceFactory,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializer,</token>
</entry>
<entry count="7">
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
</entry>
<entry count="9">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.EnableQueryAttribute,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="7">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Web.Http.Controllers.HttpParameterDescriptor,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons]],Setup</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.NavigationTree.INavigationTreeViewModel,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="18">
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>KaVE.RS.Commons]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="15">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Sabnzbd.ISabnzbdProxy,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="4">
<token>i:Fohjin.DDD.Bus.IBus,</token>
<token>Fohjin.DDD.Bus]],Verify</token>
</entry>
<entry count="7">
<token>6.15.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="13">
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],VerifySet</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookupWindowManager,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Clipboard.ICanvasToBitmapExporter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.ICanvasToBitmapExporter,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IFloatSizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Net.Http.Formatting.MediaTypeFormatter,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IYAxisGridLineRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
</entry>
<entry count="3">
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IEventLogger,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Shell.MainMenu.EditMenu.IEditMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.ViewMenu.IViewMenuViewModel,</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Update.UpdateEngine.IInstallUpdateService,</token>
<token>NzbDrone.Update]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientDetailsView,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:Microsoft.OData.Edm.IEdmTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IFloatColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.StringGridLines.IStringGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFile,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.IDelta,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="17">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.IImageResizer,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataDeltaFeedSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="9">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmFunctionImport,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="4">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.TorrentRss.ITorrentRssSettingsDetector,</token>
</entry>
<entry count="31">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandBus,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock,Of</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Raise</token>
</entry>
<entry count="3">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.IExceptionDialogService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>?]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="17">
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
</entry>
<entry count="1">
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.IClipboard,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:System.Web.Http.Routing.IHttpRoute,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="44">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="13">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],new</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="30">
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Presenters.IPopupPresenter,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],new</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.Controllers.HttpParameterDescriptor,</token>
<token>System.Web.Http,</token>
</entry>
<entry count="1">
<token>6.15.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.UTorrent.IUTorrentProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IConsoleService,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Shape.IShapeLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Exception,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],new</token>
</entry>
<entry count="2">
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Blacklisting.IBlacklistRepository,</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesRepository,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="14">
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>Moq.It,Is</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IEdmEntityObject,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Query.ODataQueryOptions,</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="26">
<token>Fohjin.DDD.BankApplication]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="5">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`2[[TContext</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>i:Microsoft.Data.Edm.IEdmNavigationProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
</entry>
<entry count="9">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.ISecondAxisGridLineFactory,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Color.IColorLayoutViewModel,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Colors.IColorPaletteFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IMinMaxDateTimeAxisGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="4">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataValue,</token>
<token>Microsoft.Data.OData,</token>
</entry>
<entry count="19">
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.ILayoutPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>p:int],[TReturn</token>
<token>-&gt;</token>
<token>p:object]],</token>
<token>KaVE.Commons]],Setup</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
</entry>
<entry count="20">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Clipboard.ICanvasToBitmapExporter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.CompletionEventFilterLogger,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IXAxisGridLabelRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.OData]],Verify</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.Controllers.HttpParameterDescriptor,</token>
</entry>
<entry count="1">
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeRepository,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="5">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.CompletionEventFilterLogger,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="36">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>?]],Raise</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IDateTimeColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.IProcess,</token>
<token>Application]],new</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualService,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="8">
<token>Moq.Mock,Get</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IConsoleService,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Model.SSTs.Visitor.ISSTNode,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="72">
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Host.IBrowserService,</token>
<token>NzbDrone.Host]],Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],new</token>
</entry>
<entry count="28">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Sabnzbd.ISabnzbdProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IXAxisTitleRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
</entry>
<entry count="1">
<token>i:System.Web.OData.IEdmObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmEntityObject,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Clipboard.IClipboard,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFile,</token>
<token>Infrastructure]],new</token>
</entry>
<entry count="26">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="2">
<token>5.6.0.0]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="9">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.ViewMenu.IViewMenuViewModel,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="20">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.EnableQueryAttribute,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesRepository,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.INavigationPaneViewModel,</token>
</entry>
<entry count="4">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Profiles.IProfileRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
</entry>
<entry count="2">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],new</token>
</entry>
<entry count="5">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],SetupGet</token>
</entry>
<entry count="4">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Exceptions.IExceptionDialog,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="4">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Synology.ISynologyIndexerProxy,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceFactory,</token>
</entry>
<entry count="26">
<token>i:Fohjin.DDD.BankApplication.Presenters.IPopupPresenter,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskTransferService,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
</entry>
<entry count="5">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
</entry>
<entry count="63">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="11">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
</entry>
<entry count="10">
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="6">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="5">
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataValue,</token>
<token>Microsoft.OData.Core,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.EventStore.IDomainRepository`1[[TDomainEvent</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.EventStore.IDomainEvent,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IXAxisTitleRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.UserProfileExports.UserProfileExportHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.TorrentRss.ITorrentRssSettingsDetector,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.VisualStudio.IFocusHelper,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.IImageResizer,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
</entry>
<entry count="2">
<token>?]],Verify</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Services.IReceiveMoneyTransfers,</token>
<token>Fohjin.DDD.Services]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],VerifySet</token>
</entry>
<entry count="21">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
</entry>
<entry count="6">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Sabnzbd.ISabnzbdProxy,</token>
</entry>
<entry count="3">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.N1QL.IQueryRequestWithDataMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Navigation.NavigationTree.INavigationTreeViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.QBittorrent.IQBittorrentProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Shape.IShapeLayoutViewModel,</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.BooleanGridLines.IBooleanGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
</entry>
<entry count="1">
<token>i:System.Web.Http.OData.Formatter.IETagHandler,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="1">
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],new</token>
</entry>
<entry count="10">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="6">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Navigation.INavigationPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Query.ODataQueryOptions,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IIntegerSizeLegendFactory,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IValueScaler,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.ISelectCommand,</token>
<token>Presentation]],new</token>
</entry>
<entry count="4">
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="3">
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="2">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmEntityObject,</token>
</entry>
<entry count="3">
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
</entry>
<entry count="5">
<token>6.15.0.0]],new</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="13">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="6">
<token>6.15.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>Application]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="1">
<token>Fohjin.DDD.Services]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
</entry>
<entry count="3">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmTypeReference,</token>
<token>Microsoft.Data.Edm,</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain]],new</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="4">
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="2">
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFile,</token>
<token>Infrastructure]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application]],Setup</token>
</entry>
<entry count="62">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="10">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.UserProfileExports.UserProfileExportHelper,</token>
</entry>
<entry count="4">
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:Couchbase.N1QL.IQueryRequestWithDataMapper,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataPrimitiveDeserializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="23">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
</entry>
<entry count="2">
<token>6.15.0.0]],new</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Threading.SynchronizationContext,</token>
</entry>
<entry count="3">
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IXAxisGridLabelRenderer,</token>
</entry>
<entry count="30">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.IClipboard,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:System.Web.Http.OData.IEdmEntityObject,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="19">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="9">
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="11">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="5">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualService,</token>
<token>Presentation]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadService,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmChangedObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.Header.ICsvFileImportHeaderViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Link.ILinkLayoutViewModel,</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
</entry>
<entry count="7">
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
</entry>
<entry count="4">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Net.Http.Formatting.IFormatterLogger,</token>
<token>System.Net.Http.Formatting,</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ComplexTypeConfiguration,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataDeltaFeedSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="2">
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Net.Http.Formatting.MediaTypeFormatter,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],SetupGet</token>
</entry>
<entry count="19">
<token>Application]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="133">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnectionPool,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="2">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IIntegerColorLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomOutScatterPlotCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Verify</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
</entry>
<entry count="12">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],Setup</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogProvider,</token>
<token>Application]],new</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataConventionModelBuilder,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="11">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterPaneViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="6">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDayAxisGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.ISecondAxisGridLineFactory,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.N1QL.IQueryRequest,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomOutScatterPlotCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IEventLogger,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmNavigationProperty,</token>
<token>Microsoft.Data.Edm,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="36">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>5.6.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="10">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],Setup</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Restrictions.IRestrictionService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataValue,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.StartMenu.IStartMenuViewModel,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IConsoleService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
<token>Presentation]],new</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataValue,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IXAxisTitleRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Application]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Moq.It,IsInRange</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.Header.ICsvFileImportHeaderViewModel,</token>
</entry>
<entry count="130">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Intervals.Model.Interval,</token>
<token>KaVE.FeedbackProcessor]],</token>
<token>KaVE.FeedbackProcessor]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsInRange</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`2[[TContext</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
</entry>
<entry count="43">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
</entry>
<entry count="1">
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock,Get</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.Http.OData]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.Routing.IODataPathHandler,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IStringSizeLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:System.Web.OData.IEdmChangedObject,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="9">
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IStringSizeLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="2">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookupWindowManager,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.BooleanFilters.IBooleanFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Location.IYAxisLayoutViewModel,</token>
</entry>
<entry count="2">
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.Metadata.ModelMetadataProvider,</token>
</entry>
<entry count="8">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="26">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="31">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="5">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="30">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IntegerGridLines.IIntegerGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.FloatFilters.IFloatFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],new</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="20">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
</entry>
<entry count="5">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
</entry>
<entry count="27">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],new</token>
</entry>
<entry count="8">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Importers.CsvFile.Body.ICsvFileImportBodyViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.Footer.ICsvFileImportFooterViewModel,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>?]],SetupProperty</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="13">
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="1">
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
</entry>
<entry count="28">
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.Formatter.IETagHandler,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandleAsync`1[[TEvent</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDateTimeGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
</entry>
<entry count="4">
<token>System.Web.Http.Controllers.HttpActionDescriptor,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientDetailsView,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Import.IImportDialogService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.IProfileRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>TEdmTypeConfiguration]],new</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Core.Commands.ICommandBus,</token>
<token>Application]],new</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="10">
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
</entry>
<entry count="1">
<token>System.Web.OData]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.IClipboard,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>T]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="6">
<token>i:Microsoft.OData.Edm.IEdmNavigationProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="3">
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
</entry>
<entry count="3">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
</entry>
<entry count="1">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="4">
<token>?]],new</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>?]],Raise</token>
</entry>
<entry count="2">
<token>System.Web.Http.Metadata.ModelMetadataProvider,</token>
<token>System.Web.Http,</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`2[[TContext</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmActionImport,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],Verify</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],new</token>
</entry>
<entry count="3">
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.FileMenu.IFileMenuViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="4">
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Location.IYAxisLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
</entry>
<entry count="2">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="17">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="3">
<token>i:Fohjin.DDD.EventStore.IDomainEvent,</token>
<token>Fohjin.DDD.EventStore]],</token>
<token>Fohjin.DDD.EventStore]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.IntegerFilters.IIntegerFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Windows.Input.ICommand,</token>
<token>System,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IBooleanColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.Delay.IDelayProfileService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.Label.ILabelLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Link.ILinkLayoutViewModel,</token>
</entry>
<entry count="7">
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Sabnzbd.ISabnzbdProxy,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.FileMenu.IFileMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="12">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="10">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IXAxisGridLabelRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="7">
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Shell.MainMenu.EditMenu.IEditMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>?]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="29">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandBus,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.IExceptionDialogService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IFloatSizeLegendFactory,</token>
</entry>
<entry count="7">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],SetupGet</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="9">
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],SetupGet</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],SetupAllProperties</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
</entry>
<entry count="15">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IEventAggregator,</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeRepository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.DateTimeFilters.IDateTimeFilterSerializer,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="17">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="10">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelCommands,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="22">
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="26">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
</entry>
<entry count="1">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Geometry.IGeometryCalculator,</token>
<token>Presentation]],new</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines.IFloatGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IEventAggregator,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookupWindowManager,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookupWindowManager,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ODataModelBuilder,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="7">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IAccountDetailsView,</token>
</entry>
<entry count="4">
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Size.ISizeLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandLogger,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskTransferService,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.OData.Formatter.IETagHandler,</token>
</entry>
<entry count="26">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IIntegerColorLegendFactory,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.Delay.IDelayProfileService,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandBus,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
</entry>
<entry count="4">
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IDateTimeSizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IYearAxisGridLineFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataCollectionDeserializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="4">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionRepository,</token>
</entry>
<entry count="26">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IDateTimeColorLegendFactory,</token>
</entry>
<entry count="6">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>System.Net.Http.Formatting.MediaTypeFormatter,</token>
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="26">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation,</token>
<token>System.Web.Http.OData]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataDeltaFeedSerializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcService,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IProcess,</token>
<token>Application]],Verify</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelCommands,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.It,IsInRange</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.Http.OData.Routing.IODataPathHandler,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProcessDownloadDecisions,</token>
</entry>
<entry count="5">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Viewer.IViewerPaneViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
</entry>
<entry count="2">
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
</entry>
<entry count="1">
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],SetupAllProperties</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IIntegerSizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IStringSizeLegendFactory,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="57">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
<token>Application]],Verify</token>
</entry>
<entry count="14">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Verify</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IEdmObject,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="2">
<token>i:System.Windows.Input.ICommand,</token>
<token>System,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>?]],Verify</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.IServiceFactory,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmEntityObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
</entry>
<entry count="26">
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IDateTimeColorLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelCommands,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,Is</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotContextMenuViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="5">
<token>KaVE.RS.SolutionAnalysis.CompletionEventFilterLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IPrioritizeDownloadDecision,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Core.Queries.IQueryLogger,</token>
<token>Application]],Verify</token>
</entry>
<entry count="21">
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Net.Http.Formatting.IFormatterLogger,</token>
</entry>
<entry count="21">
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Serialization.ODataPrimitiveSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IUpgradeMediaFiles,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerRequestGenerator,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IntegerGridLines.IIntegerGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application]],Setup</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.UserControls.TrayNotification.NotifyTrayIcon,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="2">
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.ICanvasToBitmapExporter,</token>
<token>Application]],new</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="35">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandBus,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],VerifySet</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="5">
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="2">
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.UTorrent.IUTorrentProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Legend.ILegendPaneViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>System.Web.OData]],SetupAllProperties</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
</entry>
<entry count="24">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IEventLogger,</token>
</entry>
<entry count="3">
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Location.IYAxisLayoutViewModel,</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.FloatFilters.IFloatFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Domain.Colors.IColorPaletteFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.IMainMenuViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataDeltaFeedSerializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],new</token>
</entry>
<entry count="3">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
</entry>
<entry count="1">
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmFunctionImport,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IValueScaler,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="10">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:System.Web.Http.OData.IDelta,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.BankApplication.Presenters.IPopupPresenter,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientSearchFormView,</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.QBittorrent.IQBittorrentProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="5">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines.IFloatGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.EventStore.IDomainRepository`1[[TDomainEvent</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisher,</token>
<token>KaVE.RS.Commons]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Restrictions.IRestrictionService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IBooleanSizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IDateTimeSizeLegendFactory,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityType,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],VerifySet</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProcessDownloadDecisions,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="4">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomOutScatterPlotCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="15">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.IProfileRepository,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:System.Web.Http.OData.Routing.IODataPathHandler,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.Routing.IODataPathHandler,</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IArchiveService,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
</entry>
<entry count="45">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`2[[TContext</token>
<token>-&gt;</token>
<token>p:int],[TReturn</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="5">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityType,</token>
</entry>
<entry count="1">
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="29">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IBooleanColorLegendFactory,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,VerifyAll</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityTypeReference,</token>
</entry>
<entry count="3">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventLogger,</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Import.IImportDialogService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="2">
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
</entry>
<entry count="3">
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmNavigationProperty,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Net.Http.Formatting.IFormatterLogger,</token>
<token>System.Net.Http.Formatting,</token>
</entry>
<entry count="5">
<token>System.Web.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="5">
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="81">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting]],Setup</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmNavigationProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="7">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IEventAggregator,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomInScatterPlotCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation,</token>
<token>System.Web.OData]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
</entry>
<entry count="13">
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.N1QL.IQueryRequestWithDataMapper,</token>
<token>Couchbase]],SetupProperty</token>
</entry>
<entry count="1">
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFile,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataPrimitiveDeserializer,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="31">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IYearAxisGridLineFactory,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`1[[TContext</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Presentation]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IntegerGridLines.IIntegerGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>System.Web.Http.Controllers.HttpActionDescriptor,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],SetupGet</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataValue,</token>
<token>Microsoft.Data.OData,</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmChangedObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IntegerGridLines.IIntegerGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="12">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotFactory,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataPrimitiveSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="11">
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataFeedSerializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
</entry>
<entry count="7">
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Exceptions.IExceptionDialog,</token>
<token>Presentation]],new</token>
</entry>
<entry count="16">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
</entry>
<entry count="6">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.IConnectionPool,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnectionPool,</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="15">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="19">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IConsoleService,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Clipboard.ICanvasToBitmapExporter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotContextMenuViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="5">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Sabnzbd.ISabnzbdProxy,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandleAsync`1[[TEvent</token>
</entry>
<entry count="2">
<token>i:System.Net.Http.Formatting.IFormatterLogger,</token>
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IntegerGridLines.IIntegerGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],new</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookupWindowManager,</token>
</entry>
<entry count="4">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IFloatColorLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
</entry>
<entry count="4">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Property.IPropertyPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IDateTimeColorLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenDialogService,</token>
<token>Application]],new</token>
</entry>
<entry count="6">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Sabnzbd.ISabnzbdProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application]],new</token>
</entry>
<entry count="13">
<token>i:Microsoft.OData.Edm.IEdmModel,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="8">
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
</entry>
<entry count="2">
<token>6.15.0.0]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
</entry>
<entry count="5">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:System.Web.OData.IEdmObject,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IEdmEntityObject,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IAccountDetailsView,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],SetupGet</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.StartMenu.IStartMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Presentation]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Colors.IColorPaletteFactory,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Viewer.IViewerPaneViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmEntityContainer,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Download.Clients.UTorrent.IUTorrentProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Update.UpdateEngine.IInstallUpdateService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Label.ILabelLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,GetType</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualService,</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>?]],Verify</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Import.IImportDialogService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.UserControls.TrayNotification.NotifyTrayIcon,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.EnableQueryAttribute,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="11">
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Queries.IQueryLogger,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="133">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IIntegerSizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuredType,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Raise</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Query.ODataQueryOptions,</token>
<token>System.Web.Http.OData]],Verify</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataFeedSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons.Tests_Integration]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Tests_Integration.Utils.ITestShellComponent,</token>
<token>KaVE.RS.Commons.Tests_Integration]],Setup</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookupWindowManager,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.IClipboard,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
</entry>
<entry count="3">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandLogger,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IDateTimeColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IFloatColorLegendFactory,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.Routing.IHttpRoute,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Services.ISendMoneyTransfer,</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>System.Web.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.IMessageBoxCreator,</token>
</entry>
<entry count="16">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.IntegerFilters.IIntegerFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>Microsoft.OData.Edm.Library.EdmModel,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
</entry>
<entry count="18">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],VerifySet</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Link.ILinkLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.Navigation.INavigationUtils,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Location.IXAxisLayoutViewModel,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomInScatterPlotCommand,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.N1QL.IQueryRequest,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Domain.Colors.IColorPaletteFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="3">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="17">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="39">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>System.Web.Http.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntityTypeConfiguration,</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.BankApplication.Views.IClientSearchFormView,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
</entry>
<entry count="18">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],Verify</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.UTorrent.IUTorrentProxy,</token>
</entry>
<entry count="6">
<token>KaVE.RS.Commons]],Verify</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="5">
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IFloatColorLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>Application]],VerifySet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntityTypeConfiguration,</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
</entry>
<entry count="12">
<token>Presentation]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="10">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="10">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmComplexObject,</token>
</entry>
<entry count="8">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
</entry>
<entry count="33">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
</entry>
<entry count="7">
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="2">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.BooleanFilters.IBooleanFilterSerializer,</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application]],new</token>
</entry>
<entry count="4">
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],new</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuredTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="10">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],SetupGet</token>
</entry>
<entry count="27">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Update.UpdateEngine.IInstallUpdateService,</token>
<token>NzbDrone.Update]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IEdmEntityObject,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="7">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>TType]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.Sabnzbd.ISabnzbdProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,GetType</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataFeedSerializer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:int],[TReturn</token>
<token>-&gt;</token>
<token>p:object]],</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>p:object]],</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.UserProfileExports.UserProfileExportHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="2">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="17">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisher,</token>
<token>KaVE.RS.Commons]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Legend.ILegendPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IPanScatterPlotCommand,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.IClipboard,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="48">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Verify</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.OData.IDelta,</token>
</entry>
<entry count="8">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataModelBuilder,</token>
</entry>
<entry count="2">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IEventLogger,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="15">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.DateTimeFilters.IDateTimeFilterSerializer,</token>
</entry>
<entry count="2">
<token>i:Couchbase.Views.IDataMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.N1QL.IQueryRequestWithDataMapper,</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="3">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.MediaCover.IImageResizer,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.UserControls.TrayNotification.NotifyTrayIcon,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="13">
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataCollectionDeserializer,</token>
</entry>
<entry count="10">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
</entry>
<entry count="6">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],SetupGet</token>
</entry>
<entry count="5">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],new</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
</entry>
<entry count="13">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.EnableQueryAttribute,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="4">
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterPaneViewModel,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Exceptions.IExceptionDialog,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.Shape.IShapeLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Label.ILabelLayoutViewModel,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Geometry.IGeometryCalculator,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="8">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
</entry>
<entry count="4">
<token>Couchbase]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogProvider,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
</entry>
<entry count="10">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="4">
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.CompletionEventFilterLogger,</token>
</entry>
<entry count="7">
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>T]],new</token>
</entry>
<entry count="1">
<token>Couchbase.Core.Serialization.DefaultSerializer,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IBooleanColorLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.IImageResizer,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="8">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.UserProfileExports.UserProfileExportHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="13">
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Synology.ISynologyIndexerProxy,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="4">
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.OData]],SetupProperty</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Bus.IBus,</token>
<token>Fohjin.DDD.Bus]],Verify</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
</entry>
<entry count="12">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
<token>Application]],new</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain]],new</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="31">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
</entry>
<entry count="3">
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="10">
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmEntityObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="3">
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Shell.MainMenu.EditMenu.IEditMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.NullFilters.INullFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IBooleanSizeLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Net.Http.Formatting.IFormatterLogger,</token>
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="11">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
<token>Application]],Setup</token>
</entry>
<entry count="19">
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="20">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
</entry>
<entry count="5">
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.INamingConfigService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="13">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`2[[TContext</token>
<token>-&gt;</token>
<token>p:int],[TReturn</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.EnableQueryAttribute,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>System.Threading.SynchronizationContext,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Verify</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IYearAxisGridLineFactory,</token>
</entry>
<entry count="68">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:Microsoft.OData.Edm.IEdmEntityType,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelCommands,</token>
</entry>
<entry count="4">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeRepository,</token>
</entry>
<entry count="4">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.IExceptionDialogService,</token>
<token>Application]],new</token>
</entry>
<entry count="5">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.Bus.IBus,</token>
<token>Fohjin.DDD.Bus]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],new</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmNavigationProperty,</token>
<token>Microsoft.Data.Edm,</token>
</entry>
<entry count="13">
<token>Moq.Mock,Get</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Moq.It,IsInRange</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
</entry>
<entry count="2">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:Microsoft.Data.Edm.IEdmFunctionImport,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILog,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="3">
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],Verify</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Notifications.Synology.ISynologyIndexerProxy,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],Verify</token>
</entry>
<entry count="26">
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Presenters.IPopupPresenter,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Presentation.Dialogs.Exceptions.IExceptionDialog,</token>
<token>Presentation]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Commands.ICommandLogger,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:Fohjin.DDD.EventStore.IDomainEvent,</token>
<token>Fohjin.DDD.EventStore]],</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataModelBuilder,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>T]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IResizeScatterPlotViewExtentCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualService,</token>
<token>Presentation]],Verify</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IBooleanColorLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:int],[TReturn</token>
<token>-&gt;</token>
<token>p:object]],</token>
<token>KaVE.Commons]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Authentication.SASL.ISaslMechanism,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
</entry>
<entry count="9">
<token>i:DataExplorer.Application.Core.Logs.ILog,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Events.IEventLogger,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmActionImport,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenDialogService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Views.IDataMapper,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="12">
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmNavigationProperty,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],new</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Intervals.Model.Interval,</token>
<token>KaVE.FeedbackProcessor]],</token>
</entry>
<entry count="2">
<token>5.6.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="13">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IStringSizeLegendFactory,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],SetupProperty</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.IMessageBoxCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ODataModelBuilder,</token>
</entry>
<entry count="2">
<token>i:Fohjin.DDD.Bus.IBus,</token>
<token>Fohjin.DDD.Bus]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IStringColorLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="3">
<token>Infrastructure]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDayAxisGridLineFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Color.IColorLayoutViewModel,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="13">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="4">
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.BooleanFilters.IBooleanFilterSerializer,</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Presentation.IExceptionDialogService,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializer,</token>
</entry>
<entry count="2">
<token>System.Web.OData]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Shape.IShapeLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.BooleanFilters.IBooleanFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
</entry>
<entry count="3">
<token>KaVE.RS.Commons]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.Http.OData]],Verify</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandBus,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
</entry>
<entry count="2">
<token>Fohjin.DDD.BankApplication]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
<token>KaVE.Commons]],Setup</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogProvider,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="7">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IDelta,</token>
</entry>
<entry count="4">
<token>System.Web.OData]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
</entry>
<entry count="4">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>i:System.Net.Http.Formatting.IFormatterLogger,</token>
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.Metadata.ModelMetadataProvider,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="15">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandBus,</token>
</entry>
<entry count="18">
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmStructuredTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="2">
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.CompletionEventFilterLogger,</token>
</entry>
<entry count="5">
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
</entry>
<entry count="2">
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="5">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>Couchbase.Core.Serialization.DefaultSerializer,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>6.15.0.0]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="22">
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IFloatSizeLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="3">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDayAxisGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="3">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>5.2.2.0]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.IImageResizer,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IUpgradeMediaFiles,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.IActionExecutor,</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.IActionExecutor,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="26">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="10">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="12">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.IImageResizer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskTransferService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.Body.ICsvFileImportBodyViewModel,</token>
</entry>
<entry count="14">
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>4.0.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Exception,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Geometry.IGeometryCalculator,</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
</entry>
<entry count="2">
<token>?]],new</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],SetupGet</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcService,</token>
</entry>
<entry count="4">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookupWindowManager,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="2">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Host.IBrowserService,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuredTypeReference,</token>
</entry>
<entry count="2">
<token>Moq.Mock,GetType</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Size.ISizeLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="26">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceFactory,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.BooleanGridLines.IBooleanGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IStringSizeLegendFactory,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
<token>Domain]],new</token>
</entry>
<entry count="2">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.Routing.IODataPathTemplateHandler,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
</entry>
<entry count="14">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuredType,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Services.IReceiveMoneyTransfers,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>T]],Setup</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="4">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Web.Http.Routing.IHttpRoute,</token>
<token>System.Web.Http,</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="8">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],Verify</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.MediaFiles.IMoveEpisodeFiles,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="8">
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Views.IDataMapper,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.Label.ILabelLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IDateTimeSizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceFactory,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="2">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.StringGridLines.IStringGridLineFactory,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IYAxisTitleRenderer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
</entry>
<entry count="2">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.Shape.IShapeLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.Authentication.SASL.ISaslMechanism,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.ISelectCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IConsoleService,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.BooleanFilters.IBooleanFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="18">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:int],[TReturn</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataValue,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
</entry>
<entry count="18">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="23">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IDateTimeSizeLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IPanScatterPlotCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.ISelectCommand,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.TorrentRss.ITorrentRssSettingsDetector,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.Metadata.ModelMetadataProvider,</token>
<token>System.Web.Http,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.IProfileRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>6.15.0.0]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="17">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
</entry>
<entry count="3">
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenDialogService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataCollectionDeserializer,</token>
</entry>
<entry count="19">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Exceptions.IExceptionDialog,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>i:KaVE.Commons.Model.SSTs.Visitor.ISSTNode,</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="15">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="12">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],SetupGet</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.IMessageBoxCreator,</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.MediaCover.ICoverExistsSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Clipboard.IClipboard,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
</entry>
<entry count="57">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
<token>Application]],Verify</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
</entry>
<entry count="89">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.ICoverExistsSpecification,</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryRepository,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IValueScaler,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.ViewMenu.IViewMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IFloatSizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
</entry>
<entry count="16">
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="13">
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IIntegerColorLegendFactory,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
</entry>
<entry count="22">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting]],Verify</token>
</entry>
<entry count="2">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Net.Http.Formatting.IContentNegotiator,</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmSingleton,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="4">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.Color.IColorLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Size.ISizeLayoutViewModel,</token>
</entry>
<entry count="5">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IXAxisGridLineRenderer,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
</entry>
<entry count="1">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IIntegerSizeLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="4">
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="17">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmProperty,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="30">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskTransferService,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IRandomizationUtils,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:System.Net.Http.Formatting.IFormatterLogger,</token>
<token>System.Net.Http.Formatting,</token>
</entry>
<entry count="2">
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.Metadata.ModelMetadataProvider,</token>
<token>System.Web.Http,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Query.Validators.SelectExpandQueryValidator,</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmFunctionImport,</token>
<token>Microsoft.Data.Edm,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Property.IPropertyPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="12">
<token>Moq.Mock,Get</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.TorrentRss.ITorrentRssSettingsDetector,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IResizeScatterPlotViewExtentCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="30">
<token>i:Fohjin.DDD.BankApplication.Presenters.IPopupPresenter,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.Services.IReceiveMoneyTransfers,</token>
<token>Fohjin.DDD.Services]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],SetupGet</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>6.15.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.N1QL.IQueryRequestWithDataMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="17">
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="9">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Tests_Integration.Utils.ITestShellComponent,</token>
<token>KaVE.RS.Commons.Tests_Integration]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:Couchbase.N1QL.IQueryRequestWithDataMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.N1QL.IQueryRequestWithDataMapper,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.StringGridLines.IStringGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataDeltaFeedSerializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.Rarbg.IRarbgTokenProvider,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="3">
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],SetupGet</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
</entry>
<entry count="81">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmProperty,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
</entry>
<entry count="4">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="3">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Shape.IShapeLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`1[[TContext</token>
<token>-&gt;</token>
<token>p:int]],</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="24">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntityTypeConfiguration,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application]],Setup</token>
</entry>
<entry count="4">
<token>i:System.Web.Http.OData.IEdmObject,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],SetupGet</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Core.Commands.ICommandBus,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
</entry>
<entry count="1">
<token>KaVE.FeedbackProcessor]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="9">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:Couchbase.Authentication.SASL.ISaslMechanism,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
</entry>
<entry count="5">
<token>Moq.It,Is</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.OData.EnableQueryAttribute,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Location.IXAxisLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>?]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.IMessageBoxCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="6">
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
<token>KaVE.Commons]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IResizeScatterPlotViewExtentCommand,</token>
<token>Presentation]],new</token>
</entry>
<entry count="3">
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="119">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IntegerGridLines.IIntegerGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.Location.IXAxisLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.ICanvasToBitmapExporter,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventLogger,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.FileMenu.IFileMenuViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator,</token>
</entry>
<entry count="1">
<token>6.15.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:int],[TReturn</token>
<token>-&gt;</token>
<token>p:object]],</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Shell.MainMenu.FileMenu.IFileMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.EditMenu.IEditMenuViewModel,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="8">
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterPaneViewModel,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Geometry.IGeometryCalculator,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
</entry>
<entry count="18">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
</entry>
<entry count="12">
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.IClipboard,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Exceptions.IExceptionDialog,</token>
<token>Presentation]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Core.Events.IEventLogger,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
</entry>
<entry count="14">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IIntegerColorLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IDateTimeSizeLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="10">
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="13">
<token>i:Microsoft.OData.Edm.IEdmModel,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MetadataSource.IProvideSeriesInfo,</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
</entry>
<entry count="2">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="122">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IIntegerColorLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="18">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],SetupGet</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.ISecondAxisGridLineFactory,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Views.IDataMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Views.IDataMapper,</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.Location.IXAxisLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Location.IYAxisLayoutViewModel,</token>
</entry>
<entry count="8">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
</entry>
<entry count="3">
<token>Moq.It,Is</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],SetupGet</token>
</entry>
<entry count="4">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.StringFilters.IStringFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>System.Web.Http,</token>
<token>5.2.2.0]],SetupGet</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation]],new</token>
</entry>
<entry count="12">
<token>Presentation]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.Location.IYAxisLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IProcessDownloadDecisions,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="11">
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Common.Disk.IDiskTransferService,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IYearAxisGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmComplexObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="12">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="10">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesRepository,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Threading.SynchronizationContext,</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],Verify</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
</entry>
<entry count="2">
<token>KaVE.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],new</token>
</entry>
<entry count="5">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Viewer.IViewerPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.IMainMenuViewModel,</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],SetupAllProperties</token>
</entry>
<entry count="2">
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmFunctionImport,</token>
</entry>
<entry count="1">
<token>System.Web.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.Services.IReceiveMoneyTransfers,</token>
<token>Fohjin.DDD.Services]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="6">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelCommands,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="3">
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IYearAxisGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Commands.ICommandLogger,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.IExceptionDialogService,</token>
</entry>
<entry count="31">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Application]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],SetupGet</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting]],Verify</token>
</entry>
<entry count="2">
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDateTimeGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.IProfileRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="12">
<token>Moq.Mock,Get</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="22">
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="26">
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IBooleanSizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:System.Net.Http.Formatting.IContentNegotiator,</token>
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="20">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Synology.ISynologyIndexerProxy,</token>
</entry>
<entry count="2">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookupWindowManager,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
</entry>
<entry count="9">
<token>System.Web.OData]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataPrimitiveDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="16">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock,As</token>
</entry>
<entry count="3">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
</entry>
<entry count="3">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
</entry>
<entry count="2">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="34">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MetadataSource.IProvideSeriesInfo,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
</entry>
<entry count="4">
<token>?]],new</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMoveEpisodeFiles,</token>
</entry>
<entry count="8">
<token>Application]],VerifySet</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.Controllers.HttpActionDescriptor,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],SetupGet</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Fohjin.DDD.BankApplication]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientDetailsView,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
</entry>
<entry count="12">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
</entry>
<entry count="4">
<token>i:System.Net.Http.Formatting.IFormatterLogger,</token>
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.IClipboard,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:System.Collections.IEnumerable,</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
</entry>
<entry count="2">
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Net.Http.Formatting.IContentNegotiator,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>Presentation]],VerifySet</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="17">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines.IFloatGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="13">
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="2">
<token>System.Web.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],SetupGet</token>
</entry>
<entry count="2">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.N1QL.IQueryRequestWithDataMapper,</token>
<token>Couchbase]],SetupProperty</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Fohjin.DDD.EventStore.IDomainEvent,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.FloatFilters.IFloatFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="5">
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesRepository,</token>
</entry>
<entry count="25">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IPanScatterPlotCommand,</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,VerifyAll</token>
</entry>
<entry count="3">
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IYAxisTitleRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="4">
<token>?]],SetupGet</token>
<token>Moq.Mock,As</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Couchbase.Core.Serialization.DefaultSerializer,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IRecycleBinProvider,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Profiles.IProfileRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IConsoleService,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.Footer.ICsvFileImportFooterViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="16">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Synology.ISynologyIndexerProxy,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:Microsoft.Data.Edm.IEdmFunctionImport,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],Setup</token>
</entry>
<entry count="3">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
</entry>
<entry count="4">
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.OData]],new</token>
<token>Moq.Mock,GetType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons]],Setup</token>
</entry>
<entry count="4">
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IntegerFilters.IIntegerFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="11">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
</entry>
<entry count="3">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MetadataSource.IProvideSeriesInfo,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="11">
<token>KaVE.RS.SolutionAnalysis.CompletionEventFilterLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Legend.Sizes.ISizeLegendViewModel,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Legend.Colors.IColorLegendViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="2">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.Activity.IKaVEMouseEvents,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="2">
<token>Infrastructure]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Application]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="12">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IYearAxisGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IUpgradeMediaFiles,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IEventLogger,</token>
</entry>
<entry count="11">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>Fohjin.DDD.Services]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
</entry>
<entry count="21">
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerRequestGenerator,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock,Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="5">
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
</entry>
<entry count="3">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskTransferService,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.EventStore.IDomainRepository`1[[TDomainEvent</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Geometry.IGeometryCalculator,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterPaneViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="10">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="2">
<token>System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Import.IImportDialogService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
</entry>
<entry count="10">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Legend.Sizes.ISizeLegendViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.Body.ICsvFileImportBodyViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Queries.IQueryLogger,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="18">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Threading.SynchronizationContext,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],new</token>
</entry>
<entry count="3">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="5">
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmSingleton,</token>
</entry>
<entry count="1">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.ICoverExistsSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="5">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="3">
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.QBittorrent.IQBittorrentProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IYAxisGridLineRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="4">
<token>?]],new</token>
<token>Moq.Mock,As</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="7">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.Controllers.HttpActionDescriptor,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],VerifySet</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
</entry>
<entry count="11">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Tv.ISeriesRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],SetupProperty</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Exception,</token>
</entry>
<entry count="23">
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.IImageResizer,</token>
</entry>
<entry count="13">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="2">
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,VerifyAll</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Serialization.ODataPrimitiveSerializer,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],VerifySet</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IYAxisGridLabelRenderer,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandLogger,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],new</token>
</entry>
<entry count="3">
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="29">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisher,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IStringColorLegendFactory,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.NullFilters.INullFilterSerializer,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryLogger,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IMinMaxDateTimeAxisGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.INamingConfigService,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],Verify</token>
</entry>
<entry count="4">
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
<token>KaVE.Commons]],new</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Fohjin.DDD.Bus]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],SetupGet</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Collections.IEnumerable,</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="10">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`2[[TContext</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock,Get</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="3">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandLogger,</token>
<token>Application]],Verify</token>
</entry>
<entry count="170">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Intervals.Model.Interval,</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IFloatSizeLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.N1QL.IQueryRequest,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
</entry>
<entry count="2">
<token>i:System.Web.Http.Routing.IHttpVirtualPathData,</token>
<token>System.Web.Http,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IDateTimeColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>Presentation]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualService,</token>
</entry>
<entry count="7">
<token>i:Microsoft.OData.Edm.IEdmModel,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="45">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="2">
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IEventLogger,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="14">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IArchiveService,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
</entry>
<entry count="1">
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmFunctionImport,</token>
</entry>
<entry count="2">
<token>System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="4">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Exception,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.IMessageBoxCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataPrimitiveDeserializer,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IIntegerSizeLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
</entry>
<entry count="1">
<token>6.15.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],new</token>
</entry>
<entry count="3">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Colors.IColorPaletteFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,GetType</token>
</entry>
<entry count="4">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.FileMenu.IFileMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.ISelectCommand,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.OData]],Verify</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.EnableQueryAttribute,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="3">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuredType,</token>
</entry>
<entry count="17">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.IProcess,</token>
<token>Application]],Verify</token>
</entry>
<entry count="3">
<token>i:Microsoft.OData.Edm.IEdmStructuredType,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="1">
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="19">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Import.IImportDialogService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenDialogService,</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="2">
<token>System.Web.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.DateTimeFilters.IDateTimeFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.FloatFilters.IFloatFilterSerializer,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
</entry>
<entry count="16">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.IMainMenuViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.EnableQueryAttribute,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IntegerFilters.IIntegerFilterSerializer,</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Exception,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],new</token>
</entry>
<entry count="19">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],Setup</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],new</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IUpgradeMediaFiles,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDayAxisGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityType,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Web.Http.Routing.IHttpVirtualPathData,</token>
<token>System.Web.Http,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Presenters.IPopupPresenter,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.Header.ICsvFileImportHeaderViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.Controllers.HttpParameterDescriptor,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="15">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="31">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmChangedObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="14">
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandBus,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="40">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="2">
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandBus,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IDelta,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons]],new</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IProcess,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
<token>KaVE.Commons]],Setup</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataPrimitiveDeserializer,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="4">
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>KaVE.FeedbackProcessor]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.FloatFilters.IFloatFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Infrastructure]],new</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmNavigationProperty,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.UserControls.TrayNotification.NotifyTrayIcon,</token>
</entry>
<entry count="6">
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>T]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IValueScaler,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.INavigationPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataCollectionDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IntegerGridLines.IIntegerGridLineFactory,</token>
</entry>
<entry count="4">
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.Http.OData.Formatter.IETagHandler,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataValue,</token>
<token>Microsoft.OData.Core,</token>
</entry>
<entry count="2">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
<token>Application]],Setup</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:System.Net.Http.Formatting.IFormatterLogger,</token>
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="17">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.N1QL.IQueryRequestWithDataMapper,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="23">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.NullFilters.INullFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>6.15.0.0]],new</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.IntegerFilters.IIntegerFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="6">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="4">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.Body.ICsvFileImportBodyViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Link.ILinkLayoutViewModel,</token>
</entry>
<entry count="13">
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="24">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmFunctionImport,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.Core.Services.IVisualService,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Net.Http.Formatting.IContentNegotiator,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.Routing.IODataPathTemplateHandler,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,VerifyAll</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaCover.IImageResizer,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.ISecondAxisGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.IProfileRepository,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.HelpMenu.IHelpMenuViewModel,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualService,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
</entry>
<entry count="1">
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>5.2.2.0]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="16">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Generators.Activity.IKaVEMouseEvents,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.ISecondAxisGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmSingleton,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="3">
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="15">
<token>i:NzbDrone.Core.Messaging.Events.IEventAggregator,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.IConnectionPool,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="12">
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.ICsvFileImportViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IEventLogger,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Property.IPropertyPaneViewModel,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines.IFloatGridLineFactory,</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="89">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Verify</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="63">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="7">
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.N1QL.IQueryRequestWithDataMapper,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="13">
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.Delay.IDelayProfileService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.StartMenu.IStartMenuViewModel,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileTableCleanupService,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="23">
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>6.15.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],VerifySet</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:Microsoft.Data.Edm.IEdmFunctionImport,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Restrictions.IRestrictionService,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="6">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Fohjin.DDD.EventStore.IDomainRepository`1[[TDomainEvent</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.Footer.ICsvFileImportFooterViewModel,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IntegerFilters.IIntegerFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.OData]],new</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
</entry>
<entry count="8">
<token>Application]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.IMessageBoxCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons]],Setup</token>
</entry>
<entry count="50">
<token>-&gt;</token>
<token>?]],SetupGet</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
</entry>
<entry count="2">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataConventionModelBuilder,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.IActionExecutor,</token>
<token>KaVE.RS.Commons]],new</token>
</entry>
<entry count="3">
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],Setup</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="24">
<token>?]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>?]],SetupProperty</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IBooleanColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelCommands,</token>
<token>Presentation]],new</token>
</entry>
<entry count="11">
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="6">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogProvider,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="21">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
</entry>
<entry count="2">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.Navigation.INavigationUtils,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],new</token>
</entry>
<entry count="4">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.IImageResizer,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="13">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Colors.IColorPaletteFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IMinMaxDateTimeAxisGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.StringFilters.IStringFilterSerializer,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceFactory,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
<token>KaVE.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
</entry>
<entry count="1">
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookupWindowManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],Verify</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
</entry>
<entry count="1">
<token>System.Web.OData]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="6">
<token>System.Net.Http.Formatting.MediaTypeFormatter,</token>
<token>System.Net.Http.Formatting,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.EnableQueryAttribute,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataValue,</token>
<token>Microsoft.Data.OData,</token>
</entry>
<entry count="2">
<token>?]],new</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.Header.ICsvFileImportHeaderViewModel,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmNavigationProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryLogger,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="26">
<token>Fohjin.DDD.BankApplication]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IBooleanSizeLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="6">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:System.Web.OData.IEdmComplexObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.IDelta,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="5">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application]],new</token>
</entry>
<entry count="3">
<token>i:Fohjin.DDD.EventStore.IDomainRepository`1[[TDomainEvent</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.EventStore.IDomainEvent,</token>
<token>Fohjin.DDD.EventStore]],</token>
<token>Fohjin.DDD.EventStore]],Verify</token>
</entry>
<entry count="6">
<token>i:Microsoft.Data.Edm.IEdmNavigationProperty,</token>
<token>Microsoft.Data.Edm,</token>
</entry>
<entry count="48">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
</entry>
<entry count="22">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Bus.IBus,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
<token>Application]],Setup</token>
</entry>
<entry count="2">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataConventionModelBuilder,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.ICoverExistsSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="89">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>KaVE.RS.Commons]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IXAxisTitleRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.EnableQueryAttribute,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IIntegerColorLegendFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:int]],</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],new</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Fohjin.DDD.EventStore.IDomainEvent,</token>
<token>Fohjin.DDD.EventStore]],</token>
<token>Fohjin.DDD.EventStore]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IParseIndexerResponse,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerRequestGenerator,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.Http.OData.Routing.IODataPathHandler,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IXAxisTitleRenderer,</token>
</entry>
<entry count="1">
<token>i:System.Web.OData.IEdmObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
</entry>
<entry count="6">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileRepository,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Navigation.INavigationPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.IProfileRepository,</token>
</entry>
<entry count="2">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmActionImport,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.BooleanGridLines.IBooleanGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="8">
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],VerifySet</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="9">
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IBooleanSizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Synology.ISynologyIndexerProxy,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="15">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IEventAggregator,</token>
</entry>
<entry count="1">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],new</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.IProfileRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>?]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>?]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Shell.MainMenu.ViewMenu.IViewMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.HelpMenu.IHelpMenuViewModel,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.IProfileRepository,</token>
</entry>
<entry count="6">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Bus.IBus,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IStringSizeLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`1[[TContext</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomOutScatterPlotCommand,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.ILayoutPaneViewModel,</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="8">
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Host.INzbDroneServiceFactory,</token>
<token>NzbDrone.Host]],Verify</token>
</entry>
<entry count="4">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Microsoft.OData.Edm.Library.EdmModel,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
</entry>
<entry count="21">
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Raise</token>
</entry>
<entry count="2">
<token>Presentation]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="17">
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFile,</token>
<token>Infrastructure]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.BooleanFilters.IBooleanFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="2">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],VerifySet</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmFunctionImport,</token>
<token>Microsoft.Data.Edm,</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.ILayoutPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>?]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
<token>Application]],Setup</token>
</entry>
<entry count="2">
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`2[[TContext</token>
<token>-&gt;</token>
<token>p:int],[TReturn</token>
<token>-&gt;</token>
<token>p:object]],</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.BooleanFilters.IBooleanFilterSerializer,</token>
</entry>
<entry count="4">
<token>?]],SetupGet</token>
<token>Moq.Mock,As</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Setup</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.INamingConfigService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="4">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientDetailsView,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
</entry>
<entry count="3">
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
<token>KaVE.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="12">
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,GetType</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="10">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="3">
<token>?]],SetupProperty</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
</entry>
<entry count="9">
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines.IFloatGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataDeltaFeedSerializer,</token>
</entry>
<entry count="5">
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="13">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomInScatterPlotCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="18">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Download.IDownloadService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.Tv.IEpisodeRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.CompletionEventFilterLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="16">
<token>Moq.Mock,Of</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>KaVE.RS.SolutionAnalysis.CompletionEventFilterLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.Services.ISendMoneyTransfer,</token>
<token>Fohjin.DDD.Services]],Setup</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Services.IReceiveMoneyTransfers,</token>
</entry>
<entry count="2">
<token>Presentation]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
</entry>
<entry count="1">
<token>KaVE.FeedbackProcessor]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IDateTimeSizeLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IFloatColorLegendFactory,</token>
</entry>
<entry count="29">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>Application]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IRecycleBinProvider,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ODataModelBuilder,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="7">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="12">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
</entry>
<entry count="9">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
</entry>
<entry count="16">
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="18">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
</entry>
<entry count="4">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],SetupAllProperties</token>
</entry>
<entry count="8">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IIntegerColorLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="42">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Net.Http.Formatting.MediaTypeFormatter,</token>
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="130">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Update.UpdateEngine.IInstallUpdateService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogProvider,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IntegerGridLines.IIntegerGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.StringGridLines.IStringGridLineFactory,</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDayAxisGridLineFactory,</token>
<token>Application]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IStringColorLegendFactory,</token>
</entry>
<entry count="7">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityType,</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IXAxisTitleRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.IMainMenuViewModel,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Indexers.TorrentRss.ITorrentRssSettingsDetector,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IYearAxisGridLineFactory,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="31">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventLogger,</token>
<token>Application]],Verify</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
</entry>
<entry count="20">
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
</entry>
<entry count="3">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="19">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="62">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.It,Is</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Commands.ICommandBus,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.Header.ICsvFileImportHeaderViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="9">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILog,</token>
<token>Application]],Verify</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],SetupGet</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IBooleanSizeLegendFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.OData.IDelta,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomInScatterPlotCommand,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
</entry>
<entry count="8">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="3">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],VerifySet</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="24">
<token>-&gt;</token>
<token>?]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="23">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="9">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="19">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
</entry>
<entry count="14">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
</entry>
<entry count="72">
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Shell.MainMenu.HelpMenu.IHelpMenuViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="2">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,Is</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="4">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
</entry>
<entry count="7">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandLogger,</token>
</entry>
<entry count="2">
<token>Moq.Mock,Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelCommands,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.TorrentRss.ITorrentRssSettingsDetector,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="5">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.IImageResizer,</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="16">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
</entry>
<entry count="2">
<token>Couchbase]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="5">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcService,</token>
</entry>
<entry count="2">
<token>mscorlib,</token>
<token>4.0.0.0]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IDateTimeColorLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IFloatSizeLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:System.Web.Http.OData.Routing.IODataPathHandler,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataModelBuilder,</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IMinMaxDateTimeAxisGridLineFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IFloatSizeLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Fohjin.DDD.EventStore.IDomainRepository`1[[TDomainEvent</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.EventStore.IDomainEvent,</token>
<token>Fohjin.DDD.EventStore]],</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock,As</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityType,</token>
</entry>
<entry count="4">
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Commands.ICommandLogger,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="10">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>p:object]],</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Import.IImportDialogService,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IIntegerSizeLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="22">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.NavigationTree.INavigationTreeViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.IntegerFilters.IIntegerFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.StringFilters.IStringFilterSerializer,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:System.Collections.IEnumerable,</token>
<token>mscorlib,</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogProvider,</token>
</entry>
<entry count="2">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntityTypeConfiguration,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Geometry.IGeometryCalculator,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Location.IXAxisLayoutViewModel,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IYAxisGridLineRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="2">
<token>Fohjin.DDD.BankApplication]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Couchbase.Core.Serialization.DefaultSerializer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Services.ISendMoneyTransfer,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="17">
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IValueScaler,</token>
</entry>
<entry count="14">
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.UserProfileExports.UserProfileExportHelper,</token>
</entry>
<entry count="16">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="2">
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>i:System.Web.Http.OData.IEdmObject,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],SetupGet</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Queries.IQueryLogger,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Location.IYAxisLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock,Get</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="4">
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionRepository,</token>
</entry>
<entry count="1">
<token>Infrastructure]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],new</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IFloatColorLegendFactory,</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.UTorrent.IUTorrentProxy,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnectionPool,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IAccountDetailsView,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock,As</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Synology.ISynologyIndexerProxy,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Shell.MainMenu.IMainMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.INavigationPaneViewModel,</token>
</entry>
<entry count="7">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="10">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.N1QL.IQueryRequest,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Size.ISizeLayoutViewModel,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.ViewMenu.IViewMenuViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>System.Threading.SynchronizationContext,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],new</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IDateTimeColorLegendFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],new</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
</entry>
<entry count="5">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.StringFilters.IStringFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Net.Http.Formatting.IContentNegotiator,</token>
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="8">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.OData.IDelta,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],VerifySet</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Threading.SynchronizationContext,</token>
</entry>
<entry count="1">
<token>T]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>T]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataPrimitiveDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IRecycleBinProvider,</token>
</entry>
<entry count="51">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Legend.Colors.IColorLegendViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain]],new</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:System.Collections.IEnumerable,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Setup</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataPrimitiveDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Restrictions.IRestrictionService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Couchbase.Core.Serialization.DefaultSerializer,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IYearAxisGridLineFactory,</token>
<token>Application]],Setup</token>
</entry>
<entry count="2">
<token>5.2.2.0]],new</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Verify</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IEdmEntityObject,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="3">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="83">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="5">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
</entry>
<entry count="3">
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Update.UpdateEngine.IInstallUpdateService,</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
</entry>
<entry count="7">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
</entry>
<entry count="1">
<token>Moq.Mock,Get</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Shell.MainMenu.IMainMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.Http.OData.Formatter.IETagHandler,</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="2">
<token>System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Intervals.Model.Interval,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Geometry.IGeometryCalculator,</token>
</entry>
<entry count="5">
<token>5.6.0.0]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.N1QL.IQueryRequestWithDataMapper,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="8">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmNavigationProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
</entry>
<entry count="4">
<token>System.Web.Http.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ODataModelBuilder,</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.IActionExecutor,</token>
<token>KaVE.RS.Commons]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFile,</token>
<token>Infrastructure]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="68">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Threading.SynchronizationContext,</token>
</entry>
<entry count="2">
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Intervals.Model.Interval,</token>
<token>KaVE.FeedbackProcessor]],</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmChangedObject,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.VisualStudio.IFocusHelper,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>?]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Organizer.INamingConfigService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`2[[TContext</token>
<token>-&gt;</token>
<token>p:int],[TReturn</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Couchbase.Core.Serialization.DefaultSerializer,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
</entry>
<entry count="10">
<token>Application]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Exceptions.IExceptionDialog,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IFloatSizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmTypeReference,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.IActionExecutor,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="6">
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.IProfileRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="60">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IStringColorLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsInRange</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Location.IYAxisLayoutViewModel,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IRandomizationUtils,</token>
<token>KaVE.Commons]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IResizeScatterPlotViewExtentCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="18">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="7">
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="38">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.ICsvFileImportViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="12">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,GetType</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IDateTimeColorLegendFactory,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IQualityUpgradableSpecification,</token>
</entry>
<entry count="3">
<token>i:Microsoft.OData.Edm.IEdmTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IAccountDetailsView,</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityType,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="23">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Legend.Colors.IColorLegendViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="8">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>?]],SetupGet</token>
<token>Moq.Mock,As</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="20">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:System.Net.Http.Formatting.IFormatterLogger,</token>
</entry>
<entry count="14">
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IFloatColorLegendFactory,</token>
</entry>
<entry count="35">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandBus,</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
</entry>
<entry count="21">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMoveEpisodeFiles,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.Routing.IODataPathHandler,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.Label.ILabelLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>System.Web.OData.Builder.ODataConventionModelBuilder,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="63">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],Verify</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcService,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="25">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting]],Verify</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.Activity.IKaVEMouseEvents,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.Rarbg.IRarbgTokenProvider,</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>System.Web.Http.Controllers.HttpActionDescriptor,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Services.IReceiveMoneyTransfers,</token>
<token>Fohjin.DDD.Services]],Verify</token>
</entry>
<entry count="18">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="5">
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Size.ISizeLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>?]],SetupGet</token>
<token>Moq.Mock,As</token>
</entry>
<entry count="1">
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.UserProfileExports.UserProfileExportHelper,</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
</entry>
<entry count="2">
<token>?]],Verify</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="2">
<token>Infrastructure]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.Newznab.INewznabCapabilitiesProvider,</token>
</entry>
<entry count="8">
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="19">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IResizeScatterPlotViewExtentCommand,</token>
</entry>
<entry count="12">
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="14">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>5.6.0.0]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="10">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IUpgradeMediaFiles,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
</entry>
<entry count="14">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadService,</token>
</entry>
<entry count="2">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IBooleanColorLegendFactory,</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IUpgradeMediaFiles,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.EnableQueryAttribute,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityTypeReference,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmChangedObject,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="2">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Web.Http.Routing.IHttpVirtualPathData,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProcessDownloadDecisions,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.It,Is</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],new</token>
</entry>
<entry count="4">
<token>Presentation]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Exceptions.IExceptionDialog,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.EnableQueryAttribute,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Authentication.SASL.ISaslMechanism,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IEdmEntityObject,</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
</entry>
<entry count="2">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileTableCleanupService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveDialogService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IPrioritizeDownloadDecision,</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionRepository,</token>
</entry>
<entry count="13">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="1">
<token>i:System.Web.Http.OData.IEdmEntityObject,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Query.ODataQueryOptions,</token>
<token>System.Web.OData]],Verify</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="3">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="9">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock,As</token>
<token>Moq.Mock,As</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandBus,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.Routing.IODataPathHandler,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataValue,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Tests_Integration.Utils.ITestShellComponent,</token>
<token>KaVE.RS.Commons.Tests_Integration]],Setup</token>
</entry>
<entry count="8">
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],VerifySet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="11">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
</entry>
<entry count="8">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="48">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Host.IBrowserService,</token>
<token>NzbDrone.Host]],Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IDateTimeColorLegendFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IStringSizeLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientSearchFormView,</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="60">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandBus,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
</entry>
<entry count="10">
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Viewer.IViewerPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>Presentation]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Tests_Integration.Utils.ITestShellComponent,</token>
<token>KaVE.RS.Commons.Tests_Integration]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="11">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="5">
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="26">
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDayAxisGridLineFactory,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IntegerGridLines.IIntegerGridLineFactory,</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
</entry>
<entry count="119">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IFloatColorLegendFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],Verify</token>
</entry>
<entry count="1">
<token>Infrastructure]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
<token>Application]],new</token>
</entry>
<entry count="3">
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IQualityUpgradableSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Presentation.Dialogs.Exceptions.IExceptionDialog,</token>
<token>Presentation]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],Setup</token>
</entry>
<entry count="14">
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],Setup</token>
</entry>
<entry count="10">
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Legend.ILegendPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
</entry>
<entry count="17">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="767">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Host.IBrowserService,</token>
</entry>
<entry count="3">
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="2">
<token>5.6.0.0]],new</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IUpgradeMediaFiles,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
</entry>
<entry count="6">
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IBooleanSizeLegendFactory,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>KaVE.FeedbackProcessor.Intervals.Model.Interval,</token>
<token>KaVE.FeedbackProcessor]],</token>
<token>KaVE.FeedbackProcessor]],Setup</token>
</entry>
<entry count="31">
<token>i:DataExplorer.Application.Core.Commands.ICommandBus,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IParseIndexerResponse,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
</entry>
<entry count="1">
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Raise</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IIntegerColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="19">
<token>Application]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="11">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.IImageResizer,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="11">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomInScatterPlotCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="6">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IFloatColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application]],Setup</token>
</entry>
<entry count="2">
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
</entry>
<entry count="2">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
</entry>
<entry count="5">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.Routing.IODataPathHandler,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmNavigationProperty,</token>
</entry>
<entry count="1">
<token>KaVE.FeedbackProcessor]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
</entry>
<entry count="9">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandLogger,</token>
</entry>
<entry count="3">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryLogger,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.Routing.IODataPathTemplateHandler,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>System.Web.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IXAxisGridLabelRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="3">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomOutScatterPlotCommand,</token>
<token>Presentation]],new</token>
</entry>
<entry count="15">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:System.Web.Http.OData.Routing.IODataPathHandler,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IYearAxisGridLineFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDateTimeGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.Clients.Sabnzbd.ISabnzbdProxy,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Net.Http.Formatting.IContentNegotiator,</token>
<token>System.Net.Http.Formatting,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFile,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IEventLogger,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Property.IPropertyPaneViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveDialogService,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataCollectionDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="7">
<token>6.15.0.0]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="2">
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="1">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock,Get</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IValueScaler,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],Setup</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Generators.Activity.IKaVEMouseEvents,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>6.15.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
</entry>
<entry count="36">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaCover.IImageResizer,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataConventionModelBuilder,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnectionPool,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines.IFloatGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.Services.ISendMoneyTransfer,</token>
<token>Fohjin.DDD.Services]],Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Windows.Input.ICommand,</token>
<token>System,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.DateTimeFilters.IDateTimeFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandLogger,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializer,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
</entry>
<entry count="7">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],new</token>
</entry>
<entry count="42">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="2">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,VerifyAll</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerRequestGenerator,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.CompletionEventFilterLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>?]],SetupGet</token>
<token>Moq.Mock,As</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Host.IBrowserService,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Fohjin.DDD.EventStore.IDomainRepository`1[[TDomainEvent</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.EventStore.IDomainEvent,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>?]],Setup</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="5">
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="31">
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock,As</token>
<token>Moq.Mock,As</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.ObjectUsageExport.IUsageExtractor,</token>
<token>KaVE.Commons]],Setup</token>
</entry>
<entry count="13">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],VerifySet</token>
</entry>
<entry count="26">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.UserControls.TrayNotification.NotifyTrayIcon,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
</entry>
<entry count="22">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualService,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="4">
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IntegerGridLines.IIntegerGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Exceptions.IExceptionDialog,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock,Get</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuredType,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="7">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.StatusBar.IStatusBarViewModel,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
</entry>
<entry count="2">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="17">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:object]],</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookupWindowManager,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
</entry>
<entry count="20">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityContainer,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],SetupGet</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Host.IBrowserService,</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILog,</token>
<token>Application]],Verify</token>
</entry>
<entry count="3">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IYAxisGridLineRenderer,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="4">
<token>i:Microsoft.Data.Edm.IEdmTypeReference,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IBooleanColorLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="3">
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Windows.Input.ICommand,</token>
<token>System,</token>
<token>4.0.0.0]],Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.ILayoutPaneViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:Microsoft.Data.Edm.IEdmFunctionImport,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Profiles.Delay.IDelayProfileService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDayAxisGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:object]],</token>
<token>KaVE.Commons]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandBus,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.EditMenu.IEditMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomOutScatterPlotCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>System.Web.OData]],new</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmNavigationProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="415">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFile,</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IDateTimeColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Infrastructure]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],SetupGet</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="6">
<token>System.Web.Http.Controllers.HttpActionDescriptor,</token>
<token>System.Web.Http,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.Routing.IHttpVirtualPathData,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
</entry>
<entry count="1">
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="21">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
</entry>
<entry count="4">
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
</entry>
<entry count="6">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="8">
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
</entry>
<entry count="7">
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.Activity.IKaVEMouseEvents,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="9">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisher,</token>
</entry>
<entry count="5">
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application]],Setup</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Location.IXAxisLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="52">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IUpgradeMediaFiles,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MetadataSource.IProvideSeriesInfo,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="54">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataConventionModelBuilder,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="23">
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Shape.IShapeLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons]],Setup</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.IExceptionDialogService,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`1[[TContext</token>
<token>-&gt;</token>
<token>p:int]],</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="2">
<token>5.6.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmProperty,</token>
</entry>
<entry count="22">
<token>-&gt;</token>
<token>?]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],SetupGet</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Events.IEventLogger,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="5">
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.Body.ICsvFileImportBodyViewModel,</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmEntityObject,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>System.Threading.SynchronizationContext,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="14">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>i:Fohjin.DDD.BankApplication.Presenters.IPopupPresenter,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="4">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
</entry>
<entry count="3">
<token>i:Microsoft.OData.Edm.IEdmStructuredType,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IXAxisGridLineRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>?]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>i:Couchbase.Views.IDataMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.N1QL.IQueryRequest,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.DecisionEngine.IQualityUpgradableSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="3">
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IEventAggregator,</token>
</entry>
<entry count="5">
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IntegerFilters.IIntegerFilterSerializer,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataFeedSerializer,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="14">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.Services.IReceiveMoneyTransfers,</token>
<token>Fohjin.DDD.Services]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.Location.IXAxisLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="10">
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Location.IYAxisLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataValue,</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IDateTimeSizeLegendFactory,</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualService,</token>
<token>Presentation]],Verify</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuredTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Label.ILabelLayoutViewModel,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.Metadata.ModelMetadataProvider,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.ODataConventionModelBuilder,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IStringSizeLegendFactory,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Sabnzbd.ISabnzbdProxy,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.ObjectUsageExport.IUsageExtractor,</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.IExceptionDialogService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="2">
<token>Presentation]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.IServiceFactory,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="17">
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="2">
<token>System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.EnableQueryAttribute,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Legend.Colors.IColorLegendViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Viewer.IViewerPaneViewModel,</token>
</entry>
<entry count="6">
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
</entry>
<entry count="10">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IProcess,</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataConventionModelBuilder,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
</entry>
<entry count="3">
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor]],Verify</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],Setup</token>
</entry>
<entry count="2">
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IConsoleService,</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application]],Setup</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IIntegerColorLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
</entry>
<entry count="32">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IEventLogger,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookupWindowManager,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuredTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
</entry>
<entry count="2">
<token>i:Couchbase.N1QL.IQueryRequestWithDataMapper,</token>
<token>Couchbase]],SetupProperty</token>
</entry>
<entry count="4">
<token>System.Web.Http.Controllers.HttpActionDescriptor,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IEventAggregator,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IBooleanSizeLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="13">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.Http.OData.Routing.IODataPathHandler,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.IMoveEpisodeFiles,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Geometry.IGeometryCalculator,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="21">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.IMessageBoxCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.IActionExecutor,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
</entry>
<entry count="1">
<token>Fohjin.DDD.BankApplication]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientSearchFormView,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IFloatColorLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="14">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],SetupGet</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.ObjectUsageExport.IUsageExtractor,</token>
<token>KaVE.Commons]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Shell.MainMenu.IMainMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.Navigation.INavigationUtils,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
</entry>
<entry count="18">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
</entry>
<entry count="1">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`1[[TContext</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="3">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.StringFilters.IStringFilterSerializer,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="10">
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
<token>Application]],Setup</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="10">
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.Body.ICsvFileImportBodyViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomOutScatterPlotCommand,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application]],new</token>
</entry>
<entry count="5">
<token>i:System.Web.OData.IEdmEntityObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.StringFilters.IStringFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="4">
<token>5.6.0.0]],new</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Profiles.IProfileRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.BooleanFilters.IBooleanFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="4">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.IExceptionDialogService,</token>
</entry>
<entry count="29">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Setup</token>
</entry>
<entry count="3">
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionRepository,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnectionPool,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
</entry>
<entry count="6">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],Verify</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Exceptions.IExceptionDialog,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="20">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Threading.SynchronizationContext,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],new</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Deserialization.ODataCollectionDeserializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="14">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandLogger,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="5">
<token>i:System.Web.OData.IEdmEntityObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
</entry>
<entry count="2">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Legend.ILegendPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="17">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="9">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Web.Http.Routing.IHttpRoute,</token>
</entry>
<entry count="1">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`1[[TContext</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IBooleanSizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Synology.ISynologyIndexerProxy,</token>
</entry>
<entry count="5">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>KaVE.RS.Commons]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.Rarbg.IRarbgTokenProvider,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotContextMenuViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="7">
<token>Moq.Mock,Get</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IFloatSizeLegendFactory,</token>
</entry>
<entry count="3">
<token>Application]],Setup</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="3">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.IProfileRepository,</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.NavigationTree.INavigationTreeViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
</entry>
<entry count="5">
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="4">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="19">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IStringSizeLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IResizeScatterPlotViewExtentCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>?]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TType]],Setup</token>
<token>Moq.ReturnsExtensions,ReturnsAsync</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>System.Exception,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Setup</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.IActionExecutor,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="2">
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
</entry>
<entry count="9">
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Navigation.NavigationTree.INavigationTreeViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualService,</token>
</entry>
<entry count="1">
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.Bus.IBus,</token>
<token>Fohjin.DDD.Bus]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataConventionModelBuilder,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IEdmEntityObject,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
</entry>
<entry count="11">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
</entry>
<entry count="6">
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IYAxisGridLabelRenderer,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="5">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="3">
<token>KaVE.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.MediaCover.ICoverExistsSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IBooleanSizeLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IYAxisGridLineRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IXAxisTitleRenderer,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.ISelectCommand,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Infrastructure]],new</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
</entry>
<entry count="9">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.Sabnzbd.ISabnzbdProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileRepository,</token>
</entry>
<entry count="2">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="9">
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="5">
<token>6.15.0.0]],new</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="7">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IEventAggregator,</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IProcess,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="7">
<token>i:Microsoft.OData.Edm.IEdmEntityTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>i:Microsoft.Data.Edm.IEdmFunctionImport,</token>
<token>Microsoft.Data.Edm,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="12">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmProperty,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],Verify</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.IImageResizer,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Infrastructure]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.ISecondAxisGridLineFactory,</token>
<token>Application]],Setup</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientSearchFormView,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
</entry>
<entry count="13">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>?]],new</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Verify</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],SetupGet</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IIntegerColorLegendFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Viewer.IViewerPaneViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.QBittorrent.IQBittorrentProxy,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],VerifySet</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.EnableQueryAttribute,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="8">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.EditMenu.IEditMenuViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Link.ILinkLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
</entry>
<entry count="17">
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
</entry>
<entry count="1">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="11">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="5">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataPrimitiveSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>System.Web.OData.EnableQueryAttribute,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenDialogService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="9">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.Footer.ICsvFileImportFooterViewModel,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.StartMenu.IStartMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotContextMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],Setup</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>?]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IYearAxisGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDateTimeGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>i:System.Web.Http.Routing.IHttpRoute,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IEdmEntityObject,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.IProfileRepository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.OData]],SetupAllProperties</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Import.IImportDialogService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDayAxisGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Threading.SynchronizationContext,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Verify</token>
</entry>
<entry count="18">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="7">
<token>KaVE.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="13">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="3">
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="27">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Windows.Input.ICommand,</token>
</entry>
<entry count="6">
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],SetupGet</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Synology.ISynologyIndexerProxy,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="171">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="7">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],SetupAllProperties</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFile,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotContextMenuViewModel,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Legend.Colors.IColorLegendViewModel,</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],new</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IDateTimeColorLegendFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],Verify</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="11">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="7">
<token>i:Microsoft.OData.Edm.IEdmEntityTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.Color.IColorLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandleAsync`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
</entry>
<entry count="1">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`2[[TContext</token>
</entry>
<entry count="48">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
<token>Application]],Setup</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFile,</token>
<token>Infrastructure]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.StatusBar.IStatusBarViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.StringFilters.IStringFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.Routing.IHttpRoute,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadService,</token>
</entry>
<entry count="2">
<token>KaVE.VS.FeedbackGenerator.UserControls.TrayNotification.NotifyTrayIcon,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
</entry>
<entry count="8">
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="18">
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Sabnzbd.ISabnzbdProxy,</token>
</entry>
<entry count="60">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
</entry>
<entry count="3">
<token>i:KaVE.Commons.Utils.IRandomizationUtils,</token>
<token>KaVE.Commons]],Setup</token>
</entry>
<entry count="2">
<token>6.15.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.NullFilters.INullFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="10">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Moq.Mock,Get</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>KaVE.FeedbackProcessor.Intervals.Model.Interval,</token>
<token>KaVE.FeedbackProcessor]],</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.Bus.IBus,</token>
<token>Fohjin.DDD.Bus]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.BooleanGridLines.IBooleanGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],new</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Restrictions.IRestrictionService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IDateTimeSizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.OData]],SetupProperty</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Views.IDataMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskTransferService,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IStringSizeLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="15">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.FileMenu.IFileMenuViewModel,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Geometry.IGeometryCalculator,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>System,</token>
<token>4.0.0.0]],Verify</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],new</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="9">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.IImageResizer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
</entry>
<entry count="3">
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="8">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.IActionExecutor,</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],Setup</token>
</entry>
<entry count="11">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="21">
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="8">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>?]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
</entry>
<entry count="1">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.Formatter.IETagHandler,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>T]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="15">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
</entry>
<entry count="6">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Legend.Colors.IColorLegendViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelCommands,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>5.2.2.0]],new</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="9">
<token>i:Microsoft.OData.Edm.IEdmEntityType,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],SetupGet</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Import.IImportDialogService,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="21">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
</entry>
<entry count="13">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.UserControls.TrayNotification.NotifyTrayIcon,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
</entry>
<entry count="2">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryLogger,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IStringColorLegendFactory,</token>
</entry>
<entry count="2">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmSingleton,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="7">
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="3">
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer,</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadService,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
</entry>
<entry count="2">
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],new</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDayAxisGridLineFactory,</token>
</entry>
<entry count="1">
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
</entry>
<entry count="47">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="9">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="2">
<token>Infrastructure]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.N1QL.IQueryRequestWithDataMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IConsoleService,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IEdmObject,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation,</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFile,</token>
<token>Infrastructure]],new</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmChangedObject,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Shell.MainMenu.ViewMenu.IViewMenuViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IXAxisTitleRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.IImageResizer,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
<token>Presentation]],new</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="9">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="3">
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
</entry>
<entry count="7">
<token>i:Microsoft.OData.Edm.IEdmEntityTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Legend.ILegendPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="18">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IntegerGridLines.IIntegerGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.TorrentRss.ITorrentRssSettingsDetector,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock,GetType</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
</entry>
<entry count="54">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Fohjin.DDD.Bus.IBus,</token>
<token>Fohjin.DDD.Bus]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="2">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],Setup</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ODataModelBuilder,</token>
</entry>
<entry count="7">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.ICoverExistsSpecification,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerRequestGenerator,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="6">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="4">
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IYAxisGridLineRenderer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.IConsoleService,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation]],VerifySet</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Services.IReceiveMoneyTransfers,</token>
<token>Fohjin.DDD.Services]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomOutScatterPlotCommand,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Property.IPropertyPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="2">
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],SetupGet</token>
<token>Moq.Mock,As</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.StringFilters.IStringFilterSerializer,</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IRecycleBinProvider,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.EventStore.IDomainRepository`1[[TDomainEvent</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
</entry>
<entry count="12">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IDateTimeSizeLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.Http.Controllers.HttpActionDescriptor,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="3">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Windows.Input.ICommand,</token>
</entry>
<entry count="3">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IXAxisGridLineRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="2">
<token>System.Web.OData]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.DecisionEngine.IPrioritizeDownloadDecision,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Tests_Integration.Utils.ITestShellComponent,</token>
<token>KaVE.RS.Commons.Tests_Integration]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMoveEpisodeFiles,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Bus.IBus,</token>
<token>Fohjin.DDD.Bus]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons.Tests_Integration]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IntegerFilters.IIntegerFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.FileMenu.IFileMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ComplexTypeConfiguration,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
</entry>
<entry count="4">
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="22">
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],Setup</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.Body.ICsvFileImportBodyViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="9">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="81">
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting]],Setup</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IProcess,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotContextMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.MediaCover.ICoverExistsSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],Setup</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Restrictions.IRestrictionService,</token>
</entry>
<entry count="3">
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="2">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.IArchiveService,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFile,</token>
</entry>
<entry count="92">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMoveEpisodeFiles,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.IMessageBoxCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>System.Web.OData]],new</token>
<token>Moq.Mock,VerifyAll</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="31">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandBus,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.IActionExecutor,</token>
<token>KaVE.RS.Commons]],new</token>
</entry>
<entry count="19">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IYAxisGridLineRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.ObjectUsageExport.IUsageExtractor,</token>
</entry>
<entry count="4">
<token>i:Couchbase.Views.IDataMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.StartMenu.IStartMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
</entry>
<entry count="1">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IRecycleBinProvider,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock,As</token>
<token>Moq.Mock,As</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Collections.IEnumerable,</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IIntegerSizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="8">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Deserialization.ODataPrimitiveDeserializer,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator.UserControls.TrayNotification.NotifyTrayIcon,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="2">
<token>i:System.Web.Http.Routing.IHttpRoute,</token>
<token>System.Web.Http,</token>
</entry>
<entry count="1">
<token>Fohjin.DDD.Bus]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>KaVE.FeedbackProcessor]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="10">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="2">
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.UserProfileExports.UserProfileExportHelper,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IStringColorLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="31">
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],SetupGet</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Size.ISizeLayoutViewModel,</token>
</entry>
<entry count="7">
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,GetType</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,Is</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.CompletionEventFilterLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Property.IPropertyPaneViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="30">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Presenters.IPopupPresenter,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="4">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="9">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>?]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.Controllers.HttpActionDescriptor,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmActionImport,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IIntegerSizeLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
</entry>
<entry count="17">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="7">
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProcessDownloadDecisions,</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomInScatterPlotCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`1[[TContext</token>
<token>-&gt;</token>
<token>p:int]],</token>
</entry>
<entry count="26">
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnectionPool,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="6">
<token>System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="7">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.StringGridLines.IStringGridLineFactory,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="25">
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting]],Verify</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IDateTimeSizeLegendFactory,</token>
</entry>
<entry count="1">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.OData]],SetupProperty</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation]],new</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="2">
<token>5.6.0.0]],new</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadService,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Core.Commands.ICommandLogger,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,GetType</token>
</entry>
<entry count="20">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
</entry>
<entry count="1">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.IProfileRepository,</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.IConnectionPool,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="2">
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer,</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="6">
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="19">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenDialogService,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IXAxisGridLabelRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="13">
<token>Moq.Mock,Get</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation,</token>
<token>System.Web.Http.OData]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>?]],SetupProperty</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],SetupProperty</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.IClipboard,</token>
<token>Application]],Verify</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
</entry>
<entry count="57">
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Blacklisting.IBlacklistRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="8">
<token>Application]],VerifySet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataPrimitiveDeserializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="4">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],SetupGet</token>
</entry>
<entry count="2">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="4">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IProcess,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.UserControls.TrayNotification.NotifyTrayIcon,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>System.Web.Http.Controllers.HttpParameterDescriptor,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IRecycleBinProvider,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IPanScatterPlotCommand,</token>
</entry>
<entry count="11">
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
</entry>
<entry count="4">
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="7">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Viewer.IViewerPaneViewModel,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],new</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomInScatterPlotCommand,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="2">
<token>Presentation]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.DateTimeFilters.IDateTimeFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Verify</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.IImageResizer,</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.NavigationTree.INavigationTreeViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
</entry>
<entry count="13">
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Collections.IEnumerable,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Setup</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Disk.IDiskTransferService,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuredTypeReference,</token>
</entry>
<entry count="1">
<token>System.Web.OData.EnableQueryAttribute,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="13">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Label.ILabelLayoutViewModel,</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="10">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="30">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="4">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityContainer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="10">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor]],Verify</token>
</entry>
<entry count="2">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileTableCleanupService,</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="17">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Color.IColorLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="6">
<token>?]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="11">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
</entry>
<entry count="29">
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],SetupProperty</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],new</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.Rarbg.IRarbgTokenProvider,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.EnableQueryAttribute,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Viewer.IViewerPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:System.Net.Http.Formatting.IFormatterLogger,</token>
<token>System.Net.Http.Formatting,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmNavigationProperty,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IVisualService,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IIntegerColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="13">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="2">
<token>Presentation]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.ICsvFileImportViewModel,</token>
</entry>
<entry count="30">
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Presenters.IPopupPresenter,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
</entry>
<entry count="31">
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IXAxisGridLabelRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>System.Web.OData]],new</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="6">
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IEdmObject,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="3">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProcessDownloadDecisions,</token>
</entry>
<entry count="4">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmProperty,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>System.Exception,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.ICsvFileImportViewModel,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Navigation.INavigationPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterPaneViewModel,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDayAxisGridLineFactory,</token>
<token>Application]],Setup</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Net.Http.Formatting.IContentNegotiator,</token>
<token>System.Net.Http.Formatting,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IValueScaler,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.ISelectCommand,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuredTypeReference,</token>
</entry>
<entry count="2">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
</entry>
<entry count="13">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],VerifySet</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmNavigationProperty,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IParseIndexerResponse,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Couchbase.Core.Serialization.DefaultSerializer,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>?]],Verify</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IEdmEntityObject,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.VisualStudio.IFocusHelper,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
</entry>
<entry count="1">
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
</entry>
<entry count="10">
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="15">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="12">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IProcess,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataFeedSerializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataPrimitiveDeserializer,</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.ViewMenu.IViewMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IBooleanColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IDelta,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
</entry>
<entry count="24">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDayAxisGridLineFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProcessDownloadDecisions,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>?]],new</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="26">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Presenters.IPopupPresenter,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.Routing.IODataPathTemplateHandler,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
</entry>
<entry count="45">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
</entry>
<entry count="12">
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="14">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="3">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Events.IEventLogger,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],new</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="7">
<token>i:DataExplorer.Application.Core.Logs.ILogProvider,</token>
<token>Application]],Verify</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IEventLogger,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Importers.CsvFile.Header.ICsvFileImportHeaderViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.Body.ICsvFileImportBodyViewModel,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IAccountDetailsView,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.Size.ISizeLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.StringFilters.IStringFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.IMainMenuViewModel,</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.FloatFilters.IFloatFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="32">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.ICsvFileImportViewModel,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnectionPool,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.INamingConfigService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.IConsoleService,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IEventLogger,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="35">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
</entry>
<entry count="1">
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:KaVE.RS.Commons.Utils.IPublisher,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Windows.Input.ICommand,</token>
<token>System,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="18">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="2">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IYearAxisGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="60">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],new</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Couchbase.Core.Serialization.DefaultSerializer,</token>
</entry>
<entry count="2">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
</entry>
<entry count="4">
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IYearAxisGridLineFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>?]],SetupGet</token>
<token>Moq.Mock,As</token>
</entry>
<entry count="3">
<token>i:Fohjin.DDD.EventStore.IDomainRepository`1[[TDomainEvent</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.EventStore.IDomainEvent,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="92">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IParseIndexerResponse,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,GetType</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="8">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="4">
<token>Application]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IDateTimeSizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="2">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Size.ISizeLayoutViewModel,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Blacklisting.IBlacklistRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:System.Web.Http.OData.IDelta,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="60">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Size.ISizeLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Navigation.StartMenu.IStartMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="19">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookupWindowManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelCommands,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="3">
<token>System.Web.Http.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Couchbase.Core.Serialization.DefaultSerializer,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.ImageFilters.IImageFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.IProfileRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:System.Web.OData.IDelta,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="4">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="5">
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],VerifySet</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],new</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Indexers.Newznab.INewznabCapabilitiesProvider,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IProcess,</token>
</entry>
<entry count="21">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`2[[TContext</token>
<token>-&gt;</token>
<token>p:int],[TReturn</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],Verify</token>
</entry>
<entry count="9">
<token>Application]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.ILayoutPaneViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.DateTimeFilters.IDateTimeFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Navigation.StartMenu.IStartMenuViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="13">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="22">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Viewer.IViewerPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],SetupGet</token>
<token>Moq.Mock,As</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IEventAggregator,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.IActionExecutor,</token>
<token>KaVE.RS.Commons]],Verify</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],Setup</token>
</entry>
<entry count="20">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application]],Setup</token>
</entry>
<entry count="4">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="6">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.ICanvasToBitmapExporter,</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
</entry>
<entry count="2">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>TEdmTypeConfiguration]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IValueScaler,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="12">
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Exceptions.IExceptionDialog,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,VerifyAll</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotFactory,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IYAxisGridLabelRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="2">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
</entry>
<entry count="2">
<token>5.2.2.0]],new</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmEntityObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="19">
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
</entry>
<entry count="2">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="3">
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MetadataSource.IProvideSeriesInfo,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataCollectionDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="5">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="3">
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="3">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
</entry>
<entry count="10">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],VerifySet</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],Verify</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="5">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ODataModelBuilder,</token>
</entry>
<entry count="13">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],Verify</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.IImageResizer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveDialogService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IYearAxisGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IYAxisGridLabelRenderer,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:System.Web.OData.IEdmChangedObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IMinMaxDateTimeAxisGridLineFactory,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="27">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Navigation.INavigationPaneViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.Header.ICsvFileImportHeaderViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:Fohjin.DDD.EventStore.IDomainRepository`1[[TDomainEvent</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenDialogService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Property.IPropertyPaneViewModel,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Geometry.IGeometryCalculator,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
</entry>
<entry count="13">
<token>Moq.Mock,Get</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Infrastructure]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>6.15.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="6">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataPrimitiveDeserializer,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.Services.ISendMoneyTransfer,</token>
<token>Fohjin.DDD.Services]],Setup</token>
</entry>
<entry count="75">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
</entry>
<entry count="2">
<token>System.Web.OData]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="18">
<token>-&gt;</token>
<token>?]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="63">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],SetupAllProperties</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Clipboard.IClipboard,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.OData.Query.Validators.SelectExpandQueryValidator,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="16">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="10">
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Core.Logs.ILogFile,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="3">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
</entry>
<entry count="4">
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="5">
<token>KaVE.RS.Commons]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="16">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
</entry>
<entry count="1">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.VisualStudio.IFocusHelper,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Net.Http.Formatting.IFormatterLogger,</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application]],Setup</token>
</entry>
<entry count="2">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.StatusBar.IStatusBarViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="8">
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
</entry>
<entry count="38">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.ISelectCommand,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandLogger,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.ISecondAxisGridLineFactory,</token>
<token>Application]],Setup</token>
</entry>
<entry count="4">
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Restrictions.IRestrictionService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.Color.IColorLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock,Get</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
</entry>
<entry count="4">
<token>i:Microsoft.Data.Edm.IEdmTypeReference,</token>
<token>Microsoft.Data.Edm,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IXAxisGridLineRenderer,</token>
</entry>
<entry count="5">
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IXAxisGridLineRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Shape.IShapeLayoutViewModel,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Import.IImportDialogService,</token>
</entry>
<entry count="13">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.ISelectCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],SetupGet</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IYearAxisGridLineFactory,</token>
<token>Application]],Setup</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProcessDownloadDecisions,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.EditMenu.IEditMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="2">
<token>System.Web.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="19">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>?]],new</token>
<token>Moq.Mock,As</token>
<token>Moq.Mock,As</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.HelpMenu.IHelpMenuViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="3">
<token>Moq.Mock,As</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Collections.IEnumerable,</token>
<token>mscorlib,</token>
</entry>
<entry count="6">
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="1">
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],new</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataPrimitiveSerializer,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="6">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Exception,</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Exception,</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IYearAxisGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.ISelectCommand,</token>
</entry>
<entry count="16">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="2">
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Net.Http.Formatting.IContentNegotiator,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Label.ILabelLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="9">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILog,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.EditMenu.IEditMenuViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IIntegerColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="15">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>p:int],[TReturn</token>
<token>-&gt;</token>
<token>p:object]],</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="2">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.EnableQueryAttribute,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock,As</token>
<token>Moq.Mock,As</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.Controllers.HttpActionDescriptor,</token>
<token>System.Web.Http,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.IConsoleService,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.QBittorrent.IQBittorrentProxy,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],new</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.IClipboard,</token>
<token>Application]],new</token>
</entry>
<entry count="14">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IPanScatterPlotCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Shell.MainMenu.IMainMenuViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenDialogService,</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmNavigationProperty,</token>
<token>Microsoft.Data.Edm,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="8">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="8">
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Colors.IColorPaletteFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="2">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],SetupGet</token>
<token>Moq.Mock,As</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Serialization.ODataDeltaFeedSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="21">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
</entry>
<entry count="1">
<token>System.Web.OData.EnableQueryAttribute,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IXAxisTitleRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
</entry>
<entry count="5">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.Shape.IShapeLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Colors.IColorPaletteFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IntegerGridLines.IIntegerGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="19">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="5">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataValue,</token>
</entry>
<entry count="5">
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.IImageResizer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IPanScatterPlotCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:Microsoft.OData.Edm.IEdmActionImport,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Intervals.Model.Interval,</token>
<token>KaVE.FeedbackProcessor]],</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.Delay.IDelayProfileService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.StringGridLines.IStringGridLineFactory,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomInScatterPlotCommand,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.Body.ICsvFileImportBodyViewModel,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Domain.Colors.IColorPaletteFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Colors.IColorPaletteFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IXAxisGridLabelRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Tests_Integration.Utils.ITestShellComponent,</token>
<token>KaVE.RS.Commons.Tests_Integration]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.Formatter.IETagHandler,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.EnableQueryAttribute,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
</entry>
<entry count="6">
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:Couchbase.Views.IDataMapper,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.N1QL.IQueryRequestWithDataMapper,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Microsoft.OData.Core.ODataValue,</token>
<token>Microsoft.OData.Core,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataPrimitiveDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Legend.ILegendPaneViewModel,</token>
</entry>
<entry count="2">
<token>KaVE.RS.SolutionAnalysis.UserProfileExports.UserProfileExportHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="3">
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
<token>Application]],Setup</token>
</entry>
<entry count="6">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Sabnzbd.ISabnzbdProxy,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataConventionModelBuilder,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.OData.Query.ODataQueryOptions,</token>
<token>System.Web.OData]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>?]],Raise</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Raise</token>
</entry>
<entry count="2">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IYAxisGridLabelRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFile,</token>
<token>Application]],new</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="10">
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="11">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.EnableQueryAttribute,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,Is</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Profiles.Delay.IDelayProfileService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
</entry>
<entry count="2">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnectionPool,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IDateTimeSizeLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IBooleanSizeLegendFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
</entry>
<entry count="9">
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.BooleanFilters.IBooleanFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>6.15.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="20">
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.Controllers.HttpParameterDescriptor,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmTypeReference,</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="10">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.IMessageBoxCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="83">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.ISecondAxisGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandLogger,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="6">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
</entry>
<entry count="2">
<token>i:Couchbase.N1QL.IQueryRequestWithDataMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="8">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Verify</token>
</entry>
<entry count="5">
<token>KaVE.RS.SolutionAnalysis.CompletionEventFilterLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],Verify</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataValue,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Bus.IBus,</token>
<token>Fohjin.DDD.Bus]],Verify</token>
</entry>
<entry count="1">
<token>i:Microsoft.OData.Edm.IEdmSingleton,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="14">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataCollectionDeserializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.BooleanGridLines.IBooleanGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogProvider,</token>
<token>Application]],Verify</token>
</entry>
<entry count="43">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="3">
<token>Moq.It,Is</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IYAxisGridLineRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],Verify</token>
</entry>
<entry count="2">
<token>?]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.ILayoutPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IValueScaler,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Deserialization.ODataPrimitiveDeserializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.UserControls.TrayNotification.NotifyTrayIcon,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>?]],Raise</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Raise</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.IActionExecutor,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="107">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="5">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.ICoverExistsSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IIntegerSizeLegendFactory,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="21">
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer,</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.BankApplication.Views.IAccountDetailsView,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IStringSizeLegendFactory,</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadService,</token>
</entry>
<entry count="11">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>T]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
</entry>
<entry count="4">
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MetadataSource.IProvideSeriesInfo,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Exceptions.IExceptionDialog,</token>
<token>Presentation]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.Services.IReceiveMoneyTransfers,</token>
<token>Fohjin.DDD.Services]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="8">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.Activity.IKaVEMouseEvents,</token>
</entry>
<entry count="38">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="13">
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Synology.ISynologyIndexerProxy,</token>
</entry>
<entry count="3">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
</entry>
<entry count="7">
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.DateTimeFilters.IDateTimeFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.ICanvasToBitmapExporter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializer,</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmNavigationProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="11">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.UTorrent.IUTorrentProxy,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer,</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.ISecondAxisGridLineFactory,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataDeltaFeedSerializer,</token>
</entry>
<entry count="4">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IDownloadService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Label.ILabelLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator.UserControls.TrayNotification.NotifyTrayIcon,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.UserControls.TrayNotification.NotifyTrayIcon,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IIntegerColorLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IFloatSizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IIntegerSizeLegendFactory,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,GetType</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.Sabnzbd.ISabnzbdProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="6">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Shape.IShapeLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>?]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="4">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDateTimeGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnectionPool,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Net.Http.Formatting.MediaTypeFormatter,</token>
<token>System.Net.Http.Formatting,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataValue,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataModelBuilder,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
</entry>
<entry count="2">
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.Routing.IHttpVirtualPathData,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.Metadata.ModelMetadataProvider,</token>
<token>System.Web.Http,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuredTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="39">
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="2">
<token>System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="8">
<token>System.Web.Http.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Fohjin.DDD.BankApplication]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientSearchFormView,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.NullFilters.INullFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.Http.Controllers.HttpActionDescriptor,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],VerifySet</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock,As</token>
</entry>
<entry count="1">
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Threading.SynchronizationContext,</token>
<token>mscorlib,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Host.IBrowserService,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>T]],Setup</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
</entry>
<entry count="16">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmActionImport,</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogProvider,</token>
</entry>
<entry count="3">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="1">
<token>Infrastructure]],new</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="89">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
</entry>
<entry count="2">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
</entry>
<entry count="1">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],SetupProperty</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="13">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
</entry>
<entry count="3">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="1">
<token>System.Web.OData]],new</token>
<token>Moq.Mock,GetType</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:System.Web.Http.OData.Routing.IODataPathHandler,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
</entry>
<entry count="1">
<token>4.0.0.0]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Import.IImportDialogService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.UserControls.TrayNotification.NotifyTrayIcon,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="8">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Net.Http.Formatting.MediaTypeFormatter,</token>
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="5">
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],new</token>
</entry>
<entry count="20">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuredTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerRequestGenerator,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],new</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
</entry>
<entry count="4">
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],SetupGet</token>
</entry>
<entry count="3">
<token>i:Microsoft.OData.Edm.IEdmTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="2">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.N1QL.IQueryRequestWithDataMapper,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IFloatSizeLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="21">
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.UserProfileExports.UserProfileExportHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IntegerFilters.IIntegerFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IStringSizeLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
</entry>
<entry count="2">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataModelBuilder,</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],SetupGet</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.Services.IReceiveMoneyTransfers,</token>
<token>Fohjin.DDD.Services]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmNavigationProperty,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="28">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IYAxisTitleRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="6">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
</entry>
<entry count="2">
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="7">
<token>6.15.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDateTimeGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines.IFloatGridLineFactory,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IEdmObject,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
<token>KaVE.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.IActionExecutor,</token>
</entry>
<entry count="1">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IStringColorLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomInScatterPlotCommand,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomOutScatterPlotCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IPanScatterPlotCommand,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="7">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="8">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.UserProfileExports.UserProfileExportHelper,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="10">
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:int]],</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="2">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="30">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Presenters.IPopupPresenter,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.Http.OData]],Verify</token>
</entry>
<entry count="5">
<token>5.6.0.0]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IValueScaler,</token>
<token>Presentation]],new</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Host.IBrowserService,</token>
<token>NzbDrone.Host]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="2">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
</entry>
<entry count="3">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="103">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Synology.ISynologyIndexerProxy,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmEntityContainer,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="7">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IXAxisGridLabelRenderer,</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.Metadata.ModelMetadataProvider,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines.IFloatGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="12">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
</entry>
<entry count="9">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.MediaFiles.IRecycleBinProvider,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="6">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
</entry>
<entry count="9">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.ICanvasToBitmapExporter,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="39">
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.IClipboard,</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.TorrentRss.ITorrentRssSettingsDetector,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Tests_Integration.Utils.ITestShellComponent,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.Authentication.SASL.ISaslMechanism,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IIntegerSizeLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="3">
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterPaneViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Update.UpdateEngine.IInstallUpdateService,</token>
<token>NzbDrone.Update]],Verify</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],SetupGet</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Legend.Colors.IColorLegendViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>Moq.Mock,As</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Exception,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="4">
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.DateTimeFilters.IDateTimeFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.MediaFiles.IUpgradeMediaFiles,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
</entry>
<entry count="29">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandBus,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="8">
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application]],Setup</token>
</entry>
<entry count="13">
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.Services.ISendMoneyTransfer,</token>
<token>Fohjin.DDD.Services]],Verify</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="16">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="21">
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>?]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Sabnzbd.ISabnzbdProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="767">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="3">
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveDialogService,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="10">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="2">
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`2[[TContext</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmNavigationProperty,</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
</entry>
<entry count="3">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventLogger,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Raise</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveDialogService,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>i:System.Net.Http.Formatting.IFormatterLogger,</token>
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="19">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Verify</token>
</entry>
<entry count="7">
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Net.Http.Formatting.IContentNegotiator,</token>
<token>System.Net.Http.Formatting,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IProcess,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataFeedSerializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="6">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Importers.CsvFile.Footer.ICsvFileImportFooterViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:System.Net.Http.Formatting.IFormatterLogger,</token>
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IntegerFilters.IIntegerFilterSerializer,</token>
</entry>
<entry count="6">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.ISecondAxisGridLineFactory,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.DateTimeFilters.IDateTimeFilterSerializer,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Host.INzbDroneServiceFactory,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenDialogService,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="10">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataPrimitiveSerializer,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="16">
<token>Moq.Mock,Of</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock,Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualService,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IDateTimeSizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IFloatSizeLegendFactory,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>System.Threading.SynchronizationContext,</token>
<token>mscorlib,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IFloatColorLegendFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IMinMaxDateTimeAxisGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFile,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileRepository,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataPrimitiveSerializer,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IEventAggregator,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="4">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="17">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="11">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],new</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],Setup</token>
</entry>
<entry count="3">
<token>System.Web.OData]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.Formatter.IETagHandler,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="7">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.FloatFilters.IFloatFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],new</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="26">
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Query.ODataQueryOptions,</token>
<token>System.Web.Http.OData]],Verify</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmNavigationProperty,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileTableCleanupService,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IPrioritizeDownloadDecision,</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IStringColorLegendFactory,</token>
</entry>
<entry count="17">
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
<token>KaVE.Commons]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmSingleton,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientSearchFormView,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="18">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="23">
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.UserControls.TrayNotification.NotifyTrayIcon,</token>
</entry>
<entry count="2">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],new</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDayAxisGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.DateTimeFilters.IDateTimeFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Download.Clients.Sabnzbd.ISabnzbdProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
</entry>
<entry count="3">
<token>i:System.Collections.IEnumerable,</token>
<token>mscorlib,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IIntegerSizeLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IDateTimeColorLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],Verify</token>
</entry>
<entry count="9">
<token>Application]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Microsoft.OData.Core.ODataValue,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Profiles.Delay.IDelayProfileService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IntegerGridLines.IIntegerGridLineFactory,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
<token>Presentation]],new</token>
</entry>
<entry count="4">
<token>Couchbase]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],SetupGet</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Microsoft.OData.Edm.Library.EdmModel,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Messaging.Events.IHandleAsync`1[[TEvent</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="1">
<token>p:object]],</token>
<token>KaVE.Commons]],Setup</token>
</entry>
<entry count="1">
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="2">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualService,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="4">
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="130">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IBooleanColorLegendFactory,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Presenters.IPopupPresenter,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataValue,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IParseIndexerResponse,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Web.Http.OData.Routing.IODataPathHandler,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation,</token>
</entry>
<entry count="7">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityType,</token>
</entry>
<entry count="24">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IFloatSizeLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="5">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="10">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Host.IBrowserService,</token>
</entry>
<entry count="2">
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IVisualService,</token>
<token>Presentation]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualService,</token>
</entry>
<entry count="1">
<token>i:Microsoft.OData.Edm.IEdmProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
</entry>
<entry count="9">
<token>i:Microsoft.OData.Edm.IEdmEntityType,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.StatusBar.IStatusBarViewModel,</token>
</entry>
<entry count="2">
<token>System.Web.Http.Controllers.HttpParameterDescriptor,</token>
<token>System.Web.Http,</token>
</entry>
<entry count="8">
<token>KaVE.RS.SolutionAnalysis.UserProfileExports.UserProfileExportHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.Footer.ICsvFileImportFooterViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:System.Web.OData.IDelta,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>Microsoft.Data.OData.ODataValue,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="11">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Tests_Integration.Utils.ITestShellComponent,</token>
<token>KaVE.RS.Commons.Tests_Integration]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Tests_Integration.Utils.ITestShellComponent,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IXAxisTitleRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons]],Setup</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataFeedSerializer,</token>
</entry>
<entry count="6">
<token>6.15.0.0]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IIntegerSizeLegendFactory,</token>
</entry>
<entry count="2">
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenDialogService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IPanScatterPlotCommand,</token>
<token>Presentation]],new</token>
</entry>
<entry count="8">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IFloatSizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="22">
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.StringGridLines.IStringGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmSingleton,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="10">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileTableCleanupService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:System.Web.OData.Routing.IODataPathTemplateHandler,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="10">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Exception,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
</entry>
<entry count="5">
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="20">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="16">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IIntegerColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="22">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryLogger,</token>
<token>Application]],new</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IFloatColorLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.EnableQueryAttribute,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.Controllers.HttpActionDescriptor,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],SetupGet</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotContextMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
</entry>
<entry count="3187">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
</entry>
<entry count="2">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
</entry>
<entry count="1">
<token>Presentation]],VerifySet</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Legend.ILegendPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Property.IPropertyPaneViewModel,</token>
</entry>
<entry count="2">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Update.UpdateEngine.IInstallUpdateService,</token>
</entry>
<entry count="131">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="31">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Threading.SynchronizationContext,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application]],Setup</token>
</entry>
<entry count="8">
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.ICoverExistsSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IIntegerColorLegendFactory,</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="17">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Legend.Sizes.ISizeLegendViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.IMoveEpisodeFiles,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:System.Web.Http.OData.IEdmObject,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="1">
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.OData.EnableQueryAttribute,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IRecycleBinProvider,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IEdmEntityObject,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogProvider,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Legend.ILegendPaneViewModel,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IResizeScatterPlotViewExtentCommand,</token>
</entry>
<entry count="17">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="2">
<token>?]],Verify</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Verify</token>
</entry>
<entry count="10">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Generators.IEventLogger,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.INamingConfigService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="6">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
</entry>
<entry count="15">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IEventAggregator,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="42">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="1">
<token>i:System.Web.OData.IEdmObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
</entry>
<entry count="9">
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.IMessageBoxCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Import.IImportDialogService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="10">
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IEdmObject,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>i:System.Web.Http.Routing.IHttpRoute,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.ObjectUsageExport.IUsageExtractor,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.Header.ICsvFileImportHeaderViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IValueScaler,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataValue,</token>
<token>Microsoft.OData.Core,</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmObject,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMoveEpisodeFiles,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="6">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],SetupGet</token>
</entry>
<entry count="1">
<token>System.Web.OData]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="2">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
</entry>
<entry count="3">
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor]],Verify</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.BooleanFilters.IBooleanFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>?]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IProcess,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="16">
<token>System.Web.Http.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Geometry.IGeometryCalculator,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuredType,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.NavigationTree.INavigationTreeViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
</entry>
<entry count="6">
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.ImageFilters.IImageFilterSerializer,</token>
</entry>
<entry count="35">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Services.ISendMoneyTransfer,</token>
<token>Fohjin.DDD.Services]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.ImageFilters.IImageFilterSerializer,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="2">
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>5.6.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],SetupGet</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Property.IPropertyPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation,</token>
<token>System.Web.OData]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.Activity.IKaVEMouseEvents,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>Fohjin.DDD.Services]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="415">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="5">
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="52">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveDialogService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.IExceptionDialogService,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.Controllers.HttpActionDescriptor,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="10">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="17">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="18">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.BooleanFilters.IBooleanFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.DateTimeFilters.IDateTimeFilterSerializer,</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmStructuredTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsInRange</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisher,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="6">
<token>Couchbase]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.StringGridLines.IStringGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],VerifySet</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.Size.ISizeLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Shape.IShapeLayoutViewModel,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Intervals.Model.Interval,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.EnableQueryAttribute,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>System.Web.OData]],new</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Query.Validators.SelectExpandQueryValidator,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataValue,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="1">
<token>TType]],Setup</token>
<token>Moq.ReturnsExtensions,ReturnsAsync</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenDialogService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Blacklisting.IBlacklistRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnectionPool,</token>
</entry>
<entry count="159">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="11">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Shell.MainMenu.FileMenu.IFileMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="2">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="8">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Tests_Integration.Utils.ITestShellComponent,</token>
<token>KaVE.RS.Commons.Tests_Integration]],new</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],VerifySet</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
</entry>
<entry count="111">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileTableCleanupService,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.IActionExecutor,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisher,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="19">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomInScatterPlotCommand,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataPrimitiveDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>5.6.0.0]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>4.0.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],SetupGet</token>
</entry>
<entry count="7">
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:KaVE.VS.FeedbackGenerator.Generators.Navigation.INavigationUtils,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnectionPool,</token>
</entry>
<entry count="5">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Clipboard.IClipboard,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IEdmEntityObject,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="8">
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IFloatColorLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="3">
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Net.Http.Formatting.IContentNegotiator,</token>
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation,</token>
<token>System.Web.Http.OData]],Verify</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IIntegerSizeLegendFactory,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityContainer,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Threading.SynchronizationContext,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Verify</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],new</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="19">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="26">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
</entry>
<entry count="20">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.Navigation.INavigationUtils,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IDateTimeColorLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmTypeReference,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>TType]],Setup</token>
<token>Moq.ReturnsExtensions,ReturnsAsync</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenDialogService,</token>
<token>Application]],new</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],SetupGet</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
<token>KaVE.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="14">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:System.Web.OData.IEdmEntityObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="242">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="6">
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Edm.Library.EdmModel,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IBooleanSizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IIntegerColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IStringColorLegendFactory,</token>
</entry>
<entry count="68">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
</entry>
<entry count="2">
<token>KaVE.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
</entry>
<entry count="48">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:int]],</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.EnableQueryAttribute,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.Formatter.IETagHandler,</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator.UserControls.TrayNotification.NotifyTrayIcon,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="16">
<token>-&gt;</token>
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IXAxisGridLineRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.Label.ILabelLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientSearchFormView,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IPanScatterPlotCommand,</token>
<token>Presentation]],new</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.UTorrent.IUTorrentProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
</entry>
<entry count="5">
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ComplexTypeConfiguration,</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
</entry>
<entry count="18">
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:System.Web.Http.OData.IEdmEntityObject,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.ILayoutPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Infrastructure]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
</entry>
<entry count="4">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],Setup</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Label.ILabelLayoutViewModel,</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Notifications.Synology.ISynologyIndexerProxy,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmComplexObject,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IntegerFilters.IIntegerFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="1">
<token>Presentation]],VerifySet</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.ICoverExistsSpecification,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.Link.ILinkLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],VerifySet</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.BooleanGridLines.IBooleanGridLineFactory,</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="4">
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:System.Web.OData.IEdmObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="2">
<token>i:System.Net.Http.Formatting.IContentNegotiator,</token>
<token>System.Net.Http.Formatting,</token>
</entry>
<entry count="2">
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IConsoleService,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Edm.Library.EdmModel,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="4">
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Net.Http.Formatting.MediaTypeFormatter,</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeRepository,</token>
</entry>
<entry count="7">
<token>i:Microsoft.OData.Edm.IEdmModel,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="17">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.UserControls.TrayNotification.NotifyTrayIcon,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
</entry>
<entry count="3">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],new</token>
</entry>
<entry count="18">
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Raise</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="38">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="45">
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.Delay.IDelayProfileService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.ICanvasToBitmapExporter,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
</entry>
<entry count="72">
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.Routing.IHttpVirtualPathData,</token>
<token>System.Web.Http,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IYAxisGridLineRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataCollectionDeserializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="4">
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],Verify</token>
</entry>
<entry count="8">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDayAxisGridLineFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotContextMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
</entry>
<entry count="8">
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IUpgradeMediaFiles,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.IMessageBoxCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="5">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Exceptions.IExceptionDialog,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
</entry>
<entry count="3">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
</entry>
<entry count="2">
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Colors.IColorPaletteFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:object]],</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Download.Clients.QBittorrent.IQBittorrentProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="5">
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="13">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],new</token>
</entry>
<entry count="4">
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeRepository,</token>
</entry>
<entry count="30">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Presenters.IPopupPresenter,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualService,</token>
</entry>
<entry count="2">
<token>Infrastructure]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.NavigationTree.INavigationTreeViewModel,</token>
</entry>
<entry count="2">
<token>6.15.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
</entry>
<entry count="2">
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmChangedObject,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Exception,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Setup</token>
</entry>
<entry count="6">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],new</token>
</entry>
<entry count="3">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="1">
<token>Fohjin.DDD.Bus]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Blacklisting.IBlacklistRepository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandleAsync`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
</entry>
<entry count="1">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Property.IPropertyPaneViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmTypeReference,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.Services.IReceiveMoneyTransfers,</token>
<token>Fohjin.DDD.Services]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Importers.CsvFile.Body.ICsvFileImportBodyViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Edm.Library.EdmModel,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
</entry>
<entry count="24">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntityTypeConfiguration,</token>
</entry>
<entry count="1">
<token>p:object]],</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IDelta,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="17">
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmModel,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>Moq.Mock,Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="11">
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
</entry>
<entry count="7">
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Core.Commands.ICommandBus,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.Body.ICsvFileImportBodyViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
</entry>
<entry count="10">
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.EventStore.IDomainRepository`1[[TDomainEvent</token>
</entry>
<entry count="1">
<token>Moq.Mock,Get</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock,Get</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="2">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Query.ODataQueryOptions,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Sabnzbd.ISabnzbdProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDayAxisGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.IMoveEpisodeFiles,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Color.IColorLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Generators.Activity.IKaVEMouseEvents,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookupWindowManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataValue,</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryLogger,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
</entry>
<entry count="159">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
</entry>
<entry count="2">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmObject,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Tests_Integration.Utils.ITestShellComponent,</token>
<token>KaVE.RS.Commons.Tests_Integration]],new</token>
</entry>
<entry count="1">
<token>p:int],[TReturn</token>
<token>-&gt;</token>
<token>p:object]],</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="4">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.ViewMenu.IViewMenuViewModel,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IYAxisGridLabelRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="4">
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.EnableQueryAttribute,</token>
</entry>
<entry count="54">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="26">
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application]],Setup</token>
</entry>
<entry count="2">
<token>i:Couchbase.Authentication.SASL.ISaslMechanism,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Host.INzbDroneServiceFactory,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Fohjin.DDD.Services.IReceiveMoneyTransfers,</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogProvider,</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsInRange</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Navigation.NavigationTree.INavigationTreeViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>KaVE.FeedbackProcessor]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>KaVE.FeedbackProcessor]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="26">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Couchbase]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuredType,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.ICoverExistsSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="17">
<token>Moq.Mock,Of</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>System.Threading.SynchronizationContext,</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IDateTimeSizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
</entry>
<entry count="3">
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="6">
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
</entry>
<entry count="2">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.OData]],Verify</token>
</entry>
<entry count="32">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="30">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Color.IColorLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="8">
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IIntegerSizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>System.Net.Http.Formatting.MediaTypeFormatter,</token>
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>T]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Location.IYAxisLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Services.IReceiveMoneyTransfers,</token>
<token>Fohjin.DDD.Services]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>System.Web.OData]],SetupAllProperties</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],SetupGet</token>
</entry>
<entry count="1">
<token>Fohjin.DDD.Bus]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application]],Setup</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFile,</token>
<token>Infrastructure]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.N1QL.IQueryRequest,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="3">
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuredType,</token>
</entry>
<entry count="6">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],new</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskTransferService,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.ILayoutPaneViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="8">
<token>Application]],VerifySet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.OData]],SetupProperty</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializer,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataPrimitiveSerializer,</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IStringColorLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.HelpMenu.IHelpMenuViewModel,</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IArchiveService,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="12">
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="2">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
</entry>
<entry count="13">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="25">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="2">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="49">
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock,Get</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
</entry>
<entry count="3">
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IPanScatterPlotCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Windows.Input.ICommand,</token>
<token>System,</token>
<token>4.0.0.0]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmSingleton,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.ICanvasToBitmapExporter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="171">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,GetType</token>
</entry>
<entry count="3">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="28">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="18">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
</entry>
<entry count="1">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityTypeReference,</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons.Tests_Integration]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Tests_Integration.Utils.ITestShellComponent,</token>
</entry>
<entry count="5">
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="4">
<token>i:Couchbase.Views.IDataMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="9">
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Web.Http.Controllers.HttpActionDescriptor,</token>
<token>System.Web.Http,</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Query.ODataQueryOptions,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IDateTimeSizeLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="13">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmModel,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="10">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="9">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
</entry>
<entry count="1">
<token>i:System.Web.OData.IEdmComplexObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
</entry>
<entry count="4">
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IXAxisGridLineRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.BooleanGridLines.IBooleanGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataPrimitiveSerializer,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.OData.EnableQueryAttribute,</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmEntityObject,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IPrioritizeDownloadDecision,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="3">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmNavigationProperty,</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandBus,</token>
<token>Application]],Verify</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="26">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IYAxisTitleRenderer,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="14">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IResizeScatterPlotViewExtentCommand,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
</entry>
<entry count="7">
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="12">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Update.UpdateEngine.IInstallUpdateService,</token>
<token>NzbDrone.Update]],Verify</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Setup</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="12">
<token>Moq.Mock,Get</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.IActionExecutor,</token>
<token>KaVE.RS.Commons]],Verify</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.ODataConventionModelBuilder,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IDateTimeSizeLegendFactory,</token>
</entry>
<entry count="5">
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.IExceptionDialogService,</token>
<token>Application]],new</token>
</entry>
<entry count="4">
<token>KaVE.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.QBittorrent.IQBittorrentProxy,</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="10">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="10">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
</entry>
<entry count="18">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IValueScaler,</token>
<token>Presentation]],new</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="119">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>?]],SetupProperty</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="26">
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],SetupAllProperties</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.Formatter.IETagHandler,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventLogger,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.StatusBar.IStatusBarViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
</entry>
<entry count="7">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="6">
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="16">
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="21">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
<token>Application]],new</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.IExceptionDialogService,</token>
</entry>
<entry count="8">
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],VerifySet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="8">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Legend.Colors.IColorLegendViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="3">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IBooleanSizeLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
</entry>
<entry count="2">
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFile,</token>
</entry>
<entry count="6">
<token>i:Microsoft.OData.Edm.IEdmNavigationProperty,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmEntityObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],SetupProperty</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
</entry>
<entry count="2">
<token>6.15.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.IConnectionPool,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IIntegerColorLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Tv.IEpisodeRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmTypeReference,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IBooleanSizeLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="4">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>i:Couchbase.Authentication.SASL.ISaslMechanism,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuredTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Query.ODataQueryOptions,</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmStructuredTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IEdmObject,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDayAxisGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="34">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="3">
<token>i:KaVE.RS.Commons.Utils.IPublisher,</token>
<token>KaVE.RS.Commons]],Setup</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
</entry>
<entry count="5">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>Microsoft.Data.OData.ODataValue,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="21">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
</entry>
<entry count="6">
<token>?]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application]],new</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.ILayoutPaneViewModel,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveDialogService,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IFloatColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IIntegerColorLegendFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IMinMaxDateTimeAxisGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IYearAxisGridLineFactory,</token>
</entry>
<entry count="1">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.Formatter.IETagHandler,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Navigation.StartMenu.IStartMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.NavigationTree.INavigationTreeViewModel,</token>
</entry>
<entry count="5">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Clipboard.ICanvasToBitmapExporter,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>?]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="2">
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataModelBuilder,</token>
</entry>
<entry count="4">
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>i:System.Web.OData.IEdmComplexObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IYearAxisGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmStructuredTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="13">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.Services.IReceiveMoneyTransfers,</token>
<token>Fohjin.DDD.Services]],Verify</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
<token>Application]],Setup</token>
</entry>
<entry count="16">
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataCollectionDeserializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IFloatColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.Delay.IDelayProfileService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.Routing.IODataPathHandler,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="50">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],SetupGet</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,VerifyAll</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.ILayoutPaneViewModel,</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],Setup</token>
</entry>
<entry count="10">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
</entry>
<entry count="3">
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="38">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>System.Web.Http.Controllers.HttpParameterDescriptor,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Shape.IShapeLayoutViewModel,</token>
</entry>
<entry count="1">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock,As</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],SetupGet</token>
</entry>
<entry count="16">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="242">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Windows.Input.ICommand,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmComplexObject,</token>
</entry>
<entry count="10">
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application]],Setup</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IQualityUpgradableSpecification,</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>T]],new</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Net.Http.Formatting.MediaTypeFormatter,</token>
</entry>
<entry count="2">
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Exceptions.IExceptionDialog,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="3">
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IMakeDownloadDecision,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.IClipboard,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>KaVE.FeedbackProcessor]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.NavigationTree.INavigationTreeViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
<token>Application]],Setup</token>
</entry>
<entry count="6">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="2">
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.OData.EnableQueryAttribute,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="2">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnectionPool,</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.UserControls.TrayNotification.NotifyTrayIcon,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IYAxisTitleRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Logs.ILogProvider,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.IProfileRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Raise</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IDateTimeColorLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="5">
<token>6.15.0.0]],new</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Importers.CsvFile.Header.ICsvFileImportHeaderViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerRequestGenerator,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Host.IBrowserService,</token>
<token>NzbDrone.Host]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="7">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
</entry>
<entry count="28">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerRequestGenerator,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryLogger,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDateTimeGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Tests_Integration.Utils.ITestShellComponent,</token>
<token>KaVE.RS.Commons.Tests_Integration]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomInScatterPlotCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IViewResizer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="19">
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryRepository,</token>
</entry>
<entry count="5">
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="13">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IDateTimeSizeLegendFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Host.INzbDroneServiceFactory,</token>
<token>NzbDrone.Host]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
</entry>
<entry count="1">
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Services.ISendMoneyTransfer,</token>
<token>Fohjin.DDD.Services]],Setup</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
</entry>
<entry count="9">
<token>Moq.Mock,As</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>System.Web.OData]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDayAxisGridLineFactory,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterPaneViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.OData.Formatter.IETagHandler,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>i:Microsoft.OData.Edm.IEdmNavigationProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IEventAggregator,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock,Get</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock,Get</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="79">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],SetupGet</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],SetupGet</token>
</entry>
<entry count="2">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Model.SSTs.Visitor.ISSTNode,</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IYAxisGridLineRenderer,</token>
</entry>
<entry count="60">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.Delay.IDelayProfileService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.Delay.IDelayProfileService,</token>
</entry>
<entry count="4">
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
</entry>
<entry count="3">
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.FloatFilters.IFloatFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Edm.Library.EdmModel,</token>
</entry>
<entry count="5">
<token>KaVE.RS.Commons]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],new</token>
<token>Moq.It,Is</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="1">
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.Rarbg.IRarbgTokenProvider,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],Setup</token>
</entry>
<entry count="5">
<token>KaVE.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Couchbase.Core.Serialization.DefaultSerializer,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenDialogService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.ICsvFileImportViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Commands.ICommandLogger,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.IImageResizer,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Presentation.Dialogs.Exceptions.IExceptionDialog,</token>
<token>Presentation]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.Archives.IReadingArchive,</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="5">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomOutScatterPlotCommand,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>KaVE.VS.FeedbackGenerator.UserControls.TrayNotification.NotifyTrayIcon,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataCollectionDeserializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataFeedSerializer,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="12">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.CompletionEventFilterLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="3">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.NullFilters.INullFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],Verify</token>
</entry>
<entry count="3">
<token>i:KaVE.RS.Commons.Utils.IPublisher,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Fohjin.DDD.BankApplication]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientDetailsView,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Tv.ISeriesRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
</entry>
<entry count="3">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="8">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.Bus.IBus,</token>
<token>Fohjin.DDD.Bus]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
<token>KaVE.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
<token>KaVE.FeedbackProcessor.Tests]],</token>
</entry>
<entry count="20">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmComplexObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityType,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="2">
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`2[[TContext</token>
<token>-&gt;</token>
<token>p:int],[TReturn</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.Footer.ICsvFileImportFooterViewModel,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Microsoft.OData.Edm.Library.EdmModel,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookupWindowManager,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],new</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TType]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.It,Is</token>
</entry>
<entry count="29">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.IMainMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
</entry>
<entry count="1">
<token>?]],Raise</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Importers.CsvFile.Body.ICsvFileImportBodyViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.ISecondAxisGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMoveEpisodeFiles,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Shell.MainMenu.ViewMenu.IViewMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="18">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Web.Http.Routing.IHttpRoute,</token>
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IValueScaler,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnectionPool,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>i:System.Web.OData.IEdmChangedObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IFloatSizeLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
</entry>
<entry count="3">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
<token>Presentation]],new</token>
</entry>
<entry count="4">
<token>KaVE.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="18">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Profiles.IProfileRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>6.15.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
</entry>
<entry count="22">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
</entry>
<entry count="4">
<token>KaVE.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
</entry>
<entry count="24">
<token>?]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="14">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Exceptions.IExceptionDialog,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="13">
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>?]],new</token>
<token>Moq.Mock,As</token>
<token>Moq.Mock,As</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="6">
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application]],Verify</token>
</entry>
<entry count="2">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IProcess,</token>
</entry>
<entry count="2">
<token>System.Exception,</token>
<token>mscorlib,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],Setup</token>
</entry>
<entry count="2">
<token>?]],new</token>
<token>Moq.Mock,As</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.ISelectCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>4.0.0.0]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.ViewMenu.IViewMenuViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmProperty,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.EnableQueryAttribute,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
</entry>
<entry count="19">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`2[[TContext</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceFactory,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>Fohjin.DDD.BankApplication]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Bus.IBus,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IPrioritizeDownloadDecision,</token>
</entry>
<entry count="8">
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.MessageBus.IMessageBus,</token>
</entry>
<entry count="4">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
</entry>
<entry count="1">
<token>i:System.Web.OData.IEdmChangedObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
</entry>
<entry count="23">
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmNavigationProperty,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Location.IYAxisLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="3">
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Property.IPropertyPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines.IFloatGridLineFactory,</token>
</entry>
<entry count="7">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandBus,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataCollectionDeserializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.StartMenu.IStartMenuViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="4">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmSingleton,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,VerifyAll</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IDateTimeColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
</entry>
<entry count="34">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="3">
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Location.IXAxisLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="23">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
</entry>
<entry count="3">
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application]],Setup</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IBooleanColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IDateTimeColorLegendFactory,</token>
</entry>
<entry count="5">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.EditMenu.IEditMenuViewModel,</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.QBittorrent.IQBittorrentProxy,</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="2">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="16">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],Verify</token>
</entry>
<entry count="10">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomOutScatterPlotCommand,</token>
<token>Presentation]],new</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.History.IHistoryRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDateTimeGridLineFactory,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Views.IDataMapper,</token>
</entry>
<entry count="3">
<token>Moq.It,Is</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFile,</token>
<token>Infrastructure]],new</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,Is</token>
</entry>
<entry count="3">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="16">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Size.ISizeLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="8">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.N1QL.IQueryRequest,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="6">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="24">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookupWindowManager,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveDialogService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IMinMaxDateTimeAxisGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Colors.IColorPaletteFactory,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmTypeReference,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="2">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Fohjin.DDD.EventStore.IDomainRepository`1[[TDomainEvent</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Viewer.IViewerPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="7">
<token>System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Couchbase]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IResizeScatterPlotViewExtentCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.EditMenu.IEditMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="17">
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="3">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandBus,</token>
<token>Application]],new</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFile,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.IServiceFactory,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Net.Http.Formatting.IFormatterLogger,</token>
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
</entry>
<entry count="2">
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],SetupGet</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],Verify</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
</entry>
<entry count="6">
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="81">
<token>-&gt;</token>
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting]],Setup</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="19">
<token>Application]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="15">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IEventAggregator,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.It,IsInRange</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock,As</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>5.6.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
</entry>
<entry count="6">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmModel,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityContainer,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="15">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceFactory,</token>
</entry>
<entry count="4">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>?]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="26">
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.IServiceFactory,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation]],new</token>
</entry>
<entry count="3">
<token>i:System.Web.Http.OData.IEdmObject,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Couchbase.Core.Serialization.DefaultSerializer,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Geometry.IGeometryCalculator,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="2">
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>TEdmTypeConfiguration]],new</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.TorrentRss.ITorrentRssSettingsDetector,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],SetupGet</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines.IFloatGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines.IFloatGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IntegerGridLines.IIntegerGridLineFactory,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IXAxisGridLineRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.IClipboard,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IStringColorLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IEdmEntityObject,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>?]],SetupGet</token>
<token>Moq.Mock,As</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.IActionExecutor,</token>
<token>KaVE.RS.Commons]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataCollectionDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.NullFilters.INullFilterSerializer,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.INamingConfigService,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Couchbase.N1QL.IQueryRequestWithDataMapper,</token>
<token>Couchbase]],SetupProperty</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Fohjin.DDD.Services.ISendMoneyTransfer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.DateTimeFilters.IDateTimeFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="42">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.EnableQueryAttribute,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Tests_Integration.Utils.ITestShellComponent,</token>
<token>KaVE.RS.Commons.Tests_Integration]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.IImageResizer,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.TorrentRss.ITorrentRssSettingsDetector,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="4">
<token>5.6.0.0]],new</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Commands.ICommandLogger,</token>
<token>Application]],Verify</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Generators.VisualStudio.IFocusHelper,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="18">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application]],new</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>System.Threading.SynchronizationContext,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.Location.IYAxisLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IBooleanColorLegendFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application]],Verify</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
</entry>
<entry count="2">
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnectionPool,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="31">
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDateTimeGridLineFactory,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="25">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
</entry>
<entry count="15">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>System.Web.OData.EnableQueryAttribute,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.StringFilters.IStringFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
<token>KaVE.Commons]],Setup</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerRequestGenerator,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="2">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TEdmTypeConfiguration]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="43">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>T]],Setup</token>
</entry>
<entry count="2">
<token>System.Web.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.IMainMenuViewModel,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusRepository,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IParseIndexerResponse,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="4">
<token>i:Microsoft.Data.Edm.IEdmTypeReference,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
</entry>
<entry count="5">
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.BooleanGridLines.IBooleanGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.IActionExecutor,</token>
</entry>
<entry count="6">
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],new</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.IClipboard,</token>
<token>Application]],Verify</token>
</entry>
<entry count="2">
<token>5.2.2.0]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],Verify</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IDetectSample,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Sabnzbd.ISabnzbdProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.VisualStudio.IFocusHelper,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Tests_Integration.Utils.ITestShellComponent,</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.ICallbackManager,</token>
<token>KaVE.RS.Commons]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmActionImport,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="54">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IColorLegendFactory,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IScaleComputer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityType,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandleAsync`1[[TEvent</token>
</entry>
<entry count="2">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="28">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Verify</token>
</entry>
<entry count="6">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:int],[TReturn</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.Footer.ICsvFileImportFooterViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="3">
<token>KaVE.FeedbackProcessor.Tests]],</token>
<token>KaVE.FeedbackProcessor]],Verify</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],VerifySet</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.IMessageBoxCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Verify</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="7">
<token>KaVE.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Label.ILabelLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventB,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`1[[TContext</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IBooleanColorLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryLogger,</token>
<token>Application]],Verify</token>
</entry>
<entry count="2">
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IFloatSizeLegendFactory,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Intervals.Model.Interval,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.TorrentRss.ITorrentRssSettingsDetector,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.EnableQueryAttribute,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.IExceptionDialogService,</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Legend.Colors.IColorLegendViewModel,</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IFloatColorLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.UserProfileExports.UserProfileExportHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Colors.IColorPaletteFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.ILayoutPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Legend.ILegendPaneViewModel,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="2">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.ObjectUsageExport.IUsageExtractor,</token>
<token>KaVE.Commons]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="3">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
</entry>
<entry count="3">
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],Setup</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="170">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="89">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Notifications.Synology.ISynologyIndexerProxy,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Verify</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="5">
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Query.ODataQueryOptions,</token>
<token>System.Web.OData]],Verify</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="9">
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IQualityUpgradableSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="9">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>?]],new</token>
<token>Moq.Mock,As</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="4">
<token>Application]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:System.Web.OData.Routing.IODataPathTemplateHandler,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.ICsvFileImportViewModel,</token>
</entry>
<entry count="8">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="2">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>KaVE.RS.Commons]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Services.ISendMoneyTransfer,</token>
<token>Fohjin.DDD.Services]],Verify</token>
</entry>
<entry count="20">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="9">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="4">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
<token>KaVE.Commons]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.IMessageBoxCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Legend.Sizes.ISizeLegendViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.BankApplication.Presenters.IPopupPresenter,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IClientDetailsView,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmProperty,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],Setup</token>
</entry>
<entry count="9">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Blacklisting.IBlacklistRepository,</token>
</entry>
<entry count="18">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
</entry>
<entry count="30">
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.Delay.IDelayProfileService,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IEdmEntityObject,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityContainer,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>Presentation]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application]],new</token>
</entry>
<entry count="3">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Colors.IColorPaletteFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>i:DataExplorer.Application.Importers.ISourceRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="6">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogProvider,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomOutScatterPlotCommand,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="2">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="11">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.CompletionEventFilterLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="8">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="6">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
</entry>
<entry count="2">
<token>Fohjin.DDD.Reporting]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.Activity.IKaVEMouseEvents,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IRecycleBinProvider,</token>
</entry>
<entry count="20">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.Controllers.HttpParameterDescriptor,</token>
<token>System.Web.Http,</token>
</entry>
<entry count="4">
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="17">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>?]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="7">
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.IScatterPlotAdapter,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
</entry>
<entry count="2">
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="107">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataConventionModelBuilder,</token>
</entry>
<entry count="2">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookupWindowManager,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="2">
<token>5.2.2.0]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryLogger,</token>
</entry>
<entry count="5">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Legend.Colors.IColorLegendViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Legend.Sizes.ISizeLegendViewModel,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="10">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IDelta,</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="6">
<token>?]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="22">
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.Routing.IODataPathTemplateHandler,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmActionImport,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetSelectedItemsQuery,</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],Setup</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>?]],SetupProperty</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],SetupProperty</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="18">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],SetupGet</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IXAxisGridLabelRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventLogger,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskTransferService,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],new</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualService,</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="6">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="13">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="3">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IValueScaler,</token>
</entry>
<entry count="2">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RootFolders.IRootFolderRepository,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Importers.CsvFile.Header.ICsvFileImportHeaderViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookupWindowManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="2">
<token>i:System.Web.OData.Routing.IODataPathTemplateHandler,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,VerifyAll</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Queries.IQueryLogger,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.IExceptionDialogService,</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.ICheckUpdateService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.EnableQueryAttribute,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="8">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.RemotePathMappings.IRemotePathMappingService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.Services.IReceiveMoneyTransfers,</token>
<token>Fohjin.DDD.Services]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Shape.IShapeLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.UserProfileExports.UserProfileExportHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataCollectionDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="26">
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Presenters.IPopupPresenter,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.Size.ISizeLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.IMainMenuViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Domain.DataTypes.Detectors.IDataTypeDetector,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
</entry>
<entry count="5">
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.OData]],Verify</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
</entry>
<entry count="5">
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMoveEpisodeFiles,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisher,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>Moq.Mock,Of</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventLogger,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`2[[TContext</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IStringSizeLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IDelta,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="3">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskTransferService,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
<token>Application]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IFloatSizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IIntegerSizeLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>4.0.0.0]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IXAxisGridLabelRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IYAxisGridLabelRenderer,</token>
</entry>
<entry count="5">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="7">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="5">
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotContextMenuViewModel,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.INavigationPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.Commons.Model.SSTs.Visitor.ISSTNode,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelCommands,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.BooleanFilters.IBooleanFilterSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataPrimitiveDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],SetupGet</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.INavigationPaneViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Host.INzbDroneServiceFactory,</token>
<token>NzbDrone.Host]],Verify</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="8">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryLogger,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IYearAxisGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.BankApplication.Views.IAccountDetailsView,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.ICanvasToBitmapExporter,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
</entry>
<entry count="4">
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.It,Is</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerRequestGenerator,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.ImageFilters.IImageFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>T]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="5">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="7">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Xbmc.IXbmcJsonApiProxy,</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.Clients.Deluge.IDelugeProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveDialogService,</token>
</entry>
<entry count="71">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="5">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpProvider,</token>
</entry>
<entry count="2">
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisher,</token>
</entry>
<entry count="1">
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IYAxisGridLabelRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmActionImport,</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Tests_Integration.Utils.ITestShellComponent,</token>
<token>KaVE.RS.Commons.Tests_Integration]],Setup</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Net.Http.Formatting.IFormatterLogger,</token>
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],new</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenDialogService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="6">
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.IClipboard,</token>
</entry>
<entry count="3">
<token>Presentation]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IUpgradeMediaFiles,</token>
</entry>
<entry count="3">
<token>Moq.Mock,As</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Collections.IEnumerable,</token>
</entry>
<entry count="14">
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Label.ILabelLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Property.IPropertyPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.StatusBar.IStatusBarViewModel,</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Indexers.IIndexerFactory,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Generators.IEventLogger,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IIntegerSizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
</entry>
<entry count="3">
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmTypeReference,</token>
<token>Microsoft.Data.Edm,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmEntityObject,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Exception,</token>
</entry>
<entry count="1">
<token>Microsoft.OData.Core.ODataValue,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="7">
<token>i:Microsoft.OData.Edm.IEdmEntityTypeReference,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmFunctionImport,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
</entry>
<entry count="13">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmModel,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Fohjin.DDD.Bus.IBus,</token>
<token>Fohjin.DDD.Bus]],Verify</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Query.ODataQueryOptions,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Web.OData.Routing.IODataPathTemplateHandler,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,VerifyAll</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.Activity.IKaVEMouseEvents,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator.UserControls.TrayNotification.NotifyTrayIcon,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],SetupProperty</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IProjectSerializer,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.FileMenu.IFileMenuViewModel,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Configuration.IConfigRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="13">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmModel,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IRecycleBinProvider,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="5">
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnAdapter,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Shell.MainMenu.FileMenu.IFileMenuViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IYearAxisGridLineFactory,</token>
<token>Application]],Setup</token>
</entry>
<entry count="3">
<token>i:System.Web.OData.IEdmObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Utils.IPublisher,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
</entry>
<entry count="1">
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Importers.CsvFile.ICsvFileImportViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.INavigationPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>System.Web.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Threading.SynchronizationContext,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>System.Threading.SynchronizationContext,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventLogger,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="19">
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Verify</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Views.IDataMapper,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],VerifySet</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="6">
<token>?]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="5">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="7">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
</entry>
<entry count="5">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.OData]],SetupAllProperties</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="8">
<token>KaVE.RS.SolutionAnalysis.CompletionEventFilterLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.CompletionEventFilterLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.Navigation.INavigationUtils,</token>
</entry>
<entry count="19">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>4.0.0.0]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataConventionModelBuilder,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="6">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:System.Windows.Input.ICommand,</token>
</entry>
<entry count="10">
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="8">
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Edm.Library.EdmModel,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.NzbVortex.INzbVortexProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons.Tests_Integration]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Couchbase.Core.Serialization.DefaultSerializer,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="25">
<token>i:Fohjin.DDD.Reporting.IReportingRepository,</token>
<token>Fohjin.DDD.Reporting]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>?]],Raise</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,GetType</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="5">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
</entry>
<entry count="1">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Edm.Library.EdmModel,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IPanScatterPlotCommand,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.Metadata.ModelMetadataProvider,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesRepository,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.Size.ISizeLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
</entry>
<entry count="71">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataValue,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Microsoft.Data.OData.ODataValue,</token>
<token>Microsoft.Data.OData,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialogFactory,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IEdmObject,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="2">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IPanScatterPlotCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Shell.MainMenu.FileMenu.IFileMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IYAxisGridLineRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="15">
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.IDialogService,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Clipboard.IClipboard,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.ICanvasToBitmapExporter,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
<token>KaVE.Commons]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IVisualService,</token>
<token>Presentation]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.StatusBar.IStatusBarViewModel,</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IFloatSizeLegendFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Titles.IAxisTitleRenderer,</token>
<token>Presentation]],new</token>
</entry>
<entry count="3">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="2">
<token>System.Net.Http.Formatting,</token>
<token>5.2.2.0]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Layout.Link.ILinkLayoutViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Plots.IPlotRenderer,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="2">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotContextMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.IProvideDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmSingleton,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
</entry>
<entry count="12">
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],SetupGet</token>
</entry>
<entry count="6">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmModel,</token>
</entry>
<entry count="6">
<token>Moq.Mock,As</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IRecycleBinProvider,</token>
</entry>
<entry count="1">
<token>i:System.Web.Http.OData.IEdmObject,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IEdmEntityObject,</token>
</entry>
<entry count="1">
<token>mscorlib,</token>
<token>4.0.0.0]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Model.SSTs.Visitor.ISSTNode,</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.OData.Query.Validators.SelectExpandQueryValidator,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="5">
<token>Moq.It,Is</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnection,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.IExceptionDialogService,</token>
</entry>
<entry count="34">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="3">
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityContainer,</token>
</entry>
<entry count="1">
<token>System.Web.OData]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataModelBuilder,</token>
</entry>
<entry count="4">
<token>mscorlib,</token>
<token>4.0.0.0]],Setup</token>
</entry>
<entry count="4">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Serialization.ODataDeltaFeedSerializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
</entry>
<entry count="6">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntityTypeConfiguration,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.EnableQueryAttribute,</token>
</entry>
<entry count="16">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>KaVE.RS.SolutionAnalysis.UserProfileExports.UserProfileExportHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="4">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="9">
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Metadata.Files.IMetadataFileService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandleAsync`1[[TEvent</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.Routing.IODataPathHandler,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="14">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IVectorScaler,</token>
<token>Presentation]],new</token>
</entry>
<entry count="4">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Net.Http.Formatting.IFormatterLogger,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="21">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Queries.IGetAllItemsQuery,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Importers.CsvFile.Body.ICsvFileImportBodyViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.Rarbg.IRarbgTokenProvider,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataSerializer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataSerializer,</token>
</entry>
<entry count="3">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
</entry>
<entry count="2">
<token>i:KaVE.Commons.Utils.IO.Archives.IWritingArchive,</token>
<token>KaVE.Commons]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:Couchbase.Core.IKeyMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:System.Web.Http.OData.IEdmEntityObject,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="13">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandle`1[[TEvent</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Threads.IThreadService,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserIo,</token>
</entry>
<entry count="2">
<token>System.Web.Http,</token>
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Net.Http.Formatting.MediaTypeFormatter,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Legend.ILegendPaneViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualService,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application]],Setup</token>
</entry>
<entry count="5">
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuredType,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="8">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Legend.ILegendPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Layout.Location.IXAxisLayoutViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.ISelectCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],SetupGet</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMoveEpisodeFiles,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
</entry>
<entry count="17">
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Blacklisting.IBlacklistRepository,</token>
</entry>
<entry count="11">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>KaVE.RS.SolutionAnalysis.CompletionEventFilterLogger,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="3">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IRandomizationUtils,</token>
<token>KaVE.Commons]],Setup</token>
</entry>
<entry count="21">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDataContext,</token>
</entry>
<entry count="22">
<token>?]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],SetupGet</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IConsoleService,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.EditMenu.IEditMenuViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="3">
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryLogger,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Host.IBrowserService,</token>
<token>NzbDrone.Host]],Verify</token>
</entry>
<entry count="1">
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>i:System.Web.OData.IEdmEntityObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`1[[TContext</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFileParser,</token>
<token>Infrastructure]],new</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
</entry>
<entry count="39">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Parser.IParsingService,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="5">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IResizeScatterPlotViewExtentCommand,</token>
<token>Presentation]],new</token>
</entry>
<entry count="4">
<token>6.15.0.0]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Infrastructure]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
</entry>
<entry count="4">
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerRequestGenerator,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.CodeCompletion.IExtendedLookup,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="3">
<token>i:System.Web.OData.IEdmObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="12">
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Sabnzbd.ISabnzbdProxy,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Import.IImportDialogService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="3">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.BooleanFilters.IBooleanFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.MediaFiles.IMediaFileTableCleanupService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Converters.IDataTypeConverterFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="2">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.ICanvasToBitmapExporter,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Import.IImportDialogService,</token>
<token>Application]],new</token>
</entry>
<entry count="3">
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="10">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IFloatColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>?]],new</token>
<token>Moq.Mock,As</token>
<token>Moq.Mock,As</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomInScatterPlotCommand,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IZoomOutScatterPlotCommand,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Host.INzbDroneServiceFactory,</token>
</entry>
<entry count="27">
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="2">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="28">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.BooleanGridLines.IBooleanGridLineFactory,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmEntityObject,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>6.15.0.0]],new</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Microsoft.Data.Edm.IEdmFunctionImport,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.OData]],new</token>
<token>Moq.Mock,GetType</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMoveEpisodeFiles,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandleAsync`1[[TEvent</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
</entry>
<entry count="2">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingService,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:Microsoft.OData.Edm.IEdmStructuredType,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaCover.ICoverExistsSpecification,</token>
</entry>
<entry count="119">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
</entry>
<entry count="1">
<token>T]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Configuration.IConfigInfo,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Messaging.Events.IHandleAsync`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataConventionModelBuilder,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Exporters.ITabExporter,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.IViewSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Rows.Serializers.IRowSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>System.Web.OData.Builder.NavigationSourceLinkBuilderAnnotation,</token>
<token>System.Web.OData]],Verify</token>
</entry>
<entry count="4">
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.IMapFactory,</token>
</entry>
<entry count="1">
<token>KaVE.VS.FeedbackGenerator]],Raise</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Fohjin.DDD.Bus.IBus,</token>
<token>Fohjin.DDD.Bus]],Setup</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.EnableQueryAttribute,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:Microsoft.OData.Edm.IEdmEntityContainer,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>KaVE.RS.Commons]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILogManager,</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Legend.Sizes.ISizeLegendViewModel,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.IDataContext,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
</entry>
<entry count="1">
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceFactory,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Views.IDataMapper,</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.ODataModelBuilder,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
</entry>
<entry count="3">
<token>System.Web.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Property.IPropertyPaneViewModel,</token>
</entry>
<entry count="2">
<token>Moq.Mock,GetType</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="10">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.ODataModelBuilder,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.Commons.Settings.ISettingsStore,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IEventLogger,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmEntityContainer,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Serialization.ODataFeedSerializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IYAxisGridLineRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="8">
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IIoHelper,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileSourceAdapter,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Importers.CsvFiles.ICsvFileDataAdapter,</token>
<token>Application]],new</token>
</entry>
<entry count="18">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.ICanvasRenderer,</token>
</entry>
<entry count="1">
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Filters.IFilterRepository,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IEventAggregator,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="11">
<token>i:Microsoft.Data.Edm.IEdmStructuralProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
</entry>
<entry count="5">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.IDialogService,</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Domain.Colors.IColorPaletteFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandleAsync`1[[TEvent</token>
</entry>
<entry count="8">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.SessionManager.Anonymize.IDataExportAnonymizer,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Fohjin.DDD.Bus.IBus,</token>
<token>Fohjin.DDD.Bus]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.Core.IMappedNode,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="2">
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
</entry>
<entry count="15">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.FilterTrees.IFilterTreeNodeFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Xem.IXemProxy,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Common.Serializers.IPropertySerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="3">
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="26">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
<token>Application]],new</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DecisionEngine.IQualityUpgradableSpecification,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:Couchbase.Views.IDataMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterPaneViewModel,</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.History.IHistoryService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.DataTypes.Loaders.IDataLoaderFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Sources.Maps.ISourceMapFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpClient,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IRecycleBinProvider,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>KaVE.Commons.Model.SSTs.Impl.Visitor.AbstractNodeVisitor`1[[TContext</token>
<token>-&gt;</token>
<token>p:int]],</token>
</entry>
<entry count="1">
<token>i:System.Web.Http.OData.IEdmObject,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Update.IVerifyUpdates,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="10">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.IProfileRepository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Legend.ILegendPaneViewModel,</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.LabelMaps.LabelMap,</token>
</entry>
<entry count="2">
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>?]],new</token>
<token>Moq.Mock,As</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Collections.IEnumerable,</token>
</entry>
<entry count="1">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelCommands,</token>
<token>Presentation]],Verify</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlFinder,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigService,</token>
<token>NzbDrone.Core]],SetupGet</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFile,</token>
<token>Infrastructure]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Sizes.Factories.IFloatSizeLegendFactory,</token>
</entry>
<entry count="26">
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Sizes.Factories.ISizeLegendFactory,</token>
<token>Application]],Setup</token>
</entry>
<entry count="89">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.Formatter.IETagHandler,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="1">
<token>?]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.ComplexTypeConfiguration,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Core.Time.IDateTimeService,</token>
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.Routing.IHttpVirtualPathData,</token>
<token>System.Web.Http,</token>
</entry>
<entry count="6">
<token>i:NzbDrone.Core.DecisionEngine.IDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],new</token>
</entry>
<entry count="5">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Columns.IColumnRepository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataPrimitiveDeserializer,</token>
</entry>
<entry count="1">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="4">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Infrastructure.Importers.CsvFile.ICsvFile,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.Navigation.INavigationUtils,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.ColorMaps.IColorMapFactory,</token>
</entry>
<entry count="3">
<token>i:NzbDrone.Common.Processes.IProcessProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Clients.Transmission.ITransmissionProxy,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Common.EnvironmentInfo.IRuntimeInfo,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
</entry>
<entry count="16">
<token>System.Web.Http.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>?]],SetupProperty</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>?]],SetupProperty</token>
</entry>
<entry count="2">
<token>i:Couchbase.IOperationResult,</token>
<token>Couchbase]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.Buckets.IRequestExecuter,</token>
</entry>
<entry count="3">
<token>i:KaVE.RS.Commons.Utils.IPublisher,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
</entry>
<entry count="9">
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataEntityDeserializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataEdmTypeDeserializer,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Couchbase.Core.Serialization.DefaultSerializer,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterViewModelFactory,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.StructuralTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Projects.IXmlFileService,</token>
<token>Application]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.CompletionEventToMicroCommits.IMicroCommitGenerator,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData.Builder.EntitySetLinkBuilderAnnotation,</token>
<token>System.Web.Http.OData]],Verify</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],new</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Host.INzbDroneServiceFactory,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Organizer.IBuildFileNames,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,GetType</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskTransferService,</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.Newznab.INewznabCapabilitiesProvider,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Infrastructure]],new</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
<token>Moq.SequenceExtensions,SetupSequence</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="3">
<token>?]],SetupProperty</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Query.ODataQueryOptions,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="2">
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Of</token>
</entry>
<entry count="2">
<token>Domain]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
</entry>
<entry count="3">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.IViewRepository,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.OData.Formatter.IETagHandler,</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,GetType</token>
</entry>
<entry count="1">
<token>Domain]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="1">
<token>i:KaVE.RS.Commons.Utils.IPublisherUtils,</token>
<token>KaVE.RS.Commons]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.FloatGridLines.IFloatGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>i:System.Web.OData.IEdmComplexObject,</token>
<token>System.Web.OData]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.IGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock,GetType</token>
</entry>
<entry count="1">
<token>Couchbase.Core.Serialization.DefaultSerializer,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IWindowService,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.Http.OData]],Verify</token>
</entry>
<entry count="1">
<token>i:Microsoft.OData.Edm.IEdmSingleton,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataFeedSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Viewer.IViewerPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="13">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>?]],new</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexer,</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.IDiskScanService,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IMakeImportDecision,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.NavigationTree.INavigationTreeViewModel,</token>
</entry>
<entry count="14">
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="5">
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportApprovedEpisodes,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="1">
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="7">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
</entry>
<entry count="4">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IServiceProvider,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="5">
<token>i:KaVE.Commons.Utils.Exceptions.ILogger,</token>
<token>KaVE.Commons]],Verify</token>
</entry>
<entry count="1">
<token>i:Fohjin.DDD.BankApplication.Views.IClientDetailsView,</token>
<token>Fohjin.DDD.BankApplication]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualService,</token>
<token>Presentation]],new</token>
</entry>
<entry count="22">
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IVBucket,</token>
<token>Couchbase]],new</token>
</entry>
<entry count="5">
<token>System.Web.Http.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Renderers.Grid.IAxisGridRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
</entry>
<entry count="5">
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnDataTypeSerializer,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:NzbDrone.Common.EnvironmentInfo.IAppFolderInfo,</token>
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.SizeMaps.ISizeMapFactory,</token>
<token>Domain]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="14">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsInRange</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],SetupGet</token>
</entry>
<entry count="2">
<token>System.Web.OData.Builder.ODataConventionModelBuilder,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="6">
<token>i:Microsoft.Data.Edm.IEdmNavigationProperty,</token>
<token>Microsoft.Data.Edm,</token>
<token>5.6.0.0]],new</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Net.Http.Formatting.MediaTypeFormatter,</token>
<token>System.Net.Http.Formatting,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Shell.MainMenu.IMainMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Mock,Of</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IRandomizationUtils,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Qualities.IQualityDefinitionService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IDateTimeGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Legend.Sizes.ISizeLegendViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.IFilterSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
</entry>
<entry count="7">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="9">
<token>i:Couchbase.IO.Operations.IOperation,</token>
<token>Couchbase]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.ImageFilters.IImageFilterSerializer,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataFeedSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Filter.IFilterPaneViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="6">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
<token>System.Web.Http.OData]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.Http.OData]],new</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Never</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
</entry>
<entry count="3">
<token>System.Web.OData.Formatter.Serialization.ODataSerializerProvider,</token>
<token>System.Web.OData]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="371">
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmAction,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="7">
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Navigation.INavigationPaneViewModel,</token>
</entry>
<entry count="2">
<token>NzbDrone.Core]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.IDownloadClient,</token>
<token>NzbDrone.Core]],SetupGet</token>
</entry>
<entry count="35">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Builder.EntityTypeConfiguration,</token>
</entry>
<entry count="15">
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>NzbDrone.Common]],SetupGet</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.It,Is</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="4">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="5">
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.OData.Core.ODataWriter,</token>
</entry>
<entry count="2">
<token>i:Microsoft.OData.Edm.IEdmOperationParameter,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],SetupGet</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Shell.MainMenu.ViewMenu.IViewMenuViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],VerifySet</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventLogger,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IControlToBitmapRenderer,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Indexers.IIndexerStatusService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Never</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
<token>Persistence]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Views.Serializers.ScatterPlots.IScatterPlotLayoutSerializer,</token>
</entry>
<entry count="7">
<token>i:NzbDrone.Core.Download.Pending.IPendingReleaseRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IValueScaler,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IValueScaler,</token>
</entry>
<entry count="23">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
</entry>
<entry count="11">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.SizeMaps.SizeMap,</token>
<token>Domain]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Legends.Colors.Factories.IIntegerColorLegendFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.Core.Services.IVisualTreeHelper,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Columns.Serializers.IColumnSerializer,</token>
<token>Persistence]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.EnableQueryAttribute,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock,Verify</token>
</entry>
<entry count="12">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.FeedbackProcessor.Intervals.Transformers.IEventToIntervalTransformer`1[[TIntervalType</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>i:Microsoft.OData.Edm.IEdmEntityType,</token>
<token>Microsoft.OData.Edm,</token>
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.MediaInfo.IVideoFileInfoReader,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmObject,</token>
</entry>
<entry count="4">
<token>System.Web.Http.OData]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.OData.Formatter.Deserialization.ODataDeserializerProvider,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.IEpisodeService,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.Exceptions.IExceptionDialog,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>KaVE.FeedbackProcessor.Tests.Intervals.TestInterval,</token>
</entry>
<entry count="1">
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.AxisMaps.AxisMap,</token>
</entry>
<entry count="1">
<token>Fohjin.DDD.Services]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Rows.IRowRepository,</token>
<token>Application]],Setup</token>
</entry>
<entry count="24">
<token>System.Web.Http.OData.Builder.EntityTypeConfiguration,</token>
<token>System.Web.Http.OData]],new</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Generators.IEventLogger,</token>
<token>KaVE.VS.FeedbackGenerator]],new</token>
</entry>
<entry count="3">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.IExceptionDialogService,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IMinMaxDateTimeAxisGridLineFactory,</token>
<token>Application]],new</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.IndexerSearch.ISearchForNzb,</token>
<token>NzbDrone.Core]],Setup</token>
</entry>
<entry count="3">
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpIo,</token>
<token>KaVE.RS.SolutionAnalysis]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Notifications.Synology.ISynologyIndexerProxy,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="3">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmStructuredType,</token>
<token>Microsoft.OData.Edm,</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveFileDialog,</token>
<token>Presentation]],new</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Microsoft.OData.Edm.IEdmActionImport,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Views.ScatterPlots.Axes.Factories.DateTimeGridLines.IMinMaxDateTimeAxisGridLineFactory,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Exception,</token>
<token>mscorlib,</token>
<token>4.0.0.0]],new</token>
</entry>
<entry count="9">
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Verify</token>
</entry>
<entry count="1">
<token>i:Couchbase.Views.IDataMapper,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Views.IDataMapper,</token>
</entry>
<entry count="10">
<token>-&gt;</token>
<token>i:KaVE.RS.SolutionAnalysis.SortByUser.ISortByUserLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>i:DataExplorer.Presentation.Dialogs.Open.IOpenFileDialog,</token>
<token>Presentation]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>6.15.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEntityTypeSerializer,</token>
<token>System.Web.OData]],Setup</token>
</entry>
<entry count="7">
<token>i:KaVE.RS.SolutionAnalysis.CleanUp.ICleanUpLogger,</token>
<token>KaVE.RS.SolutionAnalysis]],Verify</token>
<token>Moq.Mock,Get</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>DataExplorer.Domain.Maps.ColorMaps.ColorMap,</token>
<token>Domain]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.EpisodeImport.IImportDecisionEngineSpecification,</token>
<token>NzbDrone.Core]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Clipboard.ICanvasToBitmapExporter,</token>
<token>Application]],Setup</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:System.Web.OData.IEdmComplexObject,</token>
<token>System.Web.OData]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Services.IDependencyPropertyService,</token>
<token>Presentation]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Persistence.Filters.Serializers.NullFilters.INullFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Panes.Legend.ILegendPaneViewModel,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Logging.ILog,</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Save.ISaveDialogService,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Configuration.IConfigFileProvider,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Commands.ICommandRepository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:Couchbase.Core.IServer,</token>
<token>Couchbase]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
<token>Domain]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.LabelMaps.ILabelMapFactory,</token>
</entry>
<entry count="1">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Http.IHttpRequestInterceptor,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Queries.IQueryBus,</token>
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Application]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
<token>Application]],new</token>
</entry>
<entry count="1">
<token>System.Web.OData.Builder.EntitySetConfiguration,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IUpgradeMediaFiles,</token>
</entry>
<entry count="9">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Generators.IUserProfileEventGenerator,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Dialogs.IDialog,</token>
<token>Presentation]],new</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.IO.IConnectionPool,</token>
<token>Couchbase]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingRepository,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="75">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationStateService,</token>
<token>Application]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Web.Http.OData.IEdmObject,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Sources.Serializers.ISourceSetSerializer,</token>
<token>Persistence]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="14">
<token>i:DataExplorer.Application.Core.Messages.IMessageBus,</token>
<token>Application]],new</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="5">
<token>KaVE.Commons]],Setup</token>
<token>Moq.Mock,Get</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="133">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,Is</token>
</entry>
<entry count="2">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.ScatterPlots.IScatterPlotRenderer,</token>
</entry>
<entry count="20">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Serialization.ODataEdmTypeSerializer,</token>
</entry>
<entry count="5">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.DataAugmentation.Scene.ISceneMappingProvider,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:System.Windows.Input.ICommand,</token>
<token>System,</token>
</entry>
<entry count="6">
<token>Microsoft.OData.Core.ODataDeltaWriter,</token>
<token>Microsoft.OData.Core,</token>
<token>6.15.0.0]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Domain.Columns.IColumnFactory,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>i:NzbDrone.Core.MediaFiles.IDownloadedEpisodesImportService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Presentation.Panes.Navigation.NavigationTree.INavigationTreeViewModel,</token>
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="12">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Events.IEventBus,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Maps.AxisMaps.IAxisMapFactory,</token>
</entry>
<entry count="2">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Semantics.ISemanticTypeDetector,</token>
<token>Domain]],Setup</token>
</entry>
<entry count="1">
<token>Application]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Domain.Views.IViewFactory,</token>
<token>Domain]],new</token>
</entry>
<entry count="9">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.Nzbget.INzbgetProxy,</token>
</entry>
<entry count="10">
<token>NzbDrone.Core]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Messaging.Events.IHandleAsync`1[[TEvent</token>
<token>-&gt;</token>
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
</entry>
<entry count="1">
<token>Moq.It,Is</token>
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IMediaFileService,</token>
</entry>
<entry count="2">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.IRecycleBinProvider,</token>
</entry>
<entry count="7">
<token>Couchbase]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:Couchbase.Core.IClusterController,</token>
</entry>
<entry count="1">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Legends.Colors.Factories.IDateTimeColorLegendFactory,</token>
<token>Application]],Verify</token>
</entry>
<entry count="4">
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Download.Clients.RTorrent.IRTorrentProxy,</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Core.Canvas.Factories.IGeometryFactory,</token>
</entry>
<entry count="1">
<token>NzbDrone.Core.Test.Messaging.Events.EventA,</token>
<token>NzbDrone.Core.Test]],</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],Verify</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Commands.IPanScatterPlotCommand,</token>
<token>Presentation]],new</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Application.Application.IApplication,</token>
<token>Application]],new</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="2">
<token>5.6.0.0]],Setup</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>Microsoft.Data.OData.ODataWriter,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:DataExplorer.Application.Clipboard.ICanvasToBitmapExporter,</token>
</entry>
<entry count="1">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.OData.Query.ODataQueryOptions,</token>
</entry>
<entry count="1">
<token>Presentation]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.IScatterPlotViewModelQueries,</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Menu.IUploadWizardWindowCreator,</token>
<token>KaVE.VS.FeedbackGenerator]],Verify</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Core.Logs.ILogFolder,</token>
<token>Application]],Setup</token>
</entry>
<entry count="43">
<token>NzbDrone.Common]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>4.0.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Exception,</token>
<token>mscorlib,</token>
</entry>
<entry count="1">
<token>i:DataExplorer.Persistence.Filters.Serializers.StringFilters.IStringFilterSerializer,</token>
<token>Persistence]],new</token>
</entry>
<entry count="8">
<token>Microsoft.Data.OData.ODataWriter,</token>
<token>Microsoft.Data.OData,</token>
<token>5.6.0.0]],new</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="1">
<token>Moq.Times,Exactly</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.Profiles.IProfileRepository,</token>
<token>NzbDrone.Core]],Verify</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Dialogs.Exceptions.IExceptionDialog,</token>
<token>Presentation]],Verify</token>
<token>Moq.Times,Once</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>System.Web.OData.Formatter.Deserialization.ODataDeserializer,</token>
<token>System.Web.OData]],Setup</token>
<token>Moq.Mock`1[[T</token>
</entry>
<entry count="3">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Presentation.Views.ScatterPlots.Scalers.IPointScaler,</token>
<token>Presentation]],new</token>
</entry>
<entry count="4">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Core.MediaFiles.TorrentInfo.ITorrentFileInfoReader,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>i:NzbDrone.Core.Tv.ISeriesService,</token>
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>NzbDrone.Core]],Setup</token>
<token>Moq.It,Is</token>
<token>Moq.It,IsAny</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="13">
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:DataExplorer.Application.Application.IApplicationState,</token>
<token>Application]],VerifySet</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>i:KaVE.VS.FeedbackGenerator.Utils.Export.IExporter,</token>
<token>KaVE.VS.FeedbackGenerator]],Setup</token>
<token>Moq.It,IsAny</token>
</entry>
<entry count="1">
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.IArchiveService,</token>
<token>NzbDrone.Common]],Verify</token>
</entry>
<entry count="8">
<token>Moq.It,IsAny</token>
<token>Moq.Times,Once</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>i:NzbDrone.Common.Disk.IDiskProvider,</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>i:KaVE.Commons.Utils.IO.IIoUtils,</token>
<token>KaVE.Commons]],new</token>
</entry>
<entry count="2">
<token>5.2.2.0]],new</token>
<token>Moq.Mock`1[[T</token>
<token>-&gt;</token>
<token>System.Web.Http.Metadata.ModelMetadataProvider,</token>
</entry>
</dictionary>
