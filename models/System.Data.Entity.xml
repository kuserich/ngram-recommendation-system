<?xml version="1.0" encoding="UTF-8"?><dictionary case_sensitive="false">
<entry count="1">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.DataSetting,</token>
<token>Core]],Add</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DropCreateDatabaseAlways`1[[TContext</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ETags.ETagCurrencyTokenEfContext,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>MvcMusicStore.Models.Cart,</token>
</entry>
<entry count="62">
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.GroupNode,</token>
<token>Core]],RemoveRange</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TEntity]],SqlQuery</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TEntity]],SqlQuery</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.NodePermission,</token>
<token>Core]],Add</token>
</entry>
<entry count="1">
<token>TDSM.Core.ServerCharacters.SlotItem,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>MvcMusicStore.Models.Album,</token>
<token>MvcMusicStore]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>MvcMusicStore]],Find</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>MvcMusicStore.Models.Album,</token>
<token>MvcMusicStore]],Remove</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.ServerCharacters.SlotItem,</token>
<token>Core]],Add</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDSM.Core.Data.DbPlayer,</token>
<token>Core]],RemoveRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>TDSM.Core.Data.Models.LoadoutItem,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.NodePermission,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="8">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ForeignKey.ForeignKeyCustomer,</token>
<token>WebStack.QA.Test.OData]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="3">
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DropCreateDatabaseAlways`1[[TContext</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>WebStack.QA.Test.OData.ForeignKey.ForeignKeyCustomer,</token>
<token>WebStack.QA.Test.OData]],Remove</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="17">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfDateAndTimeOfDayModelContext,</token>
<token>WebStack.QA.Test.OData]],new</token>
<token>System.Data.Entity.Database,SetInitializer</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Data.Entity.Migrations.AutoMigrationsConfiguration`1[[TContext</token>
<token>-&gt;</token>
<token>TDbContext]],</token>
<token>OSharp.Data.Entity]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.Role,</token>
</entry>
<entry count="8">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TEntity]],Find</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDbContext]],new</token>
<token>System.Data.Entity.MigrateDatabaseToLatestVersion`2[[TContext</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerNode,</token>
</entry>
<entry count="1">
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
<token>Core]],RemoveRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="4">
<token>WebStack.QA.Test.OData.ODataCountTest.Hero,</token>
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ForeignKey.ForeignKeyOrder,</token>
<token>WebStack.QA.Test.OData]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
<token>Models]],Add</token>
</entry>
<entry count="3">
<token>TDSM.Core.Data.Models.GroupNode,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDSM.Core.Data.Group,</token>
<token>Core]],RemoveRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.IDbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ODataCountTest.Hero,</token>
<token>WebStack.QA.Test.OData]],Add</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>TEntity]],Find</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TEntity]],Remove</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
</entry>
<entry count="4">
<token>System.Data.Entity.IDbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfPerson,</token>
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="8">
<token>System.Data.Entity.Database,SetInitializer</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.DateAndTimeOfDayModel,</token>
<token>WebStack.QA.Test.OData]],Add</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ForeignKey.ForeignKeyOrder,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>MvcMusicStore.Models.Cart,</token>
<token>MvcMusicStore]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="8">
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.DateAndTimeOfDayModel,</token>
<token>WebStack.QA.Test.OData]],Add</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>TEntity]],Find</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.LoadoutItem,</token>
<token>Core]],Add</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDbContext],[TMigrationsConfiguration</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Data.Entity.Database,SetInitializer</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Remove</token>
</entry>
<entry count="3">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.GroupNode,</token>
<token>Core]],Add</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>MvcMusicStore.Models.Cart,</token>
<token>MvcMusicStore]],Add</token>
</entry>
<entry count="8">
<token>System.Data.Entity.Database,SetInitializer</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.DateAndTimeOfDayModel,</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
<token>Core]],Add</token>
</entry>
<entry count="57">
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.QueryComposition.Fuzzing.FuzzingContext,</token>
<token>WebStack.QA.Test.OData]],Seed</token>
</entry>
<entry count="2">
<token>TEntity]],SqlQuery</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TEntity]],SqlQuery</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
</entry>
<entry count="1">
<token>TDSM.Core.Data.DbPlayer,</token>
<token>Core]],Add</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DropCreateDatabaseAlways`1[[TContext</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.QueryComposition.Fuzzing.FuzzingContext,</token>
<token>WebStack.QA.Test.OData]],Seed</token>
</entry>
<entry count="1">
<token>OSharp.Demo.Models.Identity.Role,</token>
<token>OSharp.Demo.Core]],Add</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.QueryComposition.EFSelectCustomer,</token>
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>TEntity]],SqlQuery</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
<token>Core]],RemoveRange</token>
</entry>
<entry count="4">
<token>System.Data.Entity.IDbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ODataCountTest.Hero,</token>
</entry>
<entry count="1">
<token>TDbContext]],new</token>
<token>System.Data.Entity.MigrateDatabaseToLatestVersion`2[[TContext</token>
</entry>
<entry count="1">
<token>WebStack.QA.Test.OData.ETags.ETagCurrencyTokenEfContext,</token>
<token>WebStack.QA.Test.OData]],Seed</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.DataSetting,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ODataCountTest.Weapon,</token>
<token>WebStack.QA.Test.OData]],Add</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
<token>Models]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DropCreateDatabaseAlways`1[[TContext</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.QueryComposition.Fuzzing.FuzzingContext,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerNode,</token>
<token>Core]],RemoveRange</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>TDSM.Core.Data.Group,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="8">
<token>TEntity]],Find</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TEntity]],Remove</token>
</entry>
<entry count="1">
<token>TDSM.Core.Data.DbPlayer,</token>
<token>Core]],RemoveRange</token>
</entry>
<entry count="17">
<token>System.Data.Entity.DropCreateDatabaseIfModelChanges`1[[TContext</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfDateAndTimeOfDayModelContext,</token>
<token>WebStack.QA.Test.OData]],new</token>
<token>System.Data.Entity.Database,SetInitializer</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.Character,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDbContext],[TMigrationsConfiguration</token>
<token>-&gt;</token>
<token>OSharp.Data.Entity.Migrations.AutoMigrationsConfiguration`1[[TContext</token>
<token>-&gt;</token>
</entry>
<entry count="22">
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Remove</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Add</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Data.Entity.Migrations.AutoMigrationsConfiguration`1[[TContext</token>
<token>-&gt;</token>
<token>TDbContext]],</token>
</entry>
<entry count="1">
<token>MvcMusicStore.Models.Album,</token>
<token>MvcMusicStore]],Remove</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbContext,OnModelCreating</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Remove</token>
</entry>
<entry count="3">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
</entry>
<entry count="1">
<token>Models.Movies.Genre,</token>
<token>Models]],Add</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfDateAndTimeOfDayModelContext,</token>
<token>WebStack.QA.Test.OData]],new</token>
<token>System.Data.Entity.Database,SetInitializer</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
</entry>
<entry count="2">
<token>Models.Movies.Show,</token>
<token>Models]],Add</token>
</entry>
<entry count="1">
<token>MvcMusicStore]],Find</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ForeignKey.ForeignKeyOrder,</token>
<token>WebStack.QA.Test.OData]],Remove</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.QueryComposition.EFSelectCustomer,</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>TEntity]],Find</token>
</entry>
<entry count="4">
<token>System.Data.Entity.IDbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ODataCountTest.Hero,</token>
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.QueryComposition.EFSelectCustomer,</token>
<token>WebStack.QA.Test.OData]],Add</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.Character,</token>
<token>Core]],Add</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.ServerCharacters.SlotItem,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.DbPlayer,</token>
<token>Core]],Add</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerNode,</token>
<token>Core]],RemoveRange</token>
</entry>
<entry count="6">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],AddRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.QueryComposition.EFSelectCustomer,</token>
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>TEntity]],SqlQuery</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],AddRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.Character,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="4">
<token>System.Data.Entity.IDbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ODataCountTest.Hero,</token>
<token>WebStack.QA.Test.OData]],Add</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Remove</token>
</entry>
<entry count="74">
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
</entry>
<entry count="1">
<token>MvcMusicStore]],Find</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
</entry>
<entry count="17">
<token>System.Data.Entity.DropCreateDatabaseIfModelChanges`1[[TContext</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfDateAndTimeOfDayModelContext,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDbContext]],</token>
<token>OSharp.Data.Entity]],new</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.Character,</token>
<token>Core]],Add</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbExtensions,Include</token>
<token>System.Data.Entity.DbExtensions,Include</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DropCreateDatabaseAlways`1[[TContext</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ETags.ETagCurrencyTokenEfContext,</token>
<token>WebStack.QA.Test.OData]],Seed</token>
</entry>
<entry count="4">
<token>System.Data.Entity.IDbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfPerson,</token>
</entry>
<entry count="2">
<token>Models.Movies.Language,</token>
<token>Models]],AddRange</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.Character,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
<token>Core]],RemoveRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.DataSetting,</token>
<token>Core]],Add</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.LoadoutItem,</token>
<token>Core]],Add</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],Add</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>TEntity]],Remove</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
<token>Models]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="4">
<token>TDSM.Core.Data.Group,</token>
<token>Core]],Add</token>
</entry>
<entry count="8">
<token>WebStack.QA.Test.OData]],new</token>
<token>System.Data.Entity.Database,SetInitializer</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.DateAndTimeOfDayModel,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbContext,OnModelCreating</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ODataCountTest.Hero,</token>
<token>WebStack.QA.Test.OData]],Add</token>
</entry>
<entry count="32">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfPerson,</token>
<token>WebStack.QA.Test.OData]],Add</token>
</entry>
<entry count="2">
<token>MvcMusicStore]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TEntity]],SqlQuery</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Add</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.AutoExpand.NormalOrder,</token>
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>TDSM.Core.ServerCharacters.SlotItem,</token>
<token>Core]],Add</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DropCreateDatabaseAlways`1[[TContext</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.QueryComposition.Fuzzing.FuzzingContext,</token>
<token>WebStack.QA.Test.OData]],Seed</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerNode,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.Database,SetInitializer</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
</entry>
<entry count="8">
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfDateAndTimeOfDayModelContext,</token>
<token>WebStack.QA.Test.OData]],new</token>
<token>System.Data.Entity.Database,SetInitializer</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Group,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>TEntity]],Find</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>MvcMusicStore.Models.Album,</token>
<token>MvcMusicStore]],Find</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.DateAndTimeOfDayModel,</token>
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDSM.Core.Data.Group,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="8">
<token>WebStack.QA.Test.OData]],new</token>
<token>System.Data.Entity.Database,SetInitializer</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
</entry>
<entry count="9">
<token>System.Data.Entity.Database,Delete</token>
<token>System.Data.Entity.Database,Create</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.NodePermission,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.DbPlayer,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.GroupNode,</token>
<token>Core]],RemoveRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbContext,Set</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.Role,</token>
<token>OSharp.Demo.Core]],Add</token>
</entry>
<entry count="1">
<token>TDSM.Core.Data.Group,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>TDSM.Core.Data.Models.NodePermission,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
</entry>
<entry count="4">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfCustomer,</token>
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfCustomer,</token>
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="5">
<token>Models]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.GroupNode,</token>
</entry>
<entry count="6">
<token>Models.Movies.Genre,</token>
<token>Models]],AddRange</token>
</entry>
<entry count="2">
<token>System.Data.Entity.Database,Exists</token>
<token>System.Data.Entity.Database,SetInitializer</token>
<token>System.Data.Entity.DbContext,Dispose</token>
</entry>
<entry count="1">
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.NodePermission,</token>
</entry>
<entry count="17">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfDateAndTimeOfDayModelContext,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
<token>Models]],Add</token>
</entry>
<entry count="2">
<token>System.Data.Entity.Database,SetInitializer</token>
<token>System.Data.Entity.DbContext,Dispose</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfDateAndTimeOfDayModelContext,</token>
<token>WebStack.QA.Test.OData]],new</token>
<token>System.Data.Entity.Database,SetInitializer</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.PlayerNode,</token>
<token>Core]],RemoveRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="17">
<token>System.Data.Entity.DropCreateDatabaseIfModelChanges`1[[TContext</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>System.Data.Entity.DbContext,Entry</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>MvcMusicStore.Models.Album,</token>
<token>MvcMusicStore]],Remove</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>MvcMusicStore.Models.Order,</token>
<token>MvcMusicStore]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>MvcMusicStore.Models.Cart,</token>
</entry>
<entry count="2">
<token>Models.Movies.Language,</token>
<token>Models]],AddRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbContext,OnModelCreating</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.NodePermission,</token>
<token>Core]],Add</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDSM.Core.Data.DbPlayer,</token>
<token>Core]],RemoveRange</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
<token>Models]],AddRange</token>
</entry>
<entry count="1">
<token>TDSM.Core.Data.DbPlayer,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="8">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ForeignKey.ForeignKeyCustomer,</token>
</entry>
<entry count="33">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Remove</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.IDbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ODataCountTest.Hero,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DropCreateDatabaseAlways`1[[TContext</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ETags.ETagCurrencyTokenEfContext,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
<token>Models]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>MvcMusicStore.Models.Album,</token>
<token>MvcMusicStore]],Remove</token>
</entry>
<entry count="4">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TEntity]],SqlQuery</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbContext,GetHashCode</token>
<token>System.Data.Entity.DbContext,GetHashCode</token>
</entry>
<entry count="4">
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfPerson,</token>
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ODataCountTest.Hero,</token>
</entry>
<entry count="1">
<token>TDbContext]],new</token>
<token>System.Data.Entity.MigrateDatabaseToLatestVersion`2[[TContext</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
<token>Core]],Add</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.NodePermission,</token>
</entry>
<entry count="32">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Add</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
<token>Core]],Add</token>
</entry>
<entry count="17">
<token>System.Data.Entity.DropCreateDatabaseIfModelChanges`1[[TContext</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfDateAndTimeOfDayModelContext,</token>
<token>WebStack.QA.Test.OData]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
<token>Models]],AddRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.AutoExpand.NormalOrder,</token>
<token>WebStack.QA.Test.OData]],Add</token>
</entry>
<entry count="1">
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
<token>Core]],RemoveRange</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfCustomer,</token>
<token>WebStack.QA.Test.OData]],Add</token>
</entry>
<entry count="3">
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>MvcMusicStore.Models.Album,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>MvcMusicStore.Models.Cart,</token>
<token>MvcMusicStore]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>TDbContext]],new</token>
<token>System.Data.Entity.MigrateDatabaseToLatestVersion`2[[TContext</token>
<token>-&gt;</token>
<token>TDbContext],[TMigrationsConfiguration</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ForeignKey.ForeignKeyOrder,</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData.ODataCountTest.Weapon,</token>
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.IDbSet`1[[TEntity</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.AutoExpand.NormalOrder,</token>
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="3">
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ETags.ETagCurrencyTokenEfContext,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
<token>Core]],RemoveRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>System.Data.Entity.IDbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ODataCountTest.Weapon,</token>
<token>WebStack.QA.Test.OData]],Add</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.DbPlayer,</token>
<token>Core]],RemoveRange</token>
</entry>
<entry count="32">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>MvcMusicStore.Models.Cart,</token>
<token>MvcMusicStore]],Add</token>
</entry>
<entry count="1">
<token>TDbContext],[TMigrationsConfiguration</token>
<token>-&gt;</token>
<token>OSharp.Data.Entity.Migrations.AutoMigrationsConfiguration`1[[TContext</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.Character,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbContext,OnModelCreating</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
<token>Models]],AddRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.AutoExpand.NormalOrder,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>MvcMusicStore.Models.Cart,</token>
<token>MvcMusicStore]],Remove</token>
</entry>
<entry count="4">
<token>TDSM.Core.Data.Group,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>TDSM.Core.Data.Models.NodePermission,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>MvcMusicStore.Models.Cart,</token>
<token>MvcMusicStore]],Remove</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="3">
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DropCreateDatabaseAlways`1[[TContext</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDSM.Core.Data.Group,</token>
<token>Core]],RemoveRange</token>
</entry>
<entry count="9">
<token>System.Data.Entity.Database,Exists</token>
<token>System.Data.Entity.Database,Delete</token>
<token>System.Data.Entity.Database,Create</token>
</entry>
<entry count="1">
<token>MvcMusicStore.Models.Cart,</token>
<token>MvcMusicStore]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ODataCountTest.Weapon,</token>
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.IDbSet`1[[TEntity</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>MvcMusicStore.Models.Order,</token>
<token>MvcMusicStore]],Add</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>MvcMusicStore.Models.Order,</token>
<token>MvcMusicStore]],Add</token>
</entry>
<entry count="32">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Add</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Add</token>
</entry>
<entry count="8">
<token>WebStack.QA.Test.OData.ForeignKey.ForeignKeyCustomer,</token>
<token>WebStack.QA.Test.OData]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData.ODataCountTest.Weapon,</token>
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.IDbSet`1[[TEntity</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>TDSM.Core.Data.Models.GroupNode,</token>
<token>Core]],Add</token>
</entry>
<entry count="4">
<token>System.Data.Entity.IDbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfPerson,</token>
<token>WebStack.QA.Test.OData]],Add</token>
</entry>
<entry count="1">
<token>OSharp.Data.Entity.Migrations.AutoMigrationsConfiguration`1[[TContext</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Data.Entity.CreateDatabaseIfNotExists`1[[TContext</token>
<token>-&gt;</token>
<token>TDbContext]],new</token>
<token>System.Data.Entity.MigrateDatabaseToLatestVersion`2[[TContext</token>
<token>-&gt;</token>
</entry>
<entry count="17">
<token>WebStack.QA.Test.OData]],new</token>
<token>System.Data.Entity.Database,SetInitializer</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.AutoExpand.NormalOrder,</token>
<token>WebStack.QA.Test.OData]],Add</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
<token>Models]],AddRange</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbContext,Set</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.Role,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfCustomer,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>System.Data.Entity.MigrateDatabaseToLatestVersion`2[[TContext</token>
<token>-&gt;</token>
<token>TDbContext],[TMigrationsConfiguration</token>
<token>-&gt;</token>
<token>OSharp.Data.Entity.Migrations.AutoMigrationsConfiguration`1[[TContext</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Remove</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.Character,</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
<token>Models]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>TDbContext],[TMigrationsConfiguration</token>
<token>-&gt;</token>
<token>OSharp.Data.Entity.Migrations.AutoMigrationsConfiguration`1[[TContext</token>
<token>-&gt;</token>
<token>TDbContext]],</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>MvcMusicStore.Models.Order,</token>
<token>MvcMusicStore]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="7">
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
</entry>
<entry count="3">
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>MvcMusicStore.Models.Cart,</token>
<token>MvcMusicStore]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>System.Data.Entity.IDbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ODataCountTest.Weapon,</token>
</entry>
<entry count="4">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Group,</token>
<token>Core]],Add</token>
</entry>
<entry count="1">
<token>MvcMusicStore.Models.Album,</token>
<token>MvcMusicStore]],Find</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
</entry>
<entry count="8">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TEntity]],Remove</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ODataCountTest.Weapon,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.AutoExpand.NormalOrder,</token>
</entry>
<entry count="5">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Group,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.DataSetting,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>System.Data.Entity.CreateDatabaseIfNotExists`1[[TContext</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.LoadoutItem,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.DataSetting,</token>
</entry>
<entry count="4">
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfCustomer,</token>
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>OSharp.Data.Entity.Migrations.AutoMigrationsConfiguration`1[[TContext</token>
<token>-&gt;</token>
<token>TDbContext]],</token>
</entry>
<entry count="1">
<token>TDSM.Core.Data.Models.DataSetting,</token>
<token>Core]],Add</token>
</entry>
<entry count="1">
<token>WebStack.QA.Test.OData.AutoExpand.NormalOrder,</token>
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="8">
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfDateAndTimeOfDayModelContext,</token>
<token>WebStack.QA.Test.OData]],new</token>
<token>System.Data.Entity.Database,SetInitializer</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDbContext],[TMigrationsConfiguration</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Group,</token>
<token>Core]],RemoveRange</token>
</entry>
<entry count="2">
<token>System.Data.Entity.IDbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ODataCountTest.Weapon,</token>
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.IDbSet`1[[TEntity</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.GroupNode,</token>
<token>Core]],RemoveRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
<token>Models]],Add</token>
</entry>
<entry count="1">
<token>TDbContext],[TMigrationsConfiguration</token>
<token>-&gt;</token>
</entry>
<entry count="8">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.DateAndTimeOfDayModel,</token>
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>WebStack.QA.Test.OData.AutoExpand.NormalOrder,</token>
<token>WebStack.QA.Test.OData]],Add</token>
</entry>
<entry count="6">
<token>Models.Movies.Genre,</token>
<token>Models]],AddRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="4">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfCustomer,</token>
<token>WebStack.QA.Test.OData]],Add</token>
</entry>
<entry count="8">
<token>WebStack.QA.Test.OData]],new</token>
<token>System.Data.Entity.Database,SetInitializer</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>MvcMusicStore.Models.Order,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
<token>Models]],AddRange</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.NodePermission,</token>
<token>Core]],Add</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>MvcMusicStore.Models.Cart,</token>
<token>MvcMusicStore]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.GroupNode,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.Role,</token>
<token>OSharp.Demo.Core]],Add</token>
</entry>
<entry count="8">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.DateAndTimeOfDayModel,</token>
<token>WebStack.QA.Test.OData]],Add</token>
</entry>
<entry count="17">
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfDateAndTimeOfDayModelContext,</token>
<token>WebStack.QA.Test.OData]],new</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Role,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.DbPlayer,</token>
<token>Core]],RemoveRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.IDbSet`1[[TEntity</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.GroupNode,</token>
<token>Core]],Add</token>
</entry>
<entry count="1">
<token>Models.Movies.Genre,</token>
<token>Models]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="128">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Data.Entity.MigrateDatabaseToLatestVersion`2[[TContext</token>
<token>-&gt;</token>
<token>TDbContext],[TMigrationsConfiguration</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.Role,</token>
<token>OSharp.Demo.Core]],Add</token>
</entry>
<entry count="4">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ForeignKey.ForeignKeyOrder,</token>
<token>WebStack.QA.Test.OData]],Remove</token>
</entry>
<entry count="1">
<token>WebStack.QA.Test.OData.QueryComposition.EFSelectCustomer,</token>
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="4">
<token>WebStack.QA.Test.OData.ForeignKey.ForeignKeyOrder,</token>
<token>WebStack.QA.Test.OData]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbContext,Entry</token>
<token>System.Data.Entity.DbContext,Entry</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbContext,Entry</token>
<token>System.Data.Entity.DbContext,Entry</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DropCreateDatabaseAlways`1[[TContext</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ETags.ETagCurrencyTokenEfContext,</token>
<token>WebStack.QA.Test.OData]],Seed</token>
</entry>
<entry count="1">
<token>TDSM.Core.Data.Group,</token>
<token>Core]],RemoveRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="8">
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfDateAndTimeOfDayModelContext,</token>
<token>WebStack.QA.Test.OData]],new</token>
<token>System.Data.Entity.Database,SetInitializer</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbContext,new</token>
<token>System.Data.Entity.Database,SetInitializer</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Remove</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDbContext],[TMigrationsConfiguration</token>
<token>-&gt;</token>
<token>OSharp.Data.Entity.Migrations.AutoMigrationsConfiguration`1[[TContext</token>
</entry>
<entry count="1">
<token>System.Data.Entity.Database,SetInitializer</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDSM.Core.Data.DbPlayer,</token>
<token>Core]],Add</token>
</entry>
<entry count="8">
<token>TEntity]],Find</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ETags.ETagCurrencyTokenEfContext,</token>
<token>WebStack.QA.Test.OData]],Seed</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.DateAndTimeOfDayModel,</token>
<token>WebStack.QA.Test.OData]],Add</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.QueryComposition.EFSelectCustomer,</token>
<token>WebStack.QA.Test.OData]],Add</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.NodePermission,</token>
</entry>
<entry count="8">
<token>System.Data.Entity.Database,SetInitializer</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="12">
<token>WebStack.QA.Test.OData]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TEntity]],SqlQuery</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData.ODataCountTest.Weapon,</token>
<token>WebStack.QA.Test.OData]],Add</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDbContext]],new</token>
<token>System.Data.Entity.MigrateDatabaseToLatestVersion`2[[TContext</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Add</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.NodePermission,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ForeignKey.ForeignKeyCustomer,</token>
<token>WebStack.QA.Test.OData]],Remove</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Role,</token>
<token>Bonobo.Git.Server]],Remove</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Group,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Models.PlayerNode,</token>
<token>Core]],RemoveRange</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDbContext]],new</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TEntity]],SqlQuery</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Remove</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Add</token>
</entry>
<entry count="8">
<token>WebStack.QA.Test.OData]],new</token>
<token>System.Data.Entity.Database,SetInitializer</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="8">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ForeignKey.ForeignKeyCustomer,</token>
<token>WebStack.QA.Test.OData]],Remove</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDbContext]],new</token>
<token>System.Data.Entity.MigrateDatabaseToLatestVersion`2[[TContext</token>
<token>-&gt;</token>
<token>TDbContext],[TMigrationsConfiguration</token>
</entry>
<entry count="2">
<token>TDSM.Core.Data.Group,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDbContext]],</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.NodePermission,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>TDbContext],[TMigrationsConfiguration</token>
<token>-&gt;</token>
<token>OSharp.Data.Entity.Migrations.AutoMigrationsConfiguration`1[[TContext</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>OSharp.Demo.Models.Identity.Role,</token>
</entry>
<entry count="1">
<token>WebStack.QA.Test.OData.QueryComposition.EFSelectCustomer,</token>
<token>WebStack.QA.Test.OData]],Add</token>
</entry>
<entry count="17">
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData.ODataCountTest.Weapon,</token>
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.IDbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ODataCountTest.Hero,</token>
</entry>
<entry count="1">
<token>TDbContext]],new</token>
<token>System.Data.Entity.MigrateDatabaseToLatestVersion`2[[TContext</token>
<token>-&gt;</token>
<token>TDbContext],[TMigrationsConfiguration</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Models.Movies.Keyword,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],Add</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.Character,</token>
<token>Core]],Add</token>
</entry>
<entry count="8">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.DateAndTimeOfDayModel,</token>
</entry>
<entry count="2">
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>MvcMusicStore.Models.Order,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>MvcMusicStore.Models.Album,</token>
<token>MvcMusicStore]],Find</token>
</entry>
<entry count="4">
<token>WebStack.QA.Test.OData.ForeignKey.ForeignKeyOrder,</token>
<token>WebStack.QA.Test.OData]],Remove</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
</entry>
<entry count="10">
<token>System.Data.Entity.IDbSet`1[[TEntity</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>Bonobo.Git.Server]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.DataSetting,</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.IDbSet`1[[TEntity</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.GroupNode,</token>
<token>Core]],RemoveRange</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.NodePermission,</token>
<token>Core]],Add</token>
</entry>
<entry count="6">
<token>Core]],RemoveRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.QueryComposition.Fuzzing.FuzzingContext,</token>
</entry>
<entry count="1">
<token>TDbContext]],</token>
<token>OSharp.Data.Entity]],new</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.QueryComposition.EFSelectCustomer,</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DropCreateDatabaseAlways`1[[TContext</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.QueryComposition.Fuzzing.FuzzingContext,</token>
</entry>
<entry count="1">
<token>TDSM.Core.Data.DbPlayer,</token>
<token>Core]],RemoveRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Remove</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.NodePermission,</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfPerson,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.LoadoutItem,</token>
</entry>
<entry count="1">
<token>MvcMusicStore.Models.Album,</token>
<token>MvcMusicStore]],Find</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>MvcMusicStore.Models.Album,</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.DateAndTimeOfDayModel,</token>
</entry>
<entry count="5">
<token>-&gt;</token>
<token>TDSM.Core.Data.Group,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.DbPlayer,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>TDSM.Core.Data.Models.GroupNode,</token>
<token>Core]],RemoveRange</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDSM.Core.ServerCharacters.SlotItem,</token>
<token>Core]],Add</token>
</entry>
<entry count="67">
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.GroupNode,</token>
<token>Core]],Add</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>TDSM.Core.Data.Group,</token>
<token>Core]],Add</token>
</entry>
<entry count="8">
<token>System.Data.Entity.Database,SetInitializer</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>MvcMusicStore.Models.Album,</token>
<token>MvcMusicStore]],Find</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
</entry>
<entry count="17">
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfDateAndTimeOfDayModelContext,</token>
<token>WebStack.QA.Test.OData]],new</token>
<token>System.Data.Entity.Database,SetInitializer</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ODataCountTest.Hero,</token>
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>Models.Movies.Keyword,</token>
<token>Models]],AddRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="7">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
</entry>
<entry count="1">
<token>MvcMusicStore.Models.Order,</token>
<token>MvcMusicStore]],Add</token>
</entry>
<entry count="9">
<token>System.Data.Entity.Database,Exists</token>
<token>System.Data.Entity.Database,Delete</token>
</entry>
<entry count="1">
<token>MvcMusicStore.Models.Order,</token>
<token>MvcMusicStore]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Group,</token>
<token>Core]],RemoveRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Remove</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
<token>Models]],AddRange</token>
</entry>
<entry count="2">
<token>Models.Movies.Show,</token>
<token>Models]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDSM.Core.ServerCharacters.SlotItem,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>System.Data.Entity.CreateDatabaseIfNotExists`1[[TContext</token>
<token>-&gt;</token>
<token>TDbContext]],new</token>
<token>System.Data.Entity.MigrateDatabaseToLatestVersion`2[[TContext</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
<token>Models]],Add</token>
</entry>
<entry count="1">
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="4">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Group,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>MvcMusicStore.Models.Album,</token>
<token>MvcMusicStore]],Find</token>
</entry>
<entry count="4">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfCustomer,</token>
</entry>
<entry count="1">
<token>OSharp.Data.Entity.Migrations.AutoMigrationsConfiguration`1[[TContext</token>
<token>-&gt;</token>
<token>TDbContext]],</token>
<token>OSharp.Data.Entity]],new</token>
</entry>
<entry count="8">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TEntity]],Find</token>
</entry>
<entry count="2">
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Add</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.LoadoutItem,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="35">
<token>Bonobo.Git.Server]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.LoadoutItem,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>MvcMusicStore.Models.Cart,</token>
<token>MvcMusicStore]],Remove</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Repository,</token>
<token>Bonobo.Git.Server]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TEntity]],SqlQuery</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
</entry>
<entry count="4">
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfPerson,</token>
<token>WebStack.QA.Test.OData]],Add</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.ServerCharacters.SlotItem,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Movie,</token>
</entry>
<entry count="1">
<token>TDSM.Core.Data.Models.DataSetting,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
<token>Core]],RemoveRange</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Data.Entity.Migrations.AutoMigrationsConfiguration`1[[TContext</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],AddRange</token>
</entry>
<entry count="1">
<token>System.Data.Entity.Database,SetInitializer</token>
<token>System.Data.Entity.DbModelBuilder,Entity</token>
</entry>
<entry count="4">
<token>WebStack.QA.Test.OData.ODataCountTest.Hero,</token>
<token>WebStack.QA.Test.OData]],Add</token>
</entry>
<entry count="3">
<token>System.Data.Entity.DropCreateDatabaseAlways`1[[TContext</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ForeignKey.ForeignKeyOrder,</token>
<token>WebStack.QA.Test.OData]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>WebStack.QA.Test.OData.QueryComposition.Fuzzing.FuzzingContext,</token>
<token>WebStack.QA.Test.OData]],Seed</token>
</entry>
<entry count="1">
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Remove</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>MvcMusicStore.Models.Album,</token>
</entry>
<entry count="1">
<token>MvcMusicStore.Models.Cart,</token>
<token>MvcMusicStore]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDSM.Core.ServerCharacters.SlotItem,</token>
</entry>
<entry count="17">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfDateAndTimeOfDayModelContext,</token>
<token>WebStack.QA.Test.OData]],new</token>
</entry>
<entry count="1">
<token>MvcMusicStore.Models.Album,</token>
<token>MvcMusicStore]],Find</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbContext,Set</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Data.Entity.MigrateDatabaseToLatestVersion`2[[TContext</token>
<token>-&gt;</token>
<token>TDbContext],[TMigrationsConfiguration</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>Models.Movies.Keyword,</token>
<token>Models]],AddRange</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
<token>Models]],AddRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.GroupNode,</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ForeignKey.ForeignKeyCustomer,</token>
<token>WebStack.QA.Test.OData]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="8">
<token>System.Data.Entity.Database,SetInitializer</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
<token>Bonobo.Git.Server]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>System.Data.Entity.CreateDatabaseIfNotExists`1[[TContext</token>
<token>-&gt;</token>
<token>TDbContext]],new</token>
</entry>
<entry count="1">
<token>TDSM.Core.Data.Models.GroupNode,</token>
<token>Core]],RemoveRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>TEntity]],Find</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>OSharp.Data.Entity.Migrations.AutoMigrationsConfiguration`1[[TContext</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>System.Data.Entity.Database,Exists</token>
<token>System.Data.Entity.Database,SetInitializer</token>
</entry>
<entry count="8">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TEntity]],Find</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
</entry>
<entry count="32">
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>TEntity]],SqlQuery</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
</entry>
<entry count="33">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.User,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.MigrateDatabaseToLatestVersion`2[[TContext</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Models.Movies.Genre,</token>
<token>Models]],AddRange</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>TDSM.Core.Data.DbPlayer,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>MvcMusicStore]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>Bonobo.Git.Server.Data.Team,</token>
</entry>
<entry count="1">
<token>MvcMusicStore]],Find</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>MvcMusicStore.Models.Album,</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbContext,Set</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
</entry>
<entry count="9">
<token>Models]],AddRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>Models.Movies.Movie,</token>
<token>Models]],Add</token>
</entry>
<entry count="3">
<token>System.Data.Entity.DbContext,SaveChanges</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
</entry>
<entry count="3">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerGroup,</token>
</entry>
<entry count="1">
<token>MvcMusicStore.Models.Cart,</token>
<token>MvcMusicStore]],Add</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfPerson,</token>
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="3">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.GroupNode,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerNode,</token>
<token>Core]],RemoveRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>MvcMusicStore.Models.Album,</token>
<token>MvcMusicStore]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ODataCountTest.Weapon,</token>
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.IDbSet`1[[TEntity</token>
</entry>
<entry count="8">
<token>-&gt;</token>
<token>WebStack.QA.Test.OData.ForeignKey.ForeignKeyCustomer,</token>
</entry>
<entry count="32">
<token>Bonobo.Git.Server.Data.User,</token>
<token>Bonobo.Git.Server]],Add</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>Models.Movies.Show,</token>
</entry>
<entry count="1">
<token>TDSM.Core.Data.Models.LoadoutItem,</token>
<token>Core]],Add</token>
</entry>
<entry count="4">
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.EfCustomer,</token>
<token>WebStack.QA.Test.OData]],Add</token>
</entry>
<entry count="4">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.GroupNode,</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>MvcMusicStore.Models.Album,</token>
<token>MvcMusicStore]],Find</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
</entry>
<entry count="8">
<token>WebStack.QA.Test.OData.DateAndTimeOfDay.DateAndTimeOfDayModel,</token>
<token>WebStack.QA.Test.OData]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.GroupNode,</token>
<token>Core]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>Models.Movies.Language,</token>
<token>Models]],AddRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>MvcMusicStore.Models.Album,</token>
<token>MvcMusicStore]],Find</token>
<token>System.Data.Entity.DbSet`1[[TEntity</token>
</entry>
<entry count="2">
<token>Models.Movies.Movie,</token>
<token>Models]],Add</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="2">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>TDSM.Core.Data.DbPlayer,</token>
</entry>
<entry count="1">
<token>TDSM.Core.Data.Group,</token>
<token>Core]],RemoveRange</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>TDSM.Core.Data.Models.PlayerNode,</token>
<token>Core]],RemoveRange</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
<entry count="1">
<token>System.Data.Entity.DbSet`1[[TEntity</token>
<token>-&gt;</token>
<token>MvcMusicStore.Models.Album,</token>
<token>MvcMusicStore]],Remove</token>
<token>System.Data.Entity.DbContext,SaveChanges</token>
</entry>
</dictionary>
