<?xml version="1.0" encoding="UTF-8"?><dictionary case_sensitive="false">
<entry count="2">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:decimal]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>p:int]],NotHaveValue</token>
</entry>
<entry count="1">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],BeLessThan</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="3">
<token>p:long]],Be</token>
<token>FluentAssertions.Numeric.NullableNumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],NotHaveValue</token>
<token>FluentAssertions.Numeric.NullableNumericAssertions`1[[T</token>
</entry>
<entry count="3">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:long]],Be</token>
<token>FluentAssertions.Numeric.NullableNumericAssertions`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:int]],NotBe</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],BeLessThan</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>p:long]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],Be</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>p:double]],Be</token>
</entry>
<entry count="1">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],BeLessThan</token>
</entry>
<entry count="72">
<token>p:int]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],Be</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:long]],BeInRange</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],Be</token>
</entry>
<entry count="4">
<token>p:double]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="6">
<token>p:int]],NotBe</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],BeGreaterThan</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="16">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:long]],Be</token>
</entry>
<entry count="12">
<token>FluentAssertions.Numeric.NullableNumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],NotHaveValue</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:int]],NotBe</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],NotBe</token>
</entry>
<entry count="3">
<token>p:long]],Be</token>
<token>FluentAssertions.Numeric.NullableNumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],NotHaveValue</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:long]],NotBe</token>
</entry>
<entry count="2">
<token>p:decimal]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],Be</token>
</entry>
<entry count="2">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:decimal]],Be</token>
</entry>
<entry count="3">
<token>p:int]],NotBe</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],Be</token>
</entry>
<entry count="12">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:long]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>p:int]],NotBe</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="1">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],BeGreaterThan</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:long]],Be</token>
<token>FluentAssertions.Numeric.NullableNumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:double]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],Be</token>
</entry>
<entry count="1">
<token>p:int]],BeLessThan</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],Be</token>
</entry>
<entry count="1">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],BeLessThan</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:int]],BeGreaterThan</token>
</entry>
<entry count="1">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:long]],BeInRange</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>p:int]],NotBe</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>FluentAssertions.Numeric.NullableNumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],NotHaveValue</token>
<token>FluentAssertions.Numeric.NullableNumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:long]],BeInRange</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="78">
<token>-&gt;</token>
<token>p:int]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="161">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:int]],BeInRange</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="6">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],NotBe</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:long]],BeInRange</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>p:long]],Be</token>
<token>FluentAssertions.Numeric.NullableNumericAssertions`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:int]],BeLessThan</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="1">
<token>p:int]],BeLessThan</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:int]],NotBe</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:long]],NotBe</token>
</entry>
<entry count="2">
<token>p:int]],BeInRange</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="1">
<token>p:int]],NotBe</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:long]],NotBe</token>
</entry>
<entry count="78">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>p:long]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:long]],BeInRange</token>
</entry>
<entry count="2">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:decimal]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="4">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:double]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="6">
<token>p:int]],NotHaveValue</token>
<token>FluentAssertions.Numeric.NullableNumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],NotBe</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>p:int]],NotBe</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],Be</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>p:int]],NotHaveValue</token>
<token>FluentAssertions.Numeric.NullableNumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],NotHaveValue</token>
</entry>
<entry count="125">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],Be</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:decimal]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],Be</token>
</entry>
<entry count="4">
<token>p:double]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:int]],BeGreaterThan</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:long]],BeInRange</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],Be</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>p:int]],BeInRange</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:int]],BeLessThan</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:long]],BeInRange</token>
</entry>
<entry count="1">
<token>p:int]],NotBe</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],BeLessThan</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="1">
<token>p:double]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:long]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:int]],BeInRange</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>p:int]],NotHaveValue</token>
<token>FluentAssertions.Numeric.NullableNumericAssertions`1[[T</token>
</entry>
<entry count="125">
<token>-&gt;</token>
<token>p:int]],Be</token>
</entry>
<entry count="12">
<token>p:long]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="2">
<token>p:double]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],Be</token>
</entry>
<entry count="2">
<token>p:decimal]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="72">
<token>-&gt;</token>
<token>p:int]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],Be</token>
</entry>
<entry count="12">
<token>FluentAssertions.Numeric.NullableNumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],BeGreaterThan</token>
</entry>
<entry count="1">
<token>p:int]],BeInRange</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],BeInRange</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="2">
<token>p:int]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:decimal]],Be</token>
</entry>
<entry count="3">
<token>p:int]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:double]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:int]],BeLessThan</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],Be</token>
</entry>
<entry count="12">
<token>-&gt;</token>
<token>p:long]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:long]],BeInRange</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="1">
<token>p:int]],BeGreaterThan</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>p:int]],NotHaveValue</token>
<token>FluentAssertions.Numeric.NullableNumericAssertions`1[[T</token>
</entry>
<entry count="2">
<token>p:decimal]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:int]],BeGreaterThan</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],BeGreaterThan</token>
</entry>
<entry count="2">
<token>p:int]],NotBe</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="1">
<token>p:double]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:double]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="3">
<token>p:long]],Be</token>
<token>FluentAssertions.Numeric.NullableNumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],BeInRange</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>p:long]],Be</token>
<token>FluentAssertions.Numeric.NullableNumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],NotHaveValue</token>
</entry>
<entry count="1">
<token>p:long]],BeInRange</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>p:int]],NotBe</token>
</entry>
<entry count="78">
<token>p:int]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>p:long]],Be</token>
<token>FluentAssertions.Numeric.NullableNumericAssertions`1[[T</token>
</entry>
<entry count="4">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:double]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>p:int]],NotHaveValue</token>
<token>FluentAssertions.Numeric.NullableNumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],NotHaveValue</token>
</entry>
<entry count="78">
<token>-&gt;</token>
<token>p:int]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="16">
<token>-&gt;</token>
<token>p:long]],Be</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:decimal]],Be</token>
</entry>
<entry count="1">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:long]],NotBe</token>
</entry>
<entry count="6">
<token>FluentAssertions.Numeric.NullableNumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],NotHaveValue</token>
<token>FluentAssertions.Numeric.NullableNumericAssertions`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:int]],BeGreaterThan</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="1">
<token>p:int]],NotBe</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],BeLessThan</token>
</entry>
<entry count="1">
<token>p:long]],BeInRange</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="3">
<token>p:int]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:double]],Be</token>
</entry>
<entry count="31">
<token>p:int]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="12">
<token>p:long]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="2">
<token>p:int]],BeInRange</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],BeInRange</token>
</entry>
<entry count="1">
<token>p:int]],BeLessThan</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:int]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:long]],Be</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>p:int]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:double]],Be</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:int]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:long]],Be</token>
</entry>
<entry count="2">
<token>p:int]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:decimal]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="3">
<token>-&gt;</token>
<token>p:long]],Be</token>
<token>FluentAssertions.Numeric.NullableNumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],BeInRange</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:decimal]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:int]],BeInRange</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],BeInRange</token>
</entry>
<entry count="78">
<token>p:int]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:double]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:double]],Be</token>
</entry>
<entry count="12">
<token>p:long]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:double]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:long]],Be</token>
</entry>
<entry count="1">
<token>p:int]],NotBe</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],NotBe</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:decimal]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="2">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],BeInRange</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="1">
<token>p:int]],NotBe</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],NotBe</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="4">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:double]],Be</token>
</entry>
<entry count="78">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:int]],BeLessThan</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>p:int]],NotHaveValue</token>
<token>FluentAssertions.Numeric.NullableNumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="6">
<token>-&gt;</token>
<token>p:int]],NotBe</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="12">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:long]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:int]],BeGreaterThan</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="1">
<token>p:int]],BeGreaterThan</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],BeGreaterThan</token>
</entry>
<entry count="1">
<token>p:double]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:double]],Be</token>
</entry>
<entry count="1">
<token>-&gt;</token>
<token>p:double]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:long]],Be</token>
</entry>
<entry count="6">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],NotBe</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="2">
<token>-&gt;</token>
<token>p:int]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:decimal]],Be</token>
</entry>
<entry count="2">
<token>p:int]],BeInRange</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>p:double]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
<entry count="12">
<token>p:long]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:int]],Be</token>
</entry>
<entry count="4">
<token>-&gt;</token>
<token>p:double]],Be</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
</entry>
<entry count="1">
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
<token>p:long]],BeInRange</token>
<token>FluentAssertions.Numeric.NumericAssertions`1[[T</token>
<token>-&gt;</token>
</entry>
</dictionary>
