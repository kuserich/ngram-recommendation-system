<?xml version="1.0" encoding="UTF-8"?><dictionary case_sensitive="false">
<entry count="2">
<token>System.Reflection.Emit.ModuleBuilder,DefineEnum</token>
<token>System.Reflection.Emit.EnumBuilder,CreateType</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,BeginCatchBlock</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="10">
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="94">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
</entry>
<entry count="162">
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicModule</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicModule</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="1">
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicAssembly</token>
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicModule</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
<token>System.Reflection.Emit.TypeBuilder,CreateTypeInfo</token>
</entry>
<entry count="10">
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="38">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="11">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.CustomAttributeBuilder,new</token>
<token>System.Reflection.Emit.TypeBuilder,SetCustomAttribute</token>
<token>System.Reflection.Emit.CustomAttributeBuilder,new</token>
<token>System.Reflection.Emit.TypeBuilder,SetCustomAttribute</token>
</entry>
<entry count="332">
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
</entry>
<entry count="12">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="162">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,BeginExceptionBlock</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="126">
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="356">
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,BeginExceptionBlock</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="15">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,BeginExceptionBlock</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
</entry>
<entry count="6">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.PropertyBuilder,SetGetMethod</token>
<token>System.Reflection.Emit.PropertyBuilder,SetSetMethod</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,DefineGenericParameters</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EndExceptionBlock</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,BeginCatchBlock</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="116">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,BeginExceptionBlock</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,BeginExceptionBlock</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.CustomAttributeBuilder,new</token>
<token>System.Reflection.Emit.TypeBuilder,SetCustomAttribute</token>
</entry>
<entry count="163">
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
</entry>
<entry count="28">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
</entry>
<entry count="346">
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="38">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="108">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="11">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
</entry>
<entry count="8">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
</entry>
<entry count="162">
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="1">
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EndExceptionBlock</token>
</entry>
<entry count="88">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="52">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="8">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,BeginCatchBlock</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="28">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="11">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicModule</token>
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicModule</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="1">
<token>System.Reflection.Emit.MethodBuilder,SetImplementationFlags</token>
<token>System.Reflection.Emit.MethodBuilder,SetImplementationFlags</token>
<token>System.Reflection.Emit.MethodBuilder,SetImplementationFlags</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="44">
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicModule</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
</entry>
<entry count="1">
<token>System.Reflection.Emit.EventBuilder,SetAddOnMethod</token>
<token>System.Reflection.Emit.EventBuilder,SetRemoveOnMethod</token>
</entry>
<entry count="11">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
</entry>
<entry count="71">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="40">
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,DefineGenericParameters</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
</entry>
<entry count="2">
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="148">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="52">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="5">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineProperty</token>
<token>System.Reflection.Emit.PropertyBuilder,SetGetMethod</token>
</entry>
<entry count="28">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="72">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.MethodBuilder,DefineGenericParameters</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
</entry>
<entry count="6">
<token>System.Reflection.Emit.TypeBuilder,DefineProperty</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="140">
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="92">
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="8">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="18">
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
<token>System.Reflection.Emit.TypeBuilder,DefineTypeInitializer</token>
</entry>
<entry count="1">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="6">
<token>System.Reflection.Emit.TypeBuilder,DefineProperty</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
</entry>
<entry count="20">
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
</entry>
<entry count="1">
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicAssembly</token>
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicModule</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,BeginCatchBlock</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
</entry>
<entry count="2">
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicModule</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
</entry>
<entry count="2">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="12">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="128">
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="44">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
</entry>
<entry count="61">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,BeginExceptionBlock</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="15">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="11">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="37">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="90">
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="28">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,BeginCatchBlock</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.TypeBuilder,DefineConstructor</token>
<token>System.Reflection.Emit.ConstructorBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="11">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,new</token>
</entry>
<entry count="2">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="162">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="72">
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="10">
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineConstructor</token>
<token>System.Reflection.Emit.ConstructorBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.CustomAttributeBuilder,new</token>
<token>System.Reflection.Emit.TypeBuilder,SetCustomAttribute</token>
<token>System.Reflection.Emit.CustomAttributeBuilder,new</token>
</entry>
<entry count="162">
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
</entry>
<entry count="324">
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="162">
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicModule</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
</entry>
<entry count="324">
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="16">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,new</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.MethodBuilder,DefineParameter</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
</entry>
<entry count="14">
<token>System.Reflection.Emit.TypeBuilder,DefineConstructor</token>
<token>System.Reflection.Emit.ConstructorBuilder,GetILGenerator</token>
</entry>
<entry count="10">
<token>System.Reflection.Emit.ConstructorBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
</entry>
<entry count="72">
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
</entry>
<entry count="18">
<token>System.Reflection.Emit.TypeBuilder,DefineTypeInitializer</token>
<token>System.Reflection.Emit.ConstructorBuilder,GetILGenerator</token>
</entry>
<entry count="2">
<token>System.Reflection.Emit.MethodBuilder,SetParameters</token>
<token>System.Reflection.Emit.MethodBuilder,SetReturnType</token>
</entry>
<entry count="92">
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="6">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="8">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="324">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
</entry>
<entry count="162">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,BeginExceptionBlock</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.CustomAttributeBuilder,new</token>
<token>System.Reflection.Emit.TypeBuilder,SetCustomAttribute</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,EndExceptionBlock</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
</entry>
<entry count="20">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="324">
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.TypeBuilder,SetCustomAttribute</token>
<token>System.Reflection.Emit.CustomAttributeBuilder,new</token>
<token>System.Reflection.Emit.TypeBuilder,SetCustomAttribute</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
</entry>
<entry count="14">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="324">
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
</entry>
<entry count="137">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="3">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="34">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.CustomAttributeBuilder,new</token>
</entry>
<entry count="15">
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="1">
<token>System.Reflection.Emit.TypeBuilder,DefineNestedType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,EndExceptionBlock</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="28">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="14">
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicModule</token>
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicModule</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
</entry>
<entry count="8">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="12">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="127">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="139">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="162">
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="1">
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicAssembly</token>
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicModule</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="1">
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicModule</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
<token>System.Reflection.Emit.TypeBuilder,CreateTypeInfo</token>
</entry>
<entry count="72">
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.CustomAttributeBuilder,new</token>
<token>System.Reflection.Emit.TypeBuilder,SetCustomAttribute</token>
<token>System.Reflection.Emit.CustomAttributeBuilder,new</token>
</entry>
<entry count="162">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
</entry>
<entry count="61">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EndExceptionBlock</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
</entry>
<entry count="486">
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
</entry>
<entry count="34">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
</entry>
<entry count="72">
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
</entry>
<entry count="12">
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineConstructor</token>
</entry>
<entry count="28">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="54">
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="3">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="162">
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
</entry>
<entry count="162">
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
</entry>
<entry count="2">
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineConstructor</token>
<token>System.Reflection.Emit.ConstructorBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="5">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineProperty</token>
</entry>
<entry count="1">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="1">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="7">
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="1">
<token>System.Reflection.Emit.TypeBuilder,DefineNestedType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
</entry>
<entry count="8">
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="20">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
</entry>
<entry count="80">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,new</token>
</entry>
<entry count="6">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.PropertyBuilder,SetGetMethod</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,BeginExceptionBlock</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="162">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
</entry>
<entry count="20">
<token>System.Reflection.Emit.ConstructorBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="1">
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
<token>System.Reflection.Emit.TypeBuilder,CreateTypeInfo</token>
</entry>
<entry count="8">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="162">
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
</entry>
<entry count="8">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="28">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="18">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EndExceptionBlock</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,BeginCatchBlock</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="16">
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicModule</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
<token>System.Reflection.Emit.AssemblyBuilder,Save</token>
</entry>
<entry count="5">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineProperty</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="346">
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,DefineParameter</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EndExceptionBlock</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="168">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,BeginCatchBlock</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="324">
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
</entry>
<entry count="334">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="27">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
</entry>
<entry count="8">
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="34">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="162">
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.TypeBuilder,DefineConstructor</token>
<token>System.Reflection.Emit.ConstructorBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="16">
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
<token>System.Reflection.Emit.TypeBuilder,DefineTypeInitializer</token>
<token>System.Reflection.Emit.ConstructorBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,DefineParameter</token>
</entry>
<entry count="2">
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="2">
<token>System.Reflection.Emit.ConstructorBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="6">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="2">
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
</entry>
<entry count="1">
<token>System.Reflection.Emit.ConstructorBuilder,SetImplementationFlags</token>
<token>System.Reflection.Emit.MethodBuilder,SetImplementationFlags</token>
<token>System.Reflection.Emit.MethodBuilder,SetImplementationFlags</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,new</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="2">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
</entry>
<entry count="1">
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicAssembly</token>
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicModule</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,new</token>
</entry>
<entry count="2">
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
<token>System.Reflection.Emit.TypeBuilder,DefineProperty</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,BeginCatchBlock</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="2">
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
<token>System.Reflection.Emit.TypeBuilder,DefineProperty</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="162">
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="83">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="7">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="162">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
</entry>
<entry count="11">
<token>System.Reflection.Emit.PropertyBuilder,SetGetMethod</token>
<token>System.Reflection.Emit.PropertyBuilder,SetSetMethod</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="6">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.PropertyBuilder,SetGetMethod</token>
<token>System.Reflection.Emit.PropertyBuilder,SetSetMethod</token>
</entry>
<entry count="72">
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="20">
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="72">
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
</entry>
<entry count="184">
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="128">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
</entry>
<entry count="16">
<token>System.Reflection.Emit.TypeBuilder,DefineTypeInitializer</token>
<token>System.Reflection.Emit.ConstructorBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicModule</token>
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicModule</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
</entry>
<entry count="40">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="6">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="16">
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
<token>System.Reflection.Emit.TypeBuilder,DefineTypeInitializer</token>
<token>System.Reflection.Emit.ConstructorBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.TypeBuilder,SetCustomAttribute</token>
<token>System.Reflection.Emit.CustomAttributeBuilder,new</token>
<token>System.Reflection.Emit.TypeBuilder,SetCustomAttribute</token>
</entry>
<entry count="3">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="3">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="126">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="64">
<token>System.Reflection.Emit.CustomAttributeBuilder,new</token>
<token>System.Reflection.Emit.TypeBuilder,SetCustomAttribute</token>
</entry>
<entry count="340">
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
</entry>
<entry count="96">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="124">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="162">
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
</entry>
<entry count="20">
<token>System.Reflection.Emit.ConstructorBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="162">
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="11">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="162">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="48">
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,BeginExceptionBlock</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.CustomAttributeBuilder,new</token>
<token>System.Reflection.Emit.TypeBuilder,SetCustomAttribute</token>
</entry>
<entry count="16">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
<token>System.Reflection.Emit.AssemblyBuilder,Save</token>
</entry>
<entry count="52">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
</entry>
<entry count="16">
<token>System.Reflection.Emit.TypeBuilder,DefineTypeInitializer</token>
<token>System.Reflection.Emit.ConstructorBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="6">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.PropertyBuilder,SetGetMethod</token>
<token>System.Reflection.Emit.PropertyBuilder,SetSetMethod</token>
</entry>
<entry count="3">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicModule</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="2">
<token>System.Reflection.Emit.ModuleBuilder,DefineEnum</token>
<token>System.Reflection.Emit.EnumBuilder,DefineLiteral</token>
</entry>
<entry count="2">
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="136">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="11">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="5">
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="1">
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
<token>System.Reflection.Emit.TypeBuilder,CreateTypeInfo</token>
</entry>
<entry count="8">
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="5">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineProperty</token>
</entry>
<entry count="6">
<token>System.Reflection.Emit.TypeBuilder,DefineProperty</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="2">
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="71">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="1">
<token>System.Reflection.Emit.ConstructorBuilder,SetImplementationFlags</token>
<token>System.Reflection.Emit.MethodBuilder,SetImplementationFlags</token>
<token>System.Reflection.Emit.MethodBuilder,SetImplementationFlags</token>
<token>System.Reflection.Emit.MethodBuilder,SetImplementationFlags</token>
</entry>
<entry count="356">
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="54">
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="2042">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="162">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="2">
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
<token>System.Reflection.Emit.TypeBuilder,DefineProperty</token>
</entry>
<entry count="10">
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
</entry>
<entry count="18">
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="162">
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="38">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicModule</token>
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicModule</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.CustomAttributeBuilder,new</token>
<token>System.Reflection.Emit.TypeBuilder,SetCustomAttribute</token>
<token>System.Reflection.Emit.CustomAttributeBuilder,new</token>
<token>System.Reflection.Emit.TypeBuilder,SetCustomAttribute</token>
</entry>
<entry count="64">
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
</entry>
<entry count="85">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="64">
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="72">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
</entry>
<entry count="10">
<token>System.Reflection.Emit.ConstructorBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="11">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,DefineParameter</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
</entry>
<entry count="10">
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,BeginCatchBlock</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="162">
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
</entry>
<entry count="19">
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicModule</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="3">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="162">
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
</entry>
<entry count="136">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="72">
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
</entry>
<entry count="2">
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
</entry>
<entry count="8">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="10">
<token>System.Reflection.Emit.TypeBuilder,DefineConstructor</token>
<token>System.Reflection.Emit.ConstructorBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
</entry>
<entry count="5">
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
</entry>
<entry count="72">
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="144">
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.CustomAttributeBuilder,new</token>
<token>System.Reflection.Emit.TypeBuilder,SetCustomAttribute</token>
<token>System.Reflection.Emit.CustomAttributeBuilder,new</token>
<token>System.Reflection.Emit.TypeBuilder,SetCustomAttribute</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
</entry>
<entry count="72">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
</entry>
<entry count="532">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="37">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="5">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineProperty</token>
</entry>
<entry count="10">
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
</entry>
<entry count="1">
<token>System.Reflection.Emit.TypeBuilder,DefineEvent</token>
<token>System.Reflection.Emit.EventBuilder,SetAddOnMethod</token>
<token>System.Reflection.Emit.EventBuilder,SetRemoveOnMethod</token>
</entry>
<entry count="20">
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,BeginExceptionBlock</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,BeginExceptionBlock</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="2">
<token>System.Reflection.Emit.ModuleBuilder,DefineEnum</token>
<token>System.Reflection.Emit.EnumBuilder,DefineLiteral</token>
<token>System.Reflection.Emit.EnumBuilder,CreateType</token>
</entry>
<entry count="8">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.MethodBuilder,DefineGenericParameters</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.TypeBuilder,SetCustomAttribute</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
</entry>
<entry count="2">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="16">
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
<token>System.Reflection.Emit.AssemblyBuilder,Save</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="5">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineProperty</token>
<token>System.Reflection.Emit.PropertyBuilder,SetGetMethod</token>
<token>System.Reflection.Emit.PropertyBuilder,SetSetMethod</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EndExceptionBlock</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EndExceptionBlock</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
</entry>
<entry count="12">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="6">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.PropertyBuilder,SetGetMethod</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,BeginCatchBlock</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="18">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="2">
<token>System.Reflection.Emit.MethodBuilder,SetImplementationFlags</token>
<token>System.Reflection.Emit.MethodBuilder,SetImplementationFlags</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,EndExceptionBlock</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="52">
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicModule</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
</entry>
<entry count="34">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="162">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
</entry>
<entry count="14">
<token>System.Reflection.Emit.TypeBuilder,DefineConstructor</token>
<token>System.Reflection.Emit.ConstructorBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="5">
<token>System.Reflection.Emit.TypeBuilder,DefineProperty</token>
<token>System.Reflection.Emit.PropertyBuilder,SetGetMethod</token>
</entry>
<entry count="28">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="8">
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="149">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="72">
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="8">
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
</entry>
<entry count="12">
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineConstructor</token>
<token>System.Reflection.Emit.ConstructorBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="12">
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="28">
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EndExceptionBlock</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="5">
<token>System.Reflection.Emit.TypeBuilder,DefineProperty</token>
<token>System.Reflection.Emit.PropertyBuilder,SetGetMethod</token>
<token>System.Reflection.Emit.PropertyBuilder,SetSetMethod</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,BeginCatchBlock</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.TypeBuilder,SetCustomAttribute</token>
<token>System.Reflection.Emit.CustomAttributeBuilder,new</token>
</entry>
<entry count="26">
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
</entry>
<entry count="6">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.PropertyBuilder,SetGetMethod</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="16">
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
</entry>
<entry count="28">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
</entry>
<entry count="2">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="23">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="34">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="50">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="8">
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="18">
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
<token>System.Reflection.Emit.TypeBuilder,DefineTypeInitializer</token>
<token>System.Reflection.Emit.ConstructorBuilder,GetILGenerator</token>
</entry>
<entry count="156">
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="5">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineProperty</token>
<token>System.Reflection.Emit.PropertyBuilder,SetGetMethod</token>
<token>System.Reflection.Emit.PropertyBuilder,SetSetMethod</token>
</entry>
<entry count="690">
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EndExceptionBlock</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="18">
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicModule</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="5">
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,BeginCatchBlock</token>
</entry>
<entry count="72">
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
</entry>
<entry count="1">
<token>System.Reflection.Emit.TypeBuilder,DefineEvent</token>
<token>System.Reflection.Emit.EventBuilder,SetAddOnMethod</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="18">
<token>System.Reflection.Emit.AssemblyBuilder,DefineDynamicModule</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineDefaultConstructor</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
</entry>
<entry count="352">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="204">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
</entry>
<entry count="16">
<token>System.Reflection.Emit.TypeBuilder,DefineTypeInitializer</token>
<token>System.Reflection.Emit.ConstructorBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="30">
<token>System.Reflection.Emit.ConstructorBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="5">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineProperty</token>
<token>System.Reflection.Emit.PropertyBuilder,SetGetMethod</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="2">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="40">
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="184">
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="162">
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,DefineGenericParameters</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
</entry>
<entry count="20">
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="34">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,BeginExceptionBlock</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="37">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="72">
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="6">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.PropertyBuilder,SetGetMethod</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
</entry>
<entry count="1">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="64">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="64">
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="11">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.MethodBuilder,DefineParameter</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
</entry>
<entry count="8">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="142">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EndExceptionBlock</token>
</entry>
<entry count="8">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="36">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
<token>System.Reflection.Emit.DynamicMethod,CreateDelegate</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,BeginCatchBlock</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,BeginExceptionBlock</token>
</entry>
<entry count="20">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="1085">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="12">
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.TypeBuilder,DefineConstructor</token>
<token>System.Reflection.Emit.ConstructorBuilder,GetILGenerator</token>
</entry>
<entry count="3">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="5">
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="28">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="128">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="14">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="5">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,DefineProperty</token>
<token>System.Reflection.Emit.PropertyBuilder,SetGetMethod</token>
</entry>
<entry count="12">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="20">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="2">
<token>System.Reflection.Emit.TypeBuilder,DefineField</token>
<token>System.Reflection.Emit.TypeBuilder,DefineProperty</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,BeginExceptionBlock</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.CustomAttributeBuilder,new</token>
<token>System.Reflection.Emit.TypeBuilder,SetCustomAttribute</token>
<token>System.Reflection.Emit.CustomAttributeBuilder,new</token>
</entry>
<entry count="16">
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.TypeBuilder,CreateType</token>
<token>System.Reflection.Emit.AssemblyBuilder,Save</token>
</entry>
<entry count="2">
<token>System.Reflection.Emit.EnumBuilder,DefineLiteral</token>
<token>System.Reflection.Emit.EnumBuilder,CreateType</token>
</entry>
<entry count="38">
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.TypeBuilder,SetCustomAttribute</token>
<token>System.Reflection.Emit.FieldBuilder,SetCustomAttribute</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="6">
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
</entry>
<entry count="20">
<token>System.Reflection.Emit.ILGenerator,EmitCall</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="486">
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
</entry>
<entry count="4">
<token>System.Reflection.Emit.ILGenerator,MarkLabel</token>
<token>System.Reflection.Emit.ILGenerator,BeginCatchBlock</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.ModuleBuilder,DefineType</token>
<token>System.Reflection.Emit.CustomAttributeBuilder,new</token>
</entry>
<entry count="6">
<token>System.Reflection.Emit.TypeBuilder,DefineProperty</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="136">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="72">
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,new</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
<token>System.Reflection.Emit.DynamicMethod,GetILGenerator</token>
</entry>
<entry count="2">
<token>System.Reflection.Emit.ConstructorBuilder,SetImplementationFlags</token>
<token>System.Reflection.Emit.MethodBuilder,SetImplementationFlags</token>
</entry>
<entry count="324">
<token>System.Reflection.Emit.TypeBuilder,DefineMethodOverride</token>
<token>System.Reflection.Emit.TypeBuilder,DefineMethod</token>
<token>System.Reflection.Emit.MethodBuilder,GetILGenerator</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
</entry>
<entry count="32">
<token>System.Reflection.Emit.ILGenerator,DeclareLocal</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,Emit</token>
<token>System.Reflection.Emit.ILGenerator,DefineLabel</token>
</entry>
</dictionary>
