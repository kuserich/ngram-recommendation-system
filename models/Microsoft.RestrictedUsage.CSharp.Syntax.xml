<?xml version="1.0" encoding="UTF-8"?><dictionary case_sensitive="false">
<entry count="96">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.ParseTree,FindLeafNode</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
</entry>
<entry count="9792">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.ParseTree,FindLeafNode</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsProperty</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyName</token>
</entry>
<entry count="6144">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsDot</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,IsName</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCreation</token>
</entry>
<entry count="3072">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsDot</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCreation</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyMember</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyBinaryOperator</token>
</entry>
<entry count="6144">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsDot</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,IsName</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCreation</token>
</entry>
<entry count="6144">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsDot</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,IsName</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCreation</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyMember</token>
</entry>
<entry count="9216">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyMember</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyBinaryOperator</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
</entry>
<entry count="9216">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyBinaryOperator</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
</entry>
<entry count="9792">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsProperty</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyName</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
</entry>
<entry count="9792">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.ParseTree,FindLeafNode</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsProperty</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyName</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
</entry>
<entry count="6144">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,IsName</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCreation</token>
</entry>
<entry count="9216">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCreation</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyMember</token>
</entry>
<entry count="6144">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,IsName</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCreation</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyMember</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyBinaryOperator</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
</entry>
<entry count="3072">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsDot</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCreation</token>
</entry>
<entry count="9216">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsProperty</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyName</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsDot</token>
</entry>
<entry count="9216">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCreation</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyMember</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyBinaryOperator</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
</entry>
<entry count="3072">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsDot</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCreation</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyMember</token>
</entry>
<entry count="9792">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.ParseTree,FindLeafNode</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsProperty</token>
</entry>
<entry count="6144">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsDot</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,IsName</token>
</entry>
<entry count="6144">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyName</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsDot</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,IsName</token>
</entry>
<entry count="6144">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsProperty</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyName</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsDot</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,IsName</token>
</entry>
<entry count="72">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsClass</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsInterface</token>
</entry>
<entry count="96">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCreation</token>
</entry>
<entry count="3072">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsDot</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCreation</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyMember</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyBinaryOperator</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
</entry>
<entry count="9792">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsProperty</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyName</token>
</entry>
<entry count="3072">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsDot</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCreation</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyMember</token>
</entry>
<entry count="6144">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsDot</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,IsName</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCreation</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyMember</token>
</entry>
<entry count="9216">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyMember</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyBinaryOperator</token>
</entry>
<entry count="9216">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.ParseTree,FindLeafNode</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsProperty</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyName</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsDot</token>
</entry>
<entry count="6144">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsDot</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,IsName</token>
</entry>
<entry count="9216">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCreation</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyMember</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyBinaryOperator</token>
</entry>
<entry count="9792">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyName</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
</entry>
<entry count="3072">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyName</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsDot</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCreation</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyMember</token>
</entry>
<entry count="9216">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyName</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsDot</token>
</entry>
<entry count="3072">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsDot</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCreation</token>
</entry>
<entry count="6144">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,IsName</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCreation</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyMember</token>
</entry>
<entry count="6144">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsDot</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,IsName</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCreation</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyMember</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyBinaryOperator</token>
</entry>
<entry count="3072">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsProperty</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyName</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsDot</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCreation</token>
</entry>
<entry count="96">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.ParseTree,FindLeafNode</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCreation</token>
</entry>
<entry count="3072">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyName</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsDot</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCreation</token>
</entry>
<entry count="9216">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsDot</token>
</entry>
<entry count="6144">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyName</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsDot</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,IsName</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCreation</token>
</entry>
<entry count="3072">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCall</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsDot</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCreation</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyMember</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyBinaryOperator</token>
</entry>
<entry count="6144">
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,IsName</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyCreation</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyMember</token>
<token>Microsoft.RestrictedUsage.CSharp.Syntax.BaseNodeExtensions,AsAnyBinaryOperator</token>
</entry>
</dictionary>
