<?xml version="1.0" encoding="UTF-8"?><dictionary case_sensitive="false">
<entry count="1">
<token>NEventStore.DispatcherWireupExtensions,UsingSynchronousDispatchScheduler</token>
<token>NEventStore.SynchronousDispatchSchedulerWireup,DispatchTo</token>
<token>NEventStore.Wireup,Build</token>
</entry>
<entry count="1">
<token>NEventStore.EventMessage,new</token>
<token>NEventStore.IEventStream,Add</token>
</entry>
<entry count="1">
<token>NEventStore.SqlPersistenceWireup,WithDialect</token>
<token>NEventStore.SqlPersistenceWireup,PageEvery</token>
<token>NEventStore.PersistenceWireup,InitializeStorageEngine</token>
<token>NEventStore.SerializationWireupExtensions,UsingJsonSerialization</token>
</entry>
<entry count="1">
<token>NEventStore.SqlPersistenceWireup,PageEvery</token>
<token>NEventStore.PersistenceWireup,InitializeStorageEngine</token>
<token>NEventStore.SerializationWireupExtensions,UsingJsonSerialization</token>
<token>NEventStore.DispatcherWireupExtensions,UsingSynchronousDispatchScheduler</token>
</entry>
<entry count="1">
<token>NEventStore.PersistenceWireup,InitializeStorageEngine</token>
<token>NEventStore.SerializationWireupExtensions,UsingJsonSerialization</token>
</entry>
<entry count="1">
<token>NEventStore.SerializationWireupExtensions,UsingJsonSerialization</token>
<token>NEventStore.DispatcherWireupExtensions,UsingSynchronousDispatchScheduler</token>
</entry>
<entry count="1">
<token>NEventStore.SqlPersistenceWireupExtensions,UsingSqlPersistence</token>
<token>NEventStore.SqlPersistenceWireup,WithDialect</token>
</entry>
<entry count="1">
<token>NEventStore.Wireup,Init</token>
<token>NEventStore.SqlPersistenceWireupExtensions,UsingSqlPersistence</token>
</entry>
<entry count="1">
<token>NEventStore.PersistenceWireup,InitializeStorageEngine</token>
<token>NEventStore.SerializationWireupExtensions,UsingJsonSerialization</token>
<token>NEventStore.DispatcherWireupExtensions,UsingSynchronousDispatchScheduler</token>
</entry>
<entry count="1">
<token>NEventStore.SqlPersistenceWireupExtensions,UsingSqlPersistence</token>
<token>NEventStore.SqlPersistenceWireup,WithDialect</token>
<token>NEventStore.SqlPersistenceWireup,PageEvery</token>
<token>NEventStore.PersistenceWireup,InitializeStorageEngine</token>
<token>NEventStore.SerializationWireupExtensions,UsingJsonSerialization</token>
</entry>
<entry count="1">
<token>NEventStore.DispatcherWireupExtensions,UsingSynchronousDispatchScheduler</token>
<token>NEventStore.SynchronousDispatchSchedulerWireup,DispatchTo</token>
</entry>
<entry count="1">
<token>NEventStore.SerializationWireupExtensions,UsingJsonSerialization</token>
<token>NEventStore.DispatcherWireupExtensions,UsingSynchronousDispatchScheduler</token>
<token>NEventStore.SynchronousDispatchSchedulerWireup,DispatchTo</token>
</entry>
<entry count="1">
<token>NEventStore.Wireup,Init</token>
<token>NEventStore.SqlPersistenceWireupExtensions,UsingSqlPersistence</token>
<token>NEventStore.SqlPersistenceWireup,WithDialect</token>
<token>NEventStore.SqlPersistenceWireup,PageEvery</token>
</entry>
<entry count="1">
<token>NEventStore.SqlPersistenceWireup,WithDialect</token>
<token>NEventStore.SqlPersistenceWireup,PageEvery</token>
<token>NEventStore.PersistenceWireup,InitializeStorageEngine</token>
</entry>
<entry count="1">
<token>NEventStore.SqlPersistenceWireup,PageEvery</token>
<token>NEventStore.PersistenceWireup,InitializeStorageEngine</token>
<token>NEventStore.SerializationWireupExtensions,UsingJsonSerialization</token>
<token>NEventStore.DispatcherWireupExtensions,UsingSynchronousDispatchScheduler</token>
<token>NEventStore.SynchronousDispatchSchedulerWireup,DispatchTo</token>
</entry>
<entry count="1">
<token>NEventStore.SqlPersistenceWireup,WithDialect</token>
<token>NEventStore.SqlPersistenceWireup,PageEvery</token>
<token>NEventStore.PersistenceWireup,InitializeStorageEngine</token>
<token>NEventStore.SerializationWireupExtensions,UsingJsonSerialization</token>
<token>NEventStore.DispatcherWireupExtensions,UsingSynchronousDispatchScheduler</token>
</entry>
<entry count="1">
<token>NEventStore.PersistenceWireup,InitializeStorageEngine</token>
<token>NEventStore.SerializationWireupExtensions,UsingJsonSerialization</token>
<token>NEventStore.DispatcherWireupExtensions,UsingSynchronousDispatchScheduler</token>
<token>NEventStore.SynchronousDispatchSchedulerWireup,DispatchTo</token>
<token>NEventStore.Wireup,Build</token>
</entry>
<entry count="1">
<token>NEventStore.SerializationWireupExtensions,UsingJsonSerialization</token>
<token>NEventStore.DispatcherWireupExtensions,UsingSynchronousDispatchScheduler</token>
<token>NEventStore.SynchronousDispatchSchedulerWireup,DispatchTo</token>
<token>NEventStore.Wireup,Build</token>
</entry>
<entry count="1">
<token>NEventStore.Wireup,Init</token>
<token>NEventStore.SqlPersistenceWireupExtensions,UsingSqlPersistence</token>
<token>NEventStore.SqlPersistenceWireup,WithDialect</token>
</entry>
<entry count="1">
<token>NEventStore.SynchronousDispatchSchedulerWireup,DispatchTo</token>
<token>NEventStore.Wireup,Build</token>
</entry>
<entry count="1">
<token>NEventStore.SqlPersistenceWireup,WithDialect</token>
<token>NEventStore.SqlPersistenceWireup,PageEvery</token>
</entry>
<entry count="1">
<token>NEventStore.SqlPersistenceWireupExtensions,UsingSqlPersistence</token>
<token>NEventStore.SqlPersistenceWireup,WithDialect</token>
<token>NEventStore.SqlPersistenceWireup,PageEvery</token>
<token>NEventStore.PersistenceWireup,InitializeStorageEngine</token>
</entry>
<entry count="1">
<token>NEventStore.SqlPersistenceWireup,PageEvery</token>
<token>NEventStore.PersistenceWireup,InitializeStorageEngine</token>
<token>NEventStore.SerializationWireupExtensions,UsingJsonSerialization</token>
</entry>
<entry count="1">
<token>NEventStore.Wireup,Init</token>
<token>NEventStore.SqlPersistenceWireupExtensions,UsingSqlPersistence</token>
<token>NEventStore.SqlPersistenceWireup,WithDialect</token>
<token>NEventStore.SqlPersistenceWireup,PageEvery</token>
<token>NEventStore.PersistenceWireup,InitializeStorageEngine</token>
</entry>
<entry count="1">
<token>NEventStore.SqlPersistenceWireup,PageEvery</token>
<token>NEventStore.PersistenceWireup,InitializeStorageEngine</token>
</entry>
<entry count="1">
<token>NEventStore.SqlPersistenceWireupExtensions,UsingSqlPersistence</token>
<token>NEventStore.SqlPersistenceWireup,WithDialect</token>
<token>NEventStore.SqlPersistenceWireup,PageEvery</token>
</entry>
<entry count="1">
<token>NEventStore.PersistenceWireup,InitializeStorageEngine</token>
<token>NEventStore.SerializationWireupExtensions,UsingJsonSerialization</token>
<token>NEventStore.DispatcherWireupExtensions,UsingSynchronousDispatchScheduler</token>
<token>NEventStore.SynchronousDispatchSchedulerWireup,DispatchTo</token>
</entry>
</dictionary>
