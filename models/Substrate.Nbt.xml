<?xml version="1.0" encoding="UTF-8"?><dictionary case_sensitive="false">
<entry count="4">
<token>Substrate.Nbt.NbtTree,new</token>
<token>Substrate.Nbt.NbtTree,ReadFrom</token>
</entry>
<entry count="1">
<token>Substrate.Nbt.TagNodeCompound,Add</token>
<token>Substrate.Nbt.NbtTree,new</token>
</entry>
<entry count="1">
<token>Substrate.Nbt.TagNode,GetTagType</token>
<token>Substrate.Nbt.TagNode,ToTagDouble</token>
</entry>
<entry count="2">
<token>Substrate.Nbt.TagNodeCompound,Remove</token>
<token>Substrate.Nbt.TagNodeCompound,Add</token>
</entry>
<entry count="1">
<token>Substrate.Nbt.TagNodeCompound,new</token>
<token>Substrate.Nbt.TagNodeCompound,Add</token>
<token>Substrate.Nbt.NbtTree,new</token>
</entry>
<entry count="1">
<token>Substrate.Nbt.TagNode,GetTagType</token>
<token>Substrate.Nbt.TagNode,ToTagString</token>
</entry>
<entry count="1">
<token>Substrate.Nbt.TagNodeCompound,new</token>
<token>Substrate.Nbt.TagNodeCompound,Add</token>
<token>Substrate.Nbt.NbtTree,new</token>
<token>Substrate.Nbt.NbtTree,WriteTo</token>
</entry>
<entry count="2">
<token>Substrate.Nbt.NbtTree,new</token>
<token>Substrate.Nbt.NbtTree,ReadFrom</token>
<token>Substrate.Nbt.TagNodeCompound,ContainsKey</token>
</entry>
<entry count="1">
<token>Substrate.Nbt.TagNode,GetTagType</token>
<token>Substrate.Nbt.TagNode,ToTagLong</token>
</entry>
<entry count="2">
<token>Substrate.Nbt.NbtTree,ReadFrom</token>
<token>Substrate.Nbt.TagNodeCompound,ContainsKey</token>
</entry>
<entry count="1">
<token>Substrate.Nbt.NbtTree,new</token>
<token>Substrate.Nbt.NbtTree,WriteTo</token>
</entry>
<entry count="1">
<token>Substrate.Nbt.TagNode,GetTagType</token>
<token>Substrate.Nbt.TagNode,ToTagInt</token>
</entry>
<entry count="1">
<token>Substrate.Nbt.TagNode,GetTagType</token>
<token>Substrate.Nbt.TagNode,ToTagShort</token>
</entry>
<entry count="4">
<token>Substrate.Nbt.TagNode,GetTagType</token>
<token>Substrate.Nbt.TagNode,GetTagType</token>
</entry>
<entry count="1">
<token>Substrate.Nbt.TagNodeCompound,new</token>
<token>Substrate.Nbt.TagNodeCompound,Add</token>
</entry>
<entry count="1">
<token>Substrate.Nbt.TagNode,GetTagType</token>
<token>Substrate.Nbt.TagNode,ToTagByte</token>
</entry>
<entry count="2">
<token>Substrate.Nbt.TagNodeCompound,ContainsKey</token>
<token>Substrate.Nbt.TagNodeCompound,Add</token>
</entry>
<entry count="2">
<token>Substrate.Nbt.TagNodeCompound,ContainsKey</token>
<token>Substrate.Nbt.TagNodeCompound,Remove</token>
</entry>
<entry count="2">
<token>Substrate.Nbt.TagNode,GetTagType</token>
<token>Substrate.Nbt.TagNodeList,Insert</token>
</entry>
<entry count="1">
<token>Substrate.Nbt.TagNodeCompound,Add</token>
<token>Substrate.Nbt.NbtTree,new</token>
<token>Substrate.Nbt.NbtTree,WriteTo</token>
</entry>
<entry count="2">
<token>Substrate.Nbt.TagNodeCompound,ContainsKey</token>
<token>Substrate.Nbt.TagNodeCompound,Remove</token>
<token>Substrate.Nbt.TagNodeCompound,Add</token>
</entry>
<entry count="1">
<token>Substrate.Nbt.TagNode,GetTagType</token>
<token>Substrate.Nbt.TagNode,ToTagFloat</token>
</entry>
<entry count="2">
<token>Substrate.Nbt.TagNode,GetTagType</token>
<token>Substrate.Nbt.TagNodeList,Add</token>
</entry>
</dictionary>
