<?xml version="1.0" encoding="UTF-8"?><dictionary case_sensitive="false">
<entry count="2">
<token>System.Net.Http.Formatting.MediaTypeFormatter,ReadFromStreamAsync</token>
<token>System.Net.Http.Formatting.MediaTypeFormatter,ReadFromStreamAsync</token>
</entry>
<entry count="3">
<token>System.Net.Http.Formatting.DefaultContentNegotiator,new</token>
<token>System.Net.Http.Formatting.IContentNegotiator,Negotiate</token>
</entry>
<entry count="2">
<token>System.Net.Http.Formatting.MediaTypeFormatter,CanReadType</token>
<token>System.Net.Http.Formatting.MediaTypeFormatter,CanReadType</token>
</entry>
<entry count="2">
<token>System.Net.Http.Formatting.JsonMediaTypeFormatter,new</token>
<token>System.Net.Http.Formatting.JsonMediaTypeFormatter,new</token>
</entry>
<entry count="3">
<token>System.Net.Http.Formatting.MediaTypeFormatter,CanWriteType</token>
<token>System.Net.Http.Formatting.MediaTypeFormatter,WriteToStreamAsync</token>
</entry>
<entry count="1">
<token>System.Net.Http.Formatting.MediaTypeFormatter,GetPerRequestFormatterInstance</token>
<token>System.Net.Http.Formatting.MediaTypeFormatter,SetDefaultContentHeaders</token>
</entry>
<entry count="1">
<token>System.Net.Http.Formatting.FormDataCollection,new</token>
<token>System.Net.Http.Formatting.FormDataCollection,ReadAsNameValueCollection</token>
</entry>
<entry count="2">
<token>System.Net.Http.Formatting.ContentNegotiationResult,new</token>
<token>System.Net.Http.Formatting.IContentNegotiator,Negotiate</token>
</entry>
<entry count="2">
<token>System.Net.Http.Formatting.MediaTypeFormatter,WriteToStreamAsync</token>
<token>System.Net.Http.Formatting.MediaTypeFormatter,WriteToStreamAsync</token>
</entry>
<entry count="2">
<token>System.Net.Http.Formatting.JsonMediaTypeFormatter,new</token>
<token>System.Net.Http.Formatting.UriPathExtensionMapping,new</token>
</entry>
</dictionary>
