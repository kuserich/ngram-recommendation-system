<?xml version="1.0" encoding="UTF-8"?><dictionary case_sensitive="false">
<entry count="6">
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
</entry>
<entry count="8">
<token>CSharpSourceEmitter.SourceEmitter,new</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
</entry>
<entry count="8">
<token>CSharpSourceEmitter.SourceEmitterOutputString,new</token>
<token>CSharpSourceEmitter.SourceEmitter,new</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
</entry>
<entry count="2">
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
</entry>
<entry count="4">
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.SourceEmitter,TraverseChildren</token>
</entry>
<entry count="4">
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.SourceEmitter,TraverseChildren</token>
</entry>
<entry count="2">
<token>CSharpSourceEmitter.SourceEmitterOutputTextWriter,new</token>
<token>CSharpSourceEmitter.SourceEmitter,new</token>
</entry>
<entry count="4">
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.SourceEmitter,TraverseChildren</token>
</entry>
<entry count="11">
<token>CSharpSourceEmitter.SourceEmitterOutputString,new</token>
<token>CSharpSourceEmitter.SourceEmitter,new</token>
</entry>
<entry count="2">
<token>CSharpSourceEmitter.SourceEmitterOutputString,new</token>
<token>CSharpSourceEmitter.SourceEmitter,new</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
</entry>
<entry count="10">
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
</entry>
<entry count="19">
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
</entry>
<entry count="14">
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
</entry>
<entry count="2">
<token>CSharpSourceEmitter.SourceEmitter,new</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
</entry>
<entry count="4">
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.SourceEmitter,TraverseChildren</token>
</entry>
</dictionary>
