<?xml version="1.0" encoding="UTF-8"?><dictionary case_sensitive="false">
<entry count="1">
<token>CSharpSourceEmitter.SourceEmitterOutputString,new</token>
<token>CSharpSourceEmitter.SourceEmitter,new</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,new</token>
<token>CSharpSourceEmitter.SourceEmitter,new</token>
</entry>
<entry count="1">
<token>CSharpSourceEmitter.SourceEmitterOutputString,new</token>
<token>CSharpSourceEmitter.SourceEmitter,new</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,new</token>
</entry>
<entry count="192">
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
</entry>
<entry count="2048">
<token>CSharpSourceEmitter.SourceEmitterOutputString,new</token>
<token>CSharpSourceEmitter.SourceEmitter,new</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
</entry>
<entry count="1">
<token>CSharpSourceEmitter.SourceEmitter,new</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,new</token>
<token>CSharpSourceEmitter.SourceEmitter,new</token>
</entry>
<entry count="72">
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.SourceEmitter,TraverseChildren</token>
</entry>
<entry count="2057">
<token>CSharpSourceEmitter.SourceEmitterOutputString,new</token>
<token>CSharpSourceEmitter.SourceEmitter,new</token>
</entry>
<entry count="1562">
<token>CSharpSourceEmitter.SourceEmitterOutputString,new</token>
<token>CSharpSourceEmitter.SourceEmitter,new</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
</entry>
<entry count="264">
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
</entry>
<entry count="409">
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
</entry>
<entry count="246">
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
</entry>
<entry count="336">
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
</entry>
<entry count="998">
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
</entry>
<entry count="212">
<token>CSharpSourceEmitter.SourceEmitter,new</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
</entry>
<entry count="72">
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.SourceEmitter,TraverseChildren</token>
</entry>
<entry count="2048">
<token>CSharpSourceEmitter.SourceEmitter,new</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
</entry>
<entry count="2560">
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
</entry>
<entry count="72">
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.SourceEmitter,TraverseChildren</token>
</entry>
<entry count="72">
<token>CSharpSourceEmitter.ISourceEmitterOutput,Write</token>
<token>CSharpSourceEmitter.SourceEmitter,TraverseChildren</token>
</entry>
<entry count="2">
<token>CSharpSourceEmitter.SourceEmitterOutputTextWriter,new</token>
<token>CSharpSourceEmitter.SourceEmitter,new</token>
</entry>
<entry count="752">
<token>CSharpSourceEmitter.SourceEmitter,new</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
</entry>
<entry count="1">
<token>CSharpSourceEmitter.SourceEmitter,new</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,new</token>
</entry>
<entry count="34">
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
</entry>
<entry count="1562">
<token>CSharpSourceEmitter.SourceEmitter,new</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
</entry>
<entry count="752">
<token>CSharpSourceEmitter.SourceEmitterOutputString,new</token>
<token>CSharpSourceEmitter.SourceEmitter,new</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
<token>CSharpSourceEmitter.SourceEmitterOutputString,ClearData</token>
</entry>
</dictionary>
