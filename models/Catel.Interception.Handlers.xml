<?xml version="1.0" encoding="UTF-8"?><dictionary case_sensitive="false">
<entry count="16">
<token>Catel.Interception.Handlers.IInterceptorHandler,InterceptAll</token>
<token>Catel.Interception.Handlers.ICallbackHandler,OnBefore</token>
<token>Catel.Interception.Handlers.IInterceptorHandler,InterceptAll</token>
</entry>
<entry count="16">
<token>Catel.Interception.Handlers.ICallbackHandler,OnBefore</token>
<token>Catel.Interception.Handlers.IInterceptorHandler,InterceptAll</token>
<token>Catel.Interception.Handlers.ICallbackHandler,OnBefore</token>
</entry>
<entry count="24">
<token>Catel.Interception.Handlers.IInterceptorHandler,InterceptAll</token>
<token>Catel.Interception.Handlers.ICallbackHandler,OnBefore</token>
</entry>
<entry count="16">
<token>Catel.Interception.Handlers.IInterceptorHandler,InterceptAll</token>
<token>Catel.Interception.Handlers.ICallbackHandler,OnBefore</token>
<token>Catel.Interception.Handlers.IInterceptorHandler,InterceptAll</token>
<token>Catel.Interception.Handlers.ICallbackHandler,OnBefore</token>
</entry>
<entry count="16">
<token>Catel.Interception.Handlers.ICallbackHandler,OnBefore</token>
<token>Catel.Interception.Handlers.IInterceptorHandler,InterceptAll</token>
</entry>
<entry count="8">
<token>Catel.Interception.Handlers.ICallbackHandler,OnBefore</token>
<token>Catel.Interception.Handlers.IInterceptorHandler,InterceptAll</token>
<token>Catel.Interception.Handlers.ICallbackHandler,OnBefore</token>
<token>Catel.Interception.Handlers.IInterceptorHandler,InterceptAll</token>
<token>Catel.Interception.Handlers.ICallbackHandler,OnBefore</token>
</entry>
<entry count="8">
<token>Catel.Interception.Handlers.IInterceptorHandler,InterceptAll</token>
<token>Catel.Interception.Handlers.ICallbackHandler,OnBefore</token>
<token>Catel.Interception.Handlers.IInterceptorHandler,InterceptAll</token>
<token>Catel.Interception.Handlers.ICallbackHandler,OnBefore</token>
<token>Catel.Interception.Handlers.IInterceptorHandler,InterceptAll</token>
</entry>
<entry count="8">
<token>Catel.Interception.Handlers.ICallbackHandler,OnBefore</token>
<token>Catel.Interception.Handlers.IInterceptorHandler,InterceptAll</token>
<token>Catel.Interception.Handlers.ICallbackHandler,OnBefore</token>
<token>Catel.Interception.Handlers.IInterceptorHandler,InterceptAll</token>
</entry>
</dictionary>
