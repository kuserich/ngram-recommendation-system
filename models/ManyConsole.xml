<?xml version="1.0" encoding="UTF-8"?><dictionary case_sensitive="false">
<entry count="1">
<token>ManyConsole.ConsoleCommand,SkipsCommandSummaryBeforeRunning</token>
<token>ManyConsole.ConsoleCommand,HasRequiredOption</token>
</entry>
<entry count="2">
<token>ManyConsole.ConsoleCommand,IsCommand</token>
<token>ManyConsole.ConsoleCommand,HasRequiredOption</token>
</entry>
<entry count="1">
<token>ManyConsole.ConsoleCommand,IsCommand</token>
<token>ManyConsole.ConsoleCommand,HasRequiredOption</token>
<token>ManyConsole.ConsoleCommand,SkipsCommandSummaryBeforeRunning</token>
</entry>
<entry count="4">
<token>ManyConsole.ConsoleCommand,IsCommand</token>
<token>ManyConsole.ConsoleCommand,SkipsCommandSummaryBeforeRunning</token>
</entry>
<entry count="1">
<token>ManyConsole.ConsoleCommand,HasOption</token>
<token>ManyConsole.ConsoleCommand,HasOption</token>
<token>ManyConsole.ConsoleCommand,HasOption</token>
</entry>
<entry count="1">
<token>ManyConsole.ConsoleCommand,HasOption</token>
<token>ManyConsole.ConsoleCommand,SkipsCommandSummaryBeforeRunning</token>
</entry>
<entry count="2">
<token>ManyConsole.ConsoleCommandDispatcher,FindCommandsInSameAssemblyAs</token>
<token>ManyConsole.ConsoleCommandDispatcher,DispatchCommand</token>
</entry>
<entry count="1">
<token>ManyConsole.ConsoleCommand,IsCommand</token>
<token>ManyConsole.ConsoleCommand,HasRequiredOption</token>
<token>ManyConsole.ConsoleCommand,HasOption</token>
</entry>
<entry count="1">
<token>ManyConsole.ConsoleCommand,HasRequiredOption</token>
<token>ManyConsole.ConsoleCommand,HasOption</token>
</entry>
<entry count="2">
<token>ManyConsole.ConsoleCommand,HasOption</token>
<token>ManyConsole.ConsoleCommand,HasOption</token>
</entry>
<entry count="1">
<token>ManyConsole.ConsoleCommand,HasRequiredOption</token>
<token>ManyConsole.ConsoleCommand,HasOption</token>
<token>ManyConsole.ConsoleCommand,SkipsCommandSummaryBeforeRunning</token>
</entry>
<entry count="1">
<token>ManyConsole.ConsoleCommand,IsCommand</token>
<token>ManyConsole.ConsoleCommand,SkipsCommandSummaryBeforeRunning</token>
<token>ManyConsole.ConsoleCommand,HasRequiredOption</token>
</entry>
<entry count="1">
<token>ManyConsole.ConsoleCommand,IsCommand</token>
<token>ManyConsole.ConsoleCommand,HasRequiredOption</token>
<token>ManyConsole.ConsoleCommand,HasOption</token>
<token>ManyConsole.ConsoleCommand,SkipsCommandSummaryBeforeRunning</token>
</entry>
<entry count="1">
<token>ManyConsole.ConsoleCommand,HasRequiredOption</token>
<token>ManyConsole.ConsoleCommand,SkipsCommandSummaryBeforeRunning</token>
</entry>
</dictionary>
